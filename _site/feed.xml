<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>3行代码</title>
    <description></description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sun, 05 Mar 2017 22:09:55 +0800</pubDate>
    <lastBuildDate>Sun, 05 Mar 2017 22:09:55 +0800</lastBuildDate>
    <generator>Jekyll v3.3.0</generator>
    
      <item>
        <title>UNIX 入门小教程</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#unix-&quot; id=&quot;markdown-toc-unix-&quot;&gt;UNIX 概述&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#unix&quot; id=&quot;markdown-toc-unix&quot;&gt;从功能上看 Unix&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#unix-1&quot; id=&quot;markdown-toc-unix-1&quot;&gt;从构架上看 Unix&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#section&quot; id=&quot;markdown-toc-section&quot;&gt;1. 文件体系&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#section-1&quot; id=&quot;markdown-toc-section-1&quot;&gt;修改文件权限&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#section-2&quot; id=&quot;markdown-toc-section-2&quot;&gt;文件目录&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#section-3&quot; id=&quot;markdown-toc-section-3&quot;&gt;浏览文件系统&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#section-4&quot; id=&quot;markdown-toc-section-4&quot;&gt;2. 环境变量&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#path&quot; id=&quot;markdown-toc-path&quot;&gt;PATH&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#unix--1&quot; id=&quot;markdown-toc-unix--1&quot;&gt;Unix 环境变量&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#section-5&quot; id=&quot;markdown-toc-section-5&quot;&gt;3.基础小程序&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#section-6&quot; id=&quot;markdown-toc-section-6&quot;&gt;打印文件&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#section-7&quot; id=&quot;markdown-toc-section-7&quot;&gt;发邮件&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#section-8&quot; id=&quot;markdown-toc-section-8&quot;&gt;4.用户管理与进程&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#section-9&quot; id=&quot;markdown-toc-section-9&quot;&gt;进程&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#section-10&quot; id=&quot;markdown-toc-section-10&quot;&gt;5. 网络通信&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#vim&quot; id=&quot;markdown-toc-vim&quot;&gt;6. VIM&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#section-11&quot; id=&quot;markdown-toc-section-11&quot;&gt;操作模式&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#vi&quot; id=&quot;markdown-toc-vi&quot;&gt;保存 VI&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#vi-1&quot; id=&quot;markdown-toc-vi-1&quot;&gt;退出 VI:&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#section-12&quot; id=&quot;markdown-toc-section-12&quot;&gt;重命名:&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#section-13&quot; id=&quot;markdown-toc-section-13&quot;&gt;在文本中移动光标:&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#section-14&quot; id=&quot;markdown-toc-section-14&quot;&gt;7. 性能管理:&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#section-15&quot; id=&quot;markdown-toc-section-15&quot;&gt;性能工具&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#os-x-&quot; id=&quot;markdown-toc-os-x-&quot;&gt;8. OS X 使用小技能&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#section-16&quot; id=&quot;markdown-toc-section-16&quot;&gt;9. 常用命令汇集&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;

  &lt;p&gt;作为一名 iOS 老司机,要想工作效率高,Unix 则是必须要熟悉的.今天扒一扒 Unix 的那些事&lt;/p&gt;

  &lt;p&gt;奉上 Unix 学习笔记,需要的拿去但请注明链接.&lt;/p&gt;

&lt;/blockquote&gt;

&lt;h3 id=&quot;unix-&quot;&gt;UNIX 概述&lt;/h3&gt;

&lt;p&gt;说起 Unix 就必须说 Bell Labs ,这个实验室厉害啊, 对计算机早期的贡献是相当大的.像大家熟知的 Unix \ C  都是这家公司发明创建的,
实验室目前是 Nokia 公司的.关于贝尔实验室,更多介绍请戳 &lt;a href=&quot;https://en.wikipedia.org/wiki/Bell_Labs&quot;&gt;wikipedia&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;其实关于操作系统,以前是学过的,但不知道为啥就分不清了…以下简单介绍下 Unix \ OS X \ Linux \ Windows 的异同,可以有一个直观的认识.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Unix : GUI 是 X Window(在内核外跑的应用),内核则包括 X Server(与内核通信)与 X Client(负责显示)两部分;&lt;/li&gt;
  &lt;li&gt;OS X : GUI 是自己开发的 Aqua(嵌入内核中) ,而内核则是基于Darwin(Unix BSD);&lt;/li&gt;
  &lt;li&gt;OS   : 注意和 OS X 是不同的,OS X 是全新设计基于 Unix 内核的,而 OS 内核基于 Mach(微内核) .&lt;/li&gt;
  &lt;li&gt;Linux : 也是基于 Unix 内核的.&lt;/li&gt;
  &lt;li&gt;Windows : 内核是 DOS  NT ;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;除上之外, Unix 的变体有: Solaris Unix,AIX,HP Unix,BSD以及 Linux 等等&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h5 id=&quot;unix&quot;&gt;从功能上看 Unix&lt;/h5&gt;

&lt;ul&gt;
  &lt;li&gt;内核: 操作系统的核心,调度任务和管理存储;&lt;/li&gt;
  &lt;li&gt;shell: 连接和解释用户的命令，从内存中调用程序并执行它们;&lt;/li&gt;
  &lt;li&gt;工具和应用程序: 为操作系统提供附加功能.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://ooo.0o0.ooo/2017/03/05/58bb78709b9d2.png&quot; alt=&quot;屏幕快照 2017-03-05 10.34.16.png&quot; /&gt;&lt;/p&gt;

&lt;h5 id=&quot;unix-1&quot;&gt;从构架上看 Unix&lt;/h5&gt;

&lt;p&gt;&lt;img src=&quot;https://www.tutorialspoint.com/unix/images/unix_architecture.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;上图展示了 Unix 的基本框架:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;内核 : 内核是操作系统的核心,它与硬件和大多数任务（如内存管理，任务调度和文件管理）交互&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Shell: shell 是处理请求的实用程序,当在终端上键入命令时，shell 会解释该命令并调用所需的程序。shell对所有命令使用标准语法。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;命令和实用程序 :有各种命令和实用程序，您可以在您的日常活动中使用。cp，mv，cat和grep等是命令和实用程序的几个例子。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;文件和目录 : Unix的所有数据都组织成文件。然后将所有文件组织到目录中。这些目录进一步组织成称为文件系统的树状结构。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;section&quot;&gt;1. 文件体系&lt;/h3&gt;

&lt;p&gt;Unix中的每个文件都有以下属性&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;所有者权限  所有者的权限决定文件所有者可对文件执行的操作。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;组权限    组的权限决定了用户，文件所属组的成员可以对文件执行哪些操作。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;其他人权限  其他人的权限指示所有其他用户可对文件执行的操作。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ls -l /home/amrood
-rwxr-xr--  1 amrood   users 1024  Nov 2 00:10  myfile
drwxr-xr--- 1 amrood   users 1024  Nov 2 00:10  mydir
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;ul&gt;
  &lt;li&gt;d 开头的表示目录&lt;/li&gt;
  &lt;li&gt;第一列表示不同的访问模式,权限被分成三组(所有者,组,其他人权限 )，权限：read（r），write（w），execute（x）&lt;/li&gt;
  &lt;li&gt;-rwxr-xr–  表示(2-4)所有者权限: rwx ,(5-7)组权限: xr ,(8-10)其他人权限: r&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;section-1&quot;&gt;修改文件权限&lt;/h5&gt;

&lt;p&gt;chmod（change mode）命令。有两种方式使用chmod - 符号模式和绝对模式&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;符号模式&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;ul&gt;
    &lt;li&gt;添加权限, - - 删除权限 = 设置指定权限&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$chmod o+wx testfile
$ls -l testfile
-rwxrwxrwx  1 amrood   users 1024  Nov 2 00:10  testfile
$chmod u-x testfile
$ls -l testfile
-rw-rwxrwx  1 amrood   users 1024  Nov 2 00:10  testfile
$chmod g = rx testfile
$ls -l testfile
-rw-r-xrwx  1 amrood   users 1024  Nov 2 00:10  testfile

# 以下是如何在一行上组合这些命令 -

$chmod o+wx,u-x,g = rx testfile
$ls -l testfile
-rw-r-xrwx  1 amrood   users 1024  Nov 2 00:10  testfile
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;绝对模式&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;数   八进制权限表示    参考文献
0   没有权限          --- ---
1   执行权限              - X
2   写权限              -w-
3   执行和写入权限    1（执行）+ 2（写）= 3  -wx
4   读取权限            r--
5   读取和执行权限     4（读取）+ 1（执行）= 5 rx
6   读写权限        4（读）+ 2（写）= 6  rw-
7   所有权限       4（读）+ 2（写）+ 1（执行）= 7   rwx
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ls -l testfile
-rwxrwxr--  1 amrood   users 1024  Nov 2 00:10  testfile
然后修改:
$ chmod 755 testfile
$ls -l testfile
-rwxr-xr-x  1 amrood   users 1024  Nov 2 00:10  testfile
$chmod 743 testfile
$ls -l testfile
-rwxr---wx  1 amrood   users 1024  Nov 2 00:10  testfile
$chmod 043 testfile
$ls -l testfile
----r---wx  1 amrood   users 1024  Nov 2 00:10  testfile
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h5 id=&quot;section-2&quot;&gt;文件目录&lt;/h5&gt;

&lt;ul&gt;
  &lt;li&gt;/    : 根目录,命令:$ cd /&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ cd / ;ls
# 列出根目录的文件夹:
Applications        home
Library             installer.failurerequests
Network             net
System              opt
Users               private
Volumes             sbin
bin                 tmp
cores               usr
dev                 var
etc
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;关于上述目录说明如下:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;/bin  : 这是可执行文件所在的位置。这些文件可供所有用户使用&lt;/li&gt;
  &lt;li&gt;/dev  : 设备驱动&lt;/li&gt;
  &lt;li&gt;/etc  : 管理程序目录命令，配置文件，磁盘配置文件，有效用户列表，组，以太网，主机，在哪里发送关键消息&lt;/li&gt;
  &lt;li&gt;/lib  : 含共享库文件和有时其他与内核相关的文件&lt;/li&gt;
  &lt;li&gt;/home : 包含用户和其他帐户的主目录&lt;/li&gt;
  &lt;li&gt;/tmp  : 保存系统引导之间使用的临时文件&lt;/li&gt;
  &lt;li&gt;/usr  : 用于其他目的，可供许多用户使用。包括管理命令，共享文件，库文件和其他&lt;/li&gt;
  &lt;li&gt;/var  : 通常包含可变长度文件，例如日志和打印文件以及可能包含可变数据量的任何其他类型的文件&lt;/li&gt;
  &lt;li&gt;/sbin : 包含二进制（可执行文件）文件，通常用于系统管理。例如，fdisk和ifconfig utlities&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;….&lt;/p&gt;

&lt;h5 id=&quot;section-3&quot;&gt;浏览文件系统&lt;/h5&gt;

&lt;ul&gt;
  &lt;li&gt;$cat 文件名      : 显示文件内容&lt;/li&gt;
  &lt;li&gt;$cd 目录名       : 进入目录&lt;/li&gt;
  &lt;li&gt;$cp file1 file2 : 将file1 内容复制到 file2 ,或者将 file1 复制到 file2 目录中&lt;/li&gt;
  &lt;li&gt;$file 文件名     : 显示文件类型&lt;/li&gt;
  &lt;li&gt;$head 文件名     : 显示文件开头&lt;/li&gt;
  &lt;li&gt;$mkdir 目录名    : 创建文件夹&lt;/li&gt;
  &lt;li&gt;$mv file1 file2 : 移动file1 到file2&lt;/li&gt;
  &lt;li&gt;$rm filename    : 删除文件&lt;/li&gt;
  &lt;li&gt;$rmdir dirname  : 删除目录&lt;/li&gt;
  &lt;li&gt;$touch filename : 创建空白文件或修改现有文件或其属性&lt;/li&gt;
  &lt;li&gt;$whereis 文件名  : 显示文件的位置&lt;/li&gt;
  &lt;li&gt;$which filename : 如果文件在PATH中，则显示文件的位置&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://www.tutorialspoint.com/unix/unix-file-system.htm&quot;&gt;更多文件相关内容&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;section-4&quot;&gt;2. 环境变量&lt;/h3&gt;

&lt;p&gt;在登录 Unix 系统时,会先初始化设置环境变量,读取/ etc / profile(OS X:.profile) 文件,
如果 Home目录存在 profile 文件,就会读取,并在终端显示 $ 符号.&lt;/p&gt;

&lt;h5 id=&quot;path&quot;&gt;PATH&lt;/h5&gt;

&lt;p&gt;PATH变量指定shell应查找命令的位置。通常Path变量设置如下&lt;/p&gt;

&lt;p&gt;$PATH=/bin:/usr/bin&lt;/p&gt;

&lt;p&gt;这里，用冒号字符（:)分隔的每个单独的条目是目录&lt;/p&gt;

&lt;p&gt;我自己的 profile 文件 PATH 设置如下:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$vim .bash_profile&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;结果如下:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# 加载 .profile&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[[&lt;/span&gt; -s &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$HOME&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/.profile&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;source&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$HOME&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/.profile&quot;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# Load the default .profile&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# 加载 RVM &lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[[&lt;/span&gt; -s &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$HOME&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/.rvm/scripts/rvm&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;source&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$HOME&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/.rvm/scripts/rvm&quot;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# Load RVM into a shell session *as a function*&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# 设置 PATH 路径&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PATH&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;:/usr/local/mysql-5.6.12-osx10.7-x86_64/bin/mysql

&lt;span class=&quot;c&quot;&gt;# 设置 PATH 路径&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/usr/local/bin:&lt;span class=&quot;nv&quot;&gt;$PATH&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# 设置 PATH 路径&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$HOME&lt;/span&gt;/bin/:&lt;span class=&quot;nv&quot;&gt;$PATH&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# 设置 PATH 路径&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;THEOS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/opt/theos

&lt;span class=&quot;c&quot;&gt;# 设置 PATH 路径&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$THEOS&lt;/span&gt;/bin:&lt;span class=&quot;nv&quot;&gt;$PATH&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;注意之所以会设置这么多的路径,是因为:当请求 shell 执行命令的时候, shel 会从 PATH 路径中寻找命令,如果不存在,就不会执行:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ home
-bash: home: command not found
# 这是因为上述没有 PATH 路径没有 home 命令 ,shell 无法解释 home 

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h5 id=&quot;unix--1&quot;&gt;Unix 环境变量&lt;/h5&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;- HOME 当前用户主目录:
$ echo $HOME
/Users/jiangxiaocai

- PATH  打印当前的 PATH 路径 
$ echo $PATH

- PWD 当前目录路径
$ pwd
/Users/jiangxiaocai

- RANDOM 每次引用都生成一个介于0和32,767之间的随机整数
$ echo $RANDOM
20303

- TERM 显示类型
$ echo $TERM
xterm-256color

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;https://www.tutorialspoint.com/unix/unix-environment.htm&quot;&gt;更多的请看&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;section-5&quot;&gt;3.基础小程序&lt;/h3&gt;

&lt;h5 id=&quot;section-6&quot;&gt;打印文件&lt;/h5&gt;

&lt;ul&gt;
  &lt;li&gt;使用 pr&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;$pr 文件 即可打印文件的内容&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# pr 语法如下:
pr option(s) filename(s)
$pr txt.txt

# -k 产生 K 列输出:
$pr -2 txt.txt 

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;使用 cat&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;$cat txt.txt&lt;/p&gt;

&lt;h5 id=&quot;section-7&quot;&gt;发邮件&lt;/h5&gt;

&lt;p&gt;语法:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$mail [-s subject] [-c cc-addr] [-b bcc-addr] to-addr

# 以下是将测试消息发送到admin@yahoo.com的示例。
$mail -s &quot;Test Message&quot; admin@yahoo.com 
#...
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;https://www.tutorialspoint.com/unix/unix-file-permission.htm&quot;&gt;更多参见&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;section-8&quot;&gt;4.用户管理与进程&lt;/h3&gt;

&lt;p&gt;Unix 上有三种账户:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;根账户:可以运行任何命令&lt;/li&gt;
  &lt;li&gt;系统账户:系统帐户是操作系统特定组件所需的帐户，例如邮件帐户和sshd帐户。这些帐户通常需要您的系统上的某些特定功能，对它们的任何修改可能会对系统产生不利影响。&lt;/li&gt;
  &lt;li&gt;用户帐户:
用户帐户为用户和用户组提供对系统的交互式访问。一般用户通常分配到这些帐户，并且通常对关键系统文件和目录的访问受限。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://www.tutorialspoint.com/unix/unix-user-administration.htm&quot;&gt;更多账户资料&lt;/a&gt;&lt;/p&gt;

&lt;h5 id=&quot;section-9&quot;&gt;进程&lt;/h5&gt;

&lt;p&gt;操作系统通过称为pid或进程ID的五位ID号跟踪进程。系统中的每个进程都有一个唯一的pid。&lt;/p&gt;

&lt;p&gt;通过运行ps（process status）命令很容易看到你自己的进程，如下所示&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ps
PID       TTY      TIME        CMD
18358     ttyp3    00:00:00    sh
18361     ttyp3    00:01:31    abiword
18789     ttyp3    00:00:00    ps
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;-f（f为full）选项 &lt;code class=&quot;highlighter-rouge&quot;&gt;$ps -f&lt;/code&gt; 精细显示&lt;/p&gt;

&lt;h3 id=&quot;section-10&quot;&gt;5. 网络通信&lt;/h3&gt;

&lt;p&gt;Unix 系统可以通过终端进行电子邮件的通信.&lt;/p&gt;

&lt;p&gt;$ping 该命令发送回送请求到网络上可用的主机。使用此命令，您可以检查远程主机是否响应良好。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$ping hostname or ip-address&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;使用 traceroute 诊断到某个主机的路由节点&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;$ traceroute oschina.net&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;检查某个主机是否运行 HTTP 服务，或者检查某网站是否可用&lt;/li&gt;
&lt;/ul&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;$ curl -I www.oschina.net&lt;/td&gt;
      &lt;td&gt;head -n 1&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;ul&gt;
  &lt;li&gt;使用 dig 来诊断域名信息&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;$ dig www.oschina.net A&lt;/p&gt;

&lt;p&gt;$ dig www.oschina.net MX&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;显示系统路由表&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;$ netstat -r&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;显示活动网络连接&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;$ netstat -an&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;显示网络统计&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;$ netstat -s&lt;/p&gt;

&lt;h3 id=&quot;vim&quot;&gt;6. VIM&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;$vi filename      如果新文件已经不存在，则创建新文件，否则打开现有文件&lt;/li&gt;
  &lt;li&gt;$vi -R filename   以只读模式打开现有文件。&lt;/li&gt;
  &lt;li&gt;$view filename    只读模式打开&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;section-11&quot;&gt;操作模式&lt;/h5&gt;

&lt;ul&gt;
  &lt;li&gt;命令模式 - 此模式允许您执行管理任务，例如保存文件，执行命令，移动光标，剪切（ying）和粘贴线或单词，以及查找和替换。在这种模式下，无论你输入什么都被解释为一个命令。&lt;/li&gt;
  &lt;li&gt;插入模式 - 此模式允许您将文本插入文件。在此模式下键入的所有内容都将被解释为输入并放在文件中。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;vi始终在命令模式下启动。要输入文本，您必须处于插入模式，只需输入i。要退出插入模式，请按Esc键，这将使您返回命令模式。
如果您不确定您所处的模式，请按Esc键两次; 这将带你到命令模式。使用vi编辑器打开文件&lt;/p&gt;

&lt;h5 id=&quot;vi&quot;&gt;保存 VI&lt;/h5&gt;

&lt;ul&gt;
  &lt;li&gt;ESC 进入命令模式，键入冒号和w,即可保存&lt;/li&gt;
  &lt;li&gt;ESC 进入命令模式，键入’冒号和’wq’, 或者键入’冒号和’zz’   然后回车.这时会保存退出 .&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;vi-1&quot;&gt;退出 VI:&lt;/h5&gt;

&lt;ul&gt;
  &lt;li&gt;ESC 进入命令模式，键入冒号和’q’,然后回车.这时会提示保存.&lt;/li&gt;
  &lt;li&gt;ESC 进入命令模式，键入冒号和’q!’,然后回车.这时会直接退出,不进行提示.&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;section-12&quot;&gt;重命名:&lt;/h5&gt;

&lt;ul&gt;
  &lt;li&gt;ESC 进入命令模式，键入’冒号和’w filename2’和return .&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;section-13&quot;&gt;在文本中移动光标:&lt;/h5&gt;

&lt;p&gt;要在文件中移动而不影响文本，您必须处于命令模式（按两次Esc）。下表列出了几个可用于一次移动一个字符的命令：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;k 将光标向上移动一行&lt;/li&gt;
  &lt;li&gt;j 将光标向下移动一行&lt;/li&gt;
  &lt;li&gt;h    将光标移动到左一个字符位置&lt;/li&gt;
  &lt;li&gt;l  将光标向右移动一个字符位置&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://www.tutorialspoint.com/unix/unix-vi-editor.htm&quot;&gt;更多参见&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;section-14&quot;&gt;7. 性能管理:&lt;/h3&gt;

&lt;h5 id=&quot;section-15&quot;&gt;性能工具&lt;/h5&gt;

&lt;p&gt;Unix提供以下重要工具来测量和微调Unix系统性能&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;nice/renice    运行具有修改的调度优先级的程序&lt;/li&gt;
  &lt;li&gt;$netstat       打印网络连接，路由表，接口统计信息，伪装连接和多播成员资格&lt;/li&gt;
  &lt;li&gt;$time          帮助计时一个简单的命令或提供资源使用&lt;/li&gt;
  &lt;li&gt;$uptime        这是系统负载平均&lt;/li&gt;
  &lt;li&gt;$ps      报告当前进程的快照&lt;/li&gt;
  &lt;li&gt;$vmstat       报告虚拟内存统计&lt;/li&gt;
  &lt;li&gt;$gprof        显示调用图配置文件数据&lt;/li&gt;
  &lt;li&gt;$prof         促进过程分析&lt;/li&gt;
  &lt;li&gt;$top   [有用] 显示系统任务: 很详细&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;os-x-&quot;&gt;8. OS X 使用小技能&lt;/h3&gt;

&lt;p&gt;tab 键可以自动补全路径:&lt;/p&gt;

&lt;p&gt;Tab Complete 是 command line 中最能给你节省时间的特性之一，利用它的自动完成文件、目录名称功能还可以防止你输入错误。使用cd进入你的 home folder，使用cd P命令，然后按下tab按键。你可能会听到错误音，因为你的 home folder 内有多个 P 开头的文件夹。再按一次tab，Terminal 将会为你列出 P 开头的两个文件夹：Public 和 Pictures。按U，再按tab，Terminal 则会自动为你补全Public/。Tab complete 同样会处理那些特殊字符。&lt;/p&gt;

&lt;h3 id=&quot;section-16&quot;&gt;9. 常用命令汇集&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;使用\反斜杠转义&lt;/li&gt;
  &lt;li&gt;使用;来分开两个命令,从而在一行执行,例如:&lt;code class=&quot;highlighter-rouge&quot;&gt;cd \bin ; ls&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;获取帮助:$man pwd ,用户获取 pwd 命令的联机帮助,其他类似.&lt;/li&gt;
  &lt;li&gt;$ctrl+c 关闭进行&lt;/li&gt;
  &lt;li&gt;$kill -signal pid 关闭某个 PID 的进程&lt;/li&gt;
  &lt;li&gt;$w 查看谁正在登录到你的 Mac 机器&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
  &lt;li&gt;系统用户:&lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
  &lt;li&gt;$login 登录电脑,首先要输入用户名,回车输入密码&lt;/li&gt;
  &lt;li&gt;$passwd 修改当前用户的密码&lt;/li&gt;
  &lt;li&gt;$whoami 获取当前是哪个用户登录的&lt;/li&gt;
  &lt;li&gt;$who    当前用户信息&lt;/li&gt;
  &lt;li&gt;$users  当前用户信息&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
  &lt;li&gt;文件管理:&lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
  &lt;li&gt;$ cd $HOME 进入用户父目录&lt;/li&gt;
  &lt;li&gt;$cd .. 进入父目录,相对目录&lt;/li&gt;
  &lt;li&gt;$cd \ 进入根目录&lt;/li&gt;
  &lt;li&gt;$ls    列出当前文件夹的内容&lt;/li&gt;
  &lt;li&gt;$ls -l 在ls 基础上列出详细信息 (其中以 d …..开头的项表示目录)&lt;/li&gt;
  &lt;li&gt;$ls -l 列出权限信息&lt;/li&gt;
  &lt;li&gt;$cat 文件名      : 显示文件内容&lt;/li&gt;
  &lt;li&gt;$cd 目录名       : 进入目录&lt;/li&gt;
  &lt;li&gt;$cp file1 file2 : 将file1 内容复制到 file2 ,或者将 file1 复制到 file2 目录中&lt;/li&gt;
  &lt;li&gt;$file 文件名     : 显示文件类型&lt;/li&gt;
  &lt;li&gt;$head 文件名     : 显示文件开头&lt;/li&gt;
  &lt;li&gt;$mkdir 目录名    : 创建文件夹&lt;/li&gt;
  &lt;li&gt;$mv file1 file2 : 移动file1 到file2&lt;/li&gt;
  &lt;li&gt;$rm filename    : 删除文件&lt;/li&gt;
  &lt;li&gt;$rmdir dirname  : 删除目录&lt;/li&gt;
  &lt;li&gt;$touch filename : 创建空白文件或修改现有文件或其属性&lt;/li&gt;
  &lt;li&gt;$whereis 文件名  : 显示文件的位置&lt;/li&gt;
  &lt;li&gt;$which filename : 如果文件在PATH中，则显示文件的位置&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
  &lt;li&gt;重启关机:&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;**注意 + sudo **&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;$logout     注销&lt;/li&gt;
  &lt;li&gt;$sudo halt       立即关机&lt;/li&gt;
  &lt;li&gt;$init 0     在关闭系统之前，使用预定义的脚本关闭系统以同步和清理系统&lt;/li&gt;
  &lt;li&gt;$init 6     系统完全关闭然后重新启动，重新启动系统&lt;/li&gt;
  &lt;li&gt;$poweroff   通过关闭电源关闭系统&lt;/li&gt;
  &lt;li&gt;$reboot     重启&lt;/li&gt;
  &lt;li&gt;$shutdown   关闭系统&lt;/li&gt;
  &lt;li&gt;$shutdown - r now 重启&lt;/li&gt;
  &lt;li&gt;$shutdown now 关机&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;4.日期日历:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;$cal   显示日历&lt;/li&gt;
  &lt;li&gt;$date  显示日期&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;5.其他&lt;/p&gt;

&lt;p&gt;强制 Finder 程序显示隐藏文件&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;$defaults write com.apple.finder AppleShowAllFiles TRUE&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;强制 Finder 程序不显示隐藏文件&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;$defaults write com.apple.finder AppleShowAllFiles FALSE&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;$&lt;/li&gt;
  &lt;li&gt;$&lt;/li&gt;
  &lt;li&gt;$&lt;/li&gt;
  &lt;li&gt;$&lt;/li&gt;
  &lt;li&gt;$&lt;/li&gt;
  &lt;li&gt;$&lt;/li&gt;
  &lt;li&gt;$&lt;/li&gt;
  &lt;li&gt;$&lt;/li&gt;
  &lt;li&gt;$&lt;/li&gt;
  &lt;li&gt;$&lt;/li&gt;
  &lt;li&gt;$&lt;/li&gt;
  &lt;li&gt;$&lt;/li&gt;
  &lt;li&gt;$&lt;/li&gt;
  &lt;li&gt;$&lt;/li&gt;
  &lt;li&gt;$&lt;/li&gt;
  &lt;li&gt;$&lt;/li&gt;
  &lt;li&gt;$&lt;/li&gt;
  &lt;li&gt;$&lt;/li&gt;
  &lt;li&gt;$&lt;/li&gt;
  &lt;li&gt;$&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://upclinux.github.io/intro/07/script/&quot;&gt;关于脚本和批处理,这里介绍的还可以&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.tutorialspoint.com/unix_commands/index.htm&quot;&gt;Unix 系统命令&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Bell_Labs&quot;&gt;贝尔实验室的维基百科&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://s3-us-west-2.amazonaws.com/belllabs-microsite-unixhistory/tutorial.html&quot;&gt;Unix 档案&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://tldp.org/LDP/abs/html/opprecedence.html&quot;&gt;高级Bash脚本指南&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://tldp.org/LDP/abs/html/&quot;&gt;高级Bash脚本指南&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.tutorialspoint.com/unix/unix-shell.htm&quot;&gt;Unix   Shell教程 英语&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://bash.cyberciti.biz/guide/Main_Page&quot;&gt;Linux  Shell教程 英语&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Sat, 04 Mar 2017 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2017/03/04/Unix/</link>
        <guid isPermaLink="true">http://localhost:4000/2017/03/04/Unix/</guid>
        
        <category>Unix</category>
        
        
        <category>Unix</category>
        
      </item>
    
      <item>
        <title>Unix</title>
        <description>&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;&lt;meta charset=&quot;utf-8&quot;&gt;&lt;meta name=&quot;layout&quot; content=&quot;post&quot;&gt;
&lt;meta name=&quot;categories&quot; content=&quot;Unix&quot;&gt;
&lt;meta name=&quot;tags&quot; content=&quot;Unix&quot;&gt;
&lt;meta name=&quot;author&quot; content=&quot;3行代码&quot;&gt;&lt;style&gt;body {
  width: 45em;
  border: 1px solid #ddd;
  outline: 1300px solid #fff;
  margin: 16px auto;
}

body .markdown-body
{
  padding: 30px;
}

@font-face {
  font-family: fontawesome-mini;
  src: url(data:font/woff;charset=utf-8;base64,d09GRgABAAAAAAzUABAAAAAAFNgAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAABGRlRNAAABbAAAABwAAAAcZMzaOEdERUYAAAGIAAAAHQAAACAAOQAET1MvMgAAAagAAAA+AAAAYHqhde9jbWFwAAAB6AAAAFIAAAFa4azkLWN2dCAAAAI8AAAAKAAAACgFgwioZnBnbQAAAmQAAAGxAAACZVO0L6dnYXNwAAAEGAAAAAgAAAAIAAAAEGdseWYAAAQgAAAFDgAACMz7eroHaGVhZAAACTAAAAAwAAAANgWEOEloaGVhAAAJYAAAAB0AAAAkDGEGa2htdHgAAAmAAAAAEwAAADBEgAAQbG9jYQAACZQAAAAaAAAAGgsICJBtYXhwAAAJsAAAACAAAAAgASgBD25hbWUAAAnQAAACZwAABOD4no+3cG9zdAAADDgAAABsAAAAmF+yXM9wcmVwAAAMpAAAAC4AAAAusPIrFAAAAAEAAAAAyYlvMQAAAADLVHQgAAAAAM/u9uZ4nGNgZGBg4ANiCQYQYGJgBEJuIGYB8xgABMMAPgAAAHicY2Bm42OcwMDKwMLSw2LMwMDQBqGZihmiwHycoKCyqJjB4YPDh4NsDP+BfNb3DIuAFCOSEgUGRgAKDgt4AAB4nGNgYGBmgGAZBkYGEAgB8hjBfBYGCyDNxcDBwMTA9MHhQ9SHrA8H//9nYACyQyFs/sP86/kX8HtB9UIBIxsDXICRCUgwMaACRoZhDwA3fxKSAAAAAAHyAHABJQB/AIEAdAFGAOsBIwC/ALgAxACGAGYAugBNACcA/wCIeJxdUbtOW0EQ3Q0PA4HE2CA52hSzmZDGe6EFCcTVjWJkO4XlCGk3cpGLcQEfQIFEDdqvGaChpEibBiEXSHxCPiESM2uIojQ7O7NzzpkzS8qRqnfpa89T5ySQwt0GzTb9Tki1swD3pOvrjYy0gwdabGb0ynX7/gsGm9GUO2oA5T1vKQ8ZTTuBWrSn/tH8Cob7/B/zOxi0NNP01DoJ6SEE5ptxS4PvGc26yw/6gtXhYjAwpJim4i4/plL+tzTnasuwtZHRvIMzEfnJNEBTa20Emv7UIdXzcRRLkMumsTaYmLL+JBPBhcl0VVO1zPjawV2ys+hggyrNgQfYw1Z5DB4ODyYU0rckyiwNEfZiq8QIEZMcCjnl3Mn+pED5SBLGvElKO+OGtQbGkdfAoDZPs/88m01tbx3C+FkcwXe/GUs6+MiG2hgRYjtiKYAJREJGVfmGGs+9LAbkUvvPQJSA5fGPf50ItO7YRDyXtXUOMVYIen7b3PLLirtWuc6LQndvqmqo0inN+17OvscDnh4Lw0FjwZvP+/5Kgfo8LK40aA4EQ3o3ev+iteqIq7wXPrIn07+xWgAAAAABAAH//wAPeJyFlctvG1UUh+/12DPN1B7P3JnYjj2Ox4/MuDHxJH5N3UdaEUQLqBIkfQQioJWQ6AMEQkIqsPGCPwA1otuWSmTBhjtps2ADWbJg3EpIXbGouqSbCraJw7kzNo2dRN1cnXN1ZvT7zuuiMEI7ncizyA0URofRBJpCdbQuIFShYY+GZRrxMDVtih5TwQPHtXDFFSIKoWIbuREBjLH27Ny4MsbVx+uOJThavebgVrNRLAiYx06rXsvhxLgWx9xpfHdrs/ekc2Pl2cpPCVEITQpwbj8VQhfXSq2m+Wxqaq2D73Kne5e3NjHqQNj3CRYlJlgUl/jRNP+2Gs2pNYRQiOnmUaQDqm30KqKiTTWPWjboxnTWpvgxjXo0KrtZXAHt7hwIz0YVcj88JnKlJKi3NPAwLyDwZudSmJSMMJFDYaOkaol6XtESx3Gt1VTytdZJ3DCLeaVhVnCBH1fycHTxFXwPX+l2e3d6H/TufGGmMTLTnbSJUdo00zuBswMO/nl3YLeL/wnu9/limCuD3vC54h5NBVz6Li414AI8Vx3iiosKcQXUbrvhFFiYb++HN4DaF4XzFW0fIN4XDWJ3a3XQoq9V8WiyRmdsatV9xUcHims1JloH0YUa090G3Tro3mC6c01f+YwCPquINr1PTaCP6rVTOOmf0GE2dBc7zWIhji3/5MchSuBHgDbU99RMWt3YUNMZMJmx92YP6NsHx/5/M1yvInpnkIOM3Z8fA3JQ2lW1RFC1KaBPDFXNAHYYvGy73aYZZZ3HifbeuiVZCpwA3oQBs0wGPYJbJfg60xrKEbKiNtTe1adwrpBRwlAuQ3q3VRaX0QmQ9a49BTSCuF1MLfQ6+tinOubRBZuWPNoMevGMT+V41KitO1is3D/tpMcq1JHZqDHGs8DoYGDkxJgKjHROeTCmhZvzPm9pod+ltKm4PN7Dyvvldlpsg8D+4AUJZ3F/JBstZz7cbFRxsaAGV6yX/dkcycWf8eS3QlQea+YLjdm3yrOnrhFpUyKVvFE4lpv4bO3Svx/6F/4xmiDu/RT5iI++lko18mY1oX+5UGKR6kmVjM/Zb76yfHtxy+h/SyQ0lLdpdKy/lWB6szatetQJ8nZ80A2Qt6ift6gJeavU3BO4gtxs/KCtNPVibCtYCWY3SIlSBPKXZALXiIR9oZeJ1AuMyxLpHIy/yO7vSiSE+kZvk0ihJ30HgHfzZtEMmvV58x6dtqns0XTAW7Vdm4HJ04OCp/crOO7rd9SGxQAE/mVA9xRN+kVSMRFF6S9JFGUtthkjBA5tFCWc2l4V43Ex9GmUP3SI37Jjmir9KqlaDJ4S4JB3vuM/jzyH1+8MuoZ+QGzfnvPoJb96cZlWjMcKLfgDwB7E634JTY+asjsPzS5CiVnEWY+KsrsIN5rn3mAPjqmQBxGjcGKB9f9ZxY3mYC2L85CJ2FXIxKKyHk+dg0FHbuEc7D5NzWUX32WxFcWNGRAbvwSx0RmIXVDuYySafluQBmzA/ssqJAMLnli+WIC90Gw4lm85wcp0qjArEDPJJV/sSx4P9ungTpgMw5gVC1XO4uULq0s3v1rqLi0vX/z65vlH50f8T/RHmSPTk5xxWBWOluMT6WiOy+tdvWxlV/XQb3o3c6Ssr+r6I708GsX9/nzp1tKFh0s3v7m4vAy/Hnb/KMOvc1wump6Il48K6mGDy02X9Yd65pa+nQIjk76lWxCkG8NBCP0HQS9IpAAAeJxjYGRgYGBhcCrq214Qz2/zlUGenQEEzr/77oug/zewFbB+AHI5GJhAogBwKQ0qeJxjYGRgYH3/P46BgZ0BBNgKGBgZUAEPAE/7At0AAAB4nGNngAB2IGYjhBsYBAAIYADVAAAAAAAAAAAAAFwAyAEeAaACCgKmAx4DggRmAAAAAQAAAAwAagAEAAAAAAACAAEAAgAWAAABAAChAAAAAHiclZI7bxQxFIWPd/JkUYQChEhIyAVKgdBMskm1QkKrRETpQiLRUczueB/K7HhlOxttg8LvoKPgP9DxFxANDR0tHRWi4NjrPIBEgh1p/dm+vufcawNYFWsQmP6e4jSyQB2fI9cwj++RE9wTjyPP4LYoI89iWbyLPIe6+Bh5Hs9rryMv4GbtW+RF3EhuRa7jbrIbeQkPkjdUETOLnL0Kip4FVvAhco1RXyMnSPEz8gzWxE7kWTwUp5HnsCLeR57HW/El8gJWa58iL+JO7UfkOh4l9yMv4UnyEtvQGGECgwF66MNBooF1bGCL1ELB/TYU+ZBRlvsKQ44Se6jQ4a7hef+fh72Crv25kp+8lNWGmeKoOI5jJLb1aGIGvb6TjfWNLdkqdFvJw4l1amjlXtXRZqRN7lSRylZZyhBqpVFWmTEXgWfUrpi/hZOQXdOd4rKuXOtEWT3k5IArPRzTUU5tHKjecZkTpnVbNOnt6jzN8240GD4xtikvZW56043rPMg/dS+dlOceXoR+WPbJ55Dsekq1lJpnypsMUsYOdCW30o103Ytu/lvh+5RWFLfBjm9/N8hJntPhvx92rnoE/kyHdGasGy754kw36vsVf/lFeBi+0COu+cfgQr42G3CRpeLoZ53gmfe3X6rcKt5oVxnptHR9JS8ehVUd5wvvahN2uqxOOpMXapibI5k7Zwbt4xBSaTfoKBufhAnO/uqNcfK8OTs0OQ6l7JIqFjDhYj5WcjevCnI/1DDiI8j4ndWb/5YzDZWh79yomWXeXj7Nnw70/2TIeFPTrlSh89k1ObOSRVZWZfgF0r/zJQB4nG2JUQuCQBCEd07TTg36fb2IyBaLd3vWaUh/vmSJnvpgmG8YcmS8X3Shf3R7QA4OBUocUKHGER5NNbOOEvwc1txnuWkTRb/aPjimJ5vXabI+3VfOiyS15UWvyezM2xiGOPyuMohOH8O8JiO4Af+FsAGNAEuwCFBYsQEBjlmxRgYrWCGwEFlLsBRSWCGwgFkdsAYrXFhZsBQrAAA=) format('woff');
}

@font-face {
  font-family: octicons-anchor;
  src: url(data:font/woff;charset=utf-8;base64,d09GRgABAAAAAAYcAA0AAAAACjQAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAABGRlRNAAABMAAAABwAAAAca8vGTk9TLzIAAAFMAAAARAAAAFZG1VHVY21hcAAAAZAAAAA+AAABQgAP9AdjdnQgAAAB0AAAAAQAAAAEACICiGdhc3AAAAHUAAAACAAAAAj//wADZ2x5ZgAAAdwAAADRAAABEKyikaNoZWFkAAACsAAAAC0AAAA2AtXoA2hoZWEAAALgAAAAHAAAACQHngNFaG10eAAAAvwAAAAQAAAAEAwAACJsb2NhAAADDAAAAAoAAAAKALIAVG1heHAAAAMYAAAAHwAAACABEAB2bmFtZQAAAzgAAALBAAAFu3I9x/Nwb3N0AAAF/AAAAB0AAAAvaoFvbwAAAAEAAAAAzBdyYwAAAADP2IQvAAAAAM/bz7t4nGNgZGFgnMDAysDB1Ml0hoGBoR9CM75mMGLkYGBgYmBlZsAKAtJcUxgcPsR8iGF2+O/AEMPsznAYKMwIkgMA5REMOXicY2BgYGaAYBkGRgYQsAHyGMF8FgYFIM0ChED+h5j//yEk/3KoSgZGNgYYk4GRCUgwMaACRoZhDwCs7QgGAAAAIgKIAAAAAf//AAJ4nHWMMQrCQBBF/0zWrCCIKUQsTDCL2EXMohYGSSmorScInsRGL2DOYJe0Ntp7BK+gJ1BxF1stZvjz/v8DRghQzEc4kIgKwiAppcA9LtzKLSkdNhKFY3HF4lK69ExKslx7Xa+vPRVS43G98vG1DnkDMIBUgFN0MDXflU8tbaZOUkXUH0+U27RoRpOIyCKjbMCVejwypzJJG4jIwb43rfl6wbwanocrJm9XFYfskuVC5K/TPyczNU7b84CXcbxks1Un6H6tLH9vf2LRnn8Ax7A5WQAAAHicY2BkYGAA4teL1+yI57f5ysDNwgAC529f0kOmWRiYVgEpDgYmEA8AUzEKsQAAAHicY2BkYGB2+O/AEMPCAAJAkpEBFbAAADgKAe0EAAAiAAAAAAQAAAAEAAAAAAAAKgAqACoAiAAAeJxjYGRgYGBhsGFgYgABEMkFhAwM/xn0QAIAD6YBhwB4nI1Ty07cMBS9QwKlQapQW3VXySvEqDCZGbGaHULiIQ1FKgjWMxknMfLEke2A+IJu+wntrt/QbVf9gG75jK577Lg8K1qQPCfnnnt8fX1NRC/pmjrk/zprC+8D7tBy9DHgBXoWfQ44Av8t4Bj4Z8CLtBL9CniJluPXASf0Lm4CXqFX8Q84dOLnMB17N4c7tBo1AS/Qi+hTwBH4rwHHwN8DXqQ30XXAS7QaLwSc0Gn8NuAVWou/gFmnjLrEaEh9GmDdDGgL3B4JsrRPDU2hTOiMSuJUIdKQQayiAth69r6akSSFqIJuA19TrzCIaY8sIoxyrNIrL//pw7A2iMygkX5vDj+G+kuoLdX4GlGK/8Lnlz6/h9MpmoO9rafrz7ILXEHHaAx95s9lsI7AHNMBWEZHULnfAXwG9/ZqdzLI08iuwRloXE8kfhXYAvE23+23DU3t626rbs8/8adv+9DWknsHp3E17oCf+Z48rvEQNZ78paYM38qfk3v/u3l3u3GXN2Dmvmvpf1Srwk3pB/VSsp512bA/GG5i2WJ7wu430yQ5K3nFGiOqgtmSB5pJVSizwaacmUZzZhXLlZTq8qGGFY2YcSkqbth6aW1tRmlaCFs2016m5qn36SbJrqosG4uMV4aP2PHBmB3tjtmgN2izkGQyLWprekbIntJFing32a5rKWCN/SdSoga45EJykyQ7asZvHQ8PTm6cslIpwyeyjbVltNikc2HTR7YKh9LBl9DADC0U/jLcBZDKrMhUBfQBvXRzLtFtjU9eNHKin0x5InTqb8lNpfKv1s1xHzTXRqgKzek/mb7nB8RZTCDhGEX3kK/8Q75AmUM/eLkfA+0Hi908Kx4eNsMgudg5GLdRD7a84npi+YxNr5i5KIbW5izXas7cHXIMAau1OueZhfj+cOcP3P8MNIWLyYOBuxL6DRylJ4cAAAB4nGNgYoAALjDJyIAOWMCiTIxMLDmZedkABtIBygAAAA==) format('woff');
}

.markdown-body {
  font-family: sans-serif;
  -ms-text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%;
  color: #333333;
  overflow: hidden;
  font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;Segoe UI&quot;, Arial, freesans, sans-serif;
  font-size: 16px;
  line-height: 1.6;
  word-wrap: break-word;
}

.markdown-body a {
  background: transparent;
}

.markdown-body a:active,
.markdown-body a:hover {
  outline: 0;
}

.markdown-body b,
.markdown-body strong {
  font-weight: bold;
}

.markdown-body mark {
  background: #ff0;
  color: #000;
  font-style: italic;
  font-weight: bold;
}

.markdown-body sub,
.markdown-body sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}
.markdown-body sup {
  top: -0.5em;
}
.markdown-body sub {
  bottom: -0.25em;
}

.markdown-body h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

.markdown-body img {
  border: 0;
}

.markdown-body hr {
  -moz-box-sizing: content-box;
  box-sizing: content-box;
  height: 0;
}

.markdown-body pre {
  overflow: auto;
}

.markdown-body code,
.markdown-body kbd,
.markdown-body pre,
.markdown-body samp {
  font-family: monospace, monospace;
  font-size: 1em;
}

.markdown-body input {
  color: inherit;
  font: inherit;
  margin: 0;
}

.markdown-body html input[disabled] {
  cursor: default;
}

.markdown-body input {
  line-height: normal;
}

.markdown-body input[type=&quot;checkbox&quot;] {
  box-sizing: border-box;
  padding: 0;
}

.markdown-body table {
  border-collapse: collapse;
  border-spacing: 0;
}

.markdown-body td,
.markdown-body th {
  padding: 0;
}

.markdown-body .codehilitetable {
  border: 0;
  border-spacing: 0;
}

.markdown-body .codehilitetable tr {
  border: 0;
}

.markdown-body .codehilitetable pre,
.markdown-body .codehilitetable div.codehilite {
  margin: 0;
}

.markdown-body .linenos,
.markdown-body .code,
.markdown-body .codehilitetable td {
  border: 0;
  padding: 0;
}

.markdown-body td:not(.linenos) .linenodiv {
  padding: 0 !important;
}

.markdown-body .code {
  width: 100%;
}

.markdown-body .linenos div pre,
.markdown-body .linenodiv pre,
.markdown-body .linenodiv {
  border: 0;
  -webkit-border-radius: 0;
  -moz-border-radius: 0;
  border-radius: 0;
  -webkit-border-top-left-radius: 3px;
  -webkit-border-bottom-left-radius: 3px;
  -moz-border-radius-topleft: 3px;
  -moz-border-radius-bottomleft: 3px;
  border-top-left-radius: 3px;
  border-bottom-left-radius: 3px;
}

.markdown-body .code div pre,
.markdown-body .code div {
  border: 0;
  -webkit-border-radius: 0;
  -moz-border-radius: 0;
  border-radius: 0;
  -webkit-border-top-right-radius: 3px;
  -webkit-border-bottom-right-radius: 3px;
  -moz-border-radius-topright: 3px;
  -moz-border-radius-bottomright: 3px;
  border-top-right-radius: 3px;
  border-bottom-right-radius: 3px;
}

.markdown-body * {
  -moz-box-sizing: border-box;
  box-sizing: border-box;
}

.markdown-body input {
  font: 13px Helvetica, arial, freesans, clean, sans-serif, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;;
  line-height: 1.4;
}

.markdown-body a {
  color: #4183c4;
  text-decoration: none;
}

.markdown-body a:hover,
.markdown-body a:focus,
.markdown-body a:active {
  text-decoration: underline;
}

.markdown-body hr {
  height: 0;
  margin: 15px 0;
  overflow: hidden;
  background: transparent;
  border: 0;
  border-bottom: 1px solid #ddd;
}

.markdown-body hr:before,
.markdown-body hr:after {
  display: table;
  content: &quot; &quot;;
}

.markdown-body hr:after {
  clear: both;
}

.markdown-body h1,
.markdown-body h2,
.markdown-body h3,
.markdown-body h4,
.markdown-body h5,
.markdown-body h6 {
  margin-top: 15px;
  margin-bottom: 15px;
  line-height: 1.1;
}

.markdown-body h1 {
  font-size: 30px;
}

.markdown-body h2 {
  font-size: 21px;
}

.markdown-body h3 {
  font-size: 16px;
}

.markdown-body h4 {
  font-size: 14px;
}

.markdown-body h5 {
  font-size: 12px;
}

.markdown-body h6 {
  font-size: 11px;
}

.markdown-body blockquote {
  margin: 0;
}

.markdown-body ul,
.markdown-body ol {
  padding: 0;
  margin-top: 0;
  margin-bottom: 0;
}

.markdown-body ol ol,
.markdown-body ul ol {
  list-style-type: lower-roman;
}

.markdown-body ul ul ol,
.markdown-body ul ol ol,
.markdown-body ol ul ol,
.markdown-body ol ol ol {
  list-style-type: lower-alpha;
}

.markdown-body dd {
  margin-left: 0;
}

.markdown-body code,
.markdown-body pre,
.markdown-body samp {
  font-family: Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace;
  font-size: 12px;
}

.markdown-body pre {
  margin-top: 0;
  margin-bottom: 0;
}

.markdown-body kbd {
  background-color: #e7e7e7;
  background-image: -moz-linear-gradient(#fefefe, #e7e7e7);
  background-image: -webkit-linear-gradient(#fefefe, #e7e7e7);
  background-image: linear-gradient(#fefefe, #e7e7e7);
  background-repeat: repeat-x;
  border-radius: 2px;
  border: 1px solid #cfcfcf;
  color: #000;
  padding: 3px 5px;
  line-height: 10px;
  font: 11px Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace;
  display: inline-block;
}

.markdown-body&gt;*:first-child {
  margin-top: 0 !important;
}

.markdown-body&gt;*:last-child {
  margin-bottom: 0 !important;
}

.markdown-body .headeranchor-link {
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  display: block;
  padding-right: 6px;
  padding-left: 30px;
  margin-left: -30px;
}

.markdown-body .headeranchor-link:focus {
  outline: none;
}

.markdown-body h1,
.markdown-body h2,
.markdown-body h3,
.markdown-body h4,
.markdown-body h5,
.markdown-body h6 {
  position: relative;
  margin-top: 1em;
  margin-bottom: 16px;
  font-weight: bold;
  line-height: 1.4;
}

.markdown-body h1 .headeranchor,
.markdown-body h2 .headeranchor,
.markdown-body h3 .headeranchor,
.markdown-body h4 .headeranchor,
.markdown-body h5 .headeranchor,
.markdown-body h6 .headeranchor {
  display: none;
  color: #000;
  vertical-align: middle;
}

.markdown-body h1:hover .headeranchor-link,
.markdown-body h2:hover .headeranchor-link,
.markdown-body h3:hover .headeranchor-link,
.markdown-body h4:hover .headeranchor-link,
.markdown-body h5:hover .headeranchor-link,
.markdown-body h6:hover .headeranchor-link {
  height: 1em;
  padding-left: 8px;
  margin-left: -30px;
  line-height: 1;
  text-decoration: none;
}

.markdown-body h1:hover .headeranchor-link .headeranchor,
.markdown-body h2:hover .headeranchor-link .headeranchor,
.markdown-body h3:hover .headeranchor-link .headeranchor,
.markdown-body h4:hover .headeranchor-link .headeranchor,
.markdown-body h5:hover .headeranchor-link .headeranchor,
.markdown-body h6:hover .headeranchor-link .headeranchor {
  display: inline-block;
}

.markdown-body h1 {
  padding-bottom: 0.3em;
  font-size: 2.25em;
  line-height: 1.2;
  border-bottom: 1px solid #eee;
}

.markdown-body h2 {
  padding-bottom: 0.3em;
  font-size: 1.75em;
  line-height: 1.225;
  border-bottom: 1px solid #eee;
}

.markdown-body h3 {
  font-size: 1.5em;
  line-height: 1.43;
}

.markdown-body h4 {
  font-size: 1.25em;
}

.markdown-body h5 {
  font-size: 1em;
}

.markdown-body h6 {
  font-size: 1em;
  color: #777;
}

.markdown-body p,
.markdown-body blockquote,
.markdown-body ul,
.markdown-body ol,
.markdown-body dl,
.markdown-body table,
.markdown-body pre,
.markdown-body .admonition {
  margin-top: 0;
  margin-bottom: 16px;
}

.markdown-body hr {
  height: 4px;
  padding: 0;
  margin: 16px 0;
  background-color: #e7e7e7;
  border: 0 none;
}

.markdown-body ul,
.markdown-body ol {
  padding-left: 2em;
}

.markdown-body ul ul,
.markdown-body ul ol,
.markdown-body ol ol,
.markdown-body ol ul {
  margin-top: 0;
  margin-bottom: 0;
}

.markdown-body li&gt;p {
  margin-top: 16px;
}

.markdown-body dl {
  padding: 0;
}

.markdown-body dl dt {
  padding: 0;
  margin-top: 16px;
  font-size: 1em;
  font-style: italic;
  font-weight: bold;
}

.markdown-body dl dd {
  padding: 0 16px;
  margin-bottom: 16px;
}

.markdown-body blockquote {
  padding: 0 15px;
  color: #777;
  border-left: 4px solid #ddd;
}

.markdown-body blockquote&gt;:first-child {
  margin-top: 0;
}

.markdown-body blockquote&gt;:last-child {
  margin-bottom: 0;
}

.markdown-body table {
  display: block;
  width: 100%;
  overflow: auto;
  word-break: normal;
  word-break: keep-all;
}

.markdown-body table th {
  font-weight: bold;
}

.markdown-body table th,
.markdown-body table td {
  padding: 6px 13px;
  border: 1px solid #ddd;
}

.markdown-body table tr {
  background-color: #fff;
  border-top: 1px solid #ccc;
}

.markdown-body table tr:nth-child(2n) {
  background-color: #f8f8f8;
}

.markdown-body img {
  max-width: 100%;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
}

.markdown-body code,
.markdown-body samp {
  padding: 0;
  padding-top: 0.2em;
  padding-bottom: 0.2em;
  margin: 0;
  font-size: 85%;
  background-color: rgba(0,0,0,0.04);
  border-radius: 3px;
}

.markdown-body code:before,
.markdown-body code:after {
  letter-spacing: -0.2em;
  content: &quot;\00a0&quot;;
}

.markdown-body pre&gt;code {
  padding: 0;
  margin: 0;
  font-size: 100%;
  word-break: normal;
  white-space: pre;
  background: transparent;
  border: 0;
}

.markdown-body .codehilite {
  margin-bottom: 16px;
}

.markdown-body .codehilite pre,
.markdown-body pre {
  padding: 16px;
  overflow: auto;
  font-size: 85%;
  line-height: 1.45;
  background-color: #f7f7f7;
  border-radius: 3px;
}

.markdown-body .codehilite pre {
  margin-bottom: 0;
  word-break: normal;
}

.markdown-body pre {
  word-wrap: normal;
}

.markdown-body pre code {
  display: inline;
  max-width: initial;
  padding: 0;
  margin: 0;
  overflow: initial;
  line-height: inherit;
  word-wrap: normal;
  background-color: transparent;
  border: 0;
}

.markdown-body pre code:before,
.markdown-body pre code:after {
  content: normal;
}

/* Admonition */
.markdown-body .admonition {
  -webkit-border-radius: 3px;
  -moz-border-radius: 3px;
  position: relative;
  border-radius: 3px;
  border: 1px solid #e0e0e0;
  border-left: 6px solid #333;
  padding: 10px 10px 10px 30px;
}

.markdown-body .admonition table {
  color: #333;
}

.markdown-body .admonition p {
  padding: 0;
}

.markdown-body .admonition-title {
  font-weight: bold;
  margin: 0;
}

.markdown-body .admonition&gt;.admonition-title {
  color: #333;
}

.markdown-body .attention&gt;.admonition-title {
  color: #a6d796;
}

.markdown-body .caution&gt;.admonition-title {
  color: #d7a796;
}

.markdown-body .hint&gt;.admonition-title {
  color: #96c6d7;
}

.markdown-body .danger&gt;.admonition-title {
  color: #c25f77;
}

.markdown-body .question&gt;.admonition-title {
  color: #96a6d7;
}

.markdown-body .note&gt;.admonition-title {
  color: #d7c896;
}

.markdown-body .admonition:before,
.markdown-body .attention:before,
.markdown-body .caution:before,
.markdown-body .hint:before,
.markdown-body .danger:before,
.markdown-body .question:before,
.markdown-body .note:before {
  font: normal normal 16px fontawesome-mini;
  -moz-osx-font-smoothing: grayscale;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  line-height: 1.5;
  color: #333;
  position: absolute;
  left: 0;
  top: 0;
  padding-top: 10px;
  padding-left: 10px;
}

.markdown-body .admonition:before {
  content: &quot;\f056\00a0&quot;;
  color: 333;
}

.markdown-body .attention:before {
  content: &quot;\f058\00a0&quot;;
  color: #a6d796;
}

.markdown-body .caution:before {
  content: &quot;\f06a\00a0&quot;;
  color: #d7a796;
}

.markdown-body .hint:before {
  content: &quot;\f05a\00a0&quot;;
  color: #96c6d7;
}

.markdown-body .danger:before {
  content: &quot;\f057\00a0&quot;;
  color: #c25f77;
}

.markdown-body .question:before {
  content: &quot;\f059\00a0&quot;;
  color: #96a6d7;
}

.markdown-body .note:before {
  content: &quot;\f040\00a0&quot;;
  color: #d7c896;
}

.markdown-body .admonition::after {
  content: normal;
}

.markdown-body .attention {
  border-left: 6px solid #a6d796;
}

.markdown-body .caution {
  border-left: 6px solid #d7a796;
}

.markdown-body .hint {
  border-left: 6px solid #96c6d7;
}

.markdown-body .danger {
  border-left: 6px solid #c25f77;
}

.markdown-body .question {
  border-left: 6px solid #96a6d7;
}

.markdown-body .note {
  border-left: 6px solid #d7c896;
}

.markdown-body .admonition&gt;*:first-child {
  margin-top: 0 !important;
}

.markdown-body .admonition&gt;*:last-child {
  margin-bottom: 0 !important;
}

/* progress bar*/
.markdown-body .progress {
  display: block;
  width: 300px;
  margin: 10px 0;
  height: 24px;
  -webkit-border-radius: 3px;
  -moz-border-radius: 3px;
  border-radius: 3px;
  background-color: #ededed;
  position: relative;
  box-shadow: inset -1px 1px 3px rgba(0, 0, 0, .1);
}

.markdown-body .progress-label {
  position: absolute;
  text-align: center;
  font-weight: bold;
  width: 100%; margin: 0;
  line-height: 24px;
  color: #333;
  text-shadow: 1px 1px 0 #fefefe, -1px -1px 0 #fefefe, -1px 1px 0 #fefefe, 1px -1px 0 #fefefe, 0 1px 0 #fefefe, 0 -1px 0 #fefefe, 1px 0 0 #fefefe, -1px 0 0 #fefefe, 1px 1px 2px #000;
  -webkit-font-smoothing: antialiased !important;
  white-space: nowrap;
  overflow: hidden;
}

.markdown-body .progress-bar {
  height: 24px;
  float: left;
  -webkit-border-radius: 3px;
  -moz-border-radius: 3px;
  border-radius: 3px;
  background-color: #96c6d7;
  box-shadow: inset 0 1px 0 rgba(255, 255, 255, .5), inset 0 -1px 0 rgba(0, 0, 0, .1);
  background-size: 30px 30px;
  background-image: -webkit-linear-gradient(
    135deg, rgba(255, 255, 255, .4) 27%,
    transparent 27%,
    transparent 52%, rgba(255, 255, 255, .4) 52%,
    rgba(255, 255, 255, .4) 77%,
    transparent 77%, transparent
  );
  background-image: -moz-linear-gradient(
    135deg,
    rgba(255, 255, 255, .4) 27%, transparent 27%,
    transparent 52%, rgba(255, 255, 255, .4) 52%,
    rgba(255, 255, 255, .4) 77%, transparent 77%,
    transparent
  );
  background-image: -ms-linear-gradient(
    135deg,
    rgba(255, 255, 255, .4) 27%, transparent 27%,
    transparent 52%, rgba(255, 255, 255, .4) 52%,
    rgba(255, 255, 255, .4) 77%, transparent 77%,
    transparent
  );
  background-image: -o-linear-gradient(
    135deg,
    rgba(255, 255, 255, .4) 27%, transparent 27%,
    transparent 52%, rgba(255, 255, 255, .4) 52%,
    rgba(255, 255, 255, .4) 77%, transparent 77%,
    transparent
  );
  background-image: linear-gradient(
    135deg,
    rgba(255, 255, 255, .4) 27%, transparent 27%,
    transparent 52%, rgba(255, 255, 255, .4) 52%,
    rgba(255, 255, 255, .4) 77%, transparent 77%,
    transparent
  );
}

.markdown-body .progress-100plus .progress-bar {
  background-color: #a6d796;
}

.markdown-body .progress-80plus .progress-bar {
  background-color: #c6d796;
}

.markdown-body .progress-60plus .progress-bar {
  background-color: #d7c896;
}

.markdown-body .progress-40plus .progress-bar {
  background-color: #d7a796;
}

.markdown-body .progress-20plus .progress-bar {
  background-color: #d796a6;
}

.markdown-body .progress-0plus .progress-bar {
  background-color: #c25f77;
}

.markdown-body .candystripe-animate .progress-bar{
  -webkit-animation: animate-stripes 3s linear infinite;
  -moz-animation: animate-stripes 3s linear infinite;
  animation: animate-stripes 3s linear infinite;
}

@-webkit-keyframes animate-stripes {
  0% {
    background-position: 0 0;
  }

  100% {
    background-position: 60px 0;
  }
}

@-moz-keyframes animate-stripes {
  0% {
    background-position: 0 0;
  }

  100% {
    background-position: 60px 0;
  }
}

@keyframes animate-stripes {
  0% {
    background-position: 0 0;
  }

  100% {
    background-position: 60px 0;
  }
}

.markdown-body .gloss .progress-bar {
  box-shadow:
    inset 0 4px 12px rgba(255, 255, 255, .7),
    inset 0 -12px 0 rgba(0, 0, 0, .05);
}

/* Multimarkdown Critic Blocks */
.markdown-body .critic_mark {
  background: #ff0;
}

.markdown-body .critic_delete {
  color: #c82829;
  text-decoration: line-through;
}

.markdown-body .critic_insert {
  color: #718c00 ;
  text-decoration: underline;
}

.markdown-body .critic_comment {
  color: #8e908c;
  font-style: italic;
}

.markdown-body .headeranchor {
  font: normal normal 16px octicons-anchor;
  line-height: 1;
  display: inline-block;
  text-decoration: none;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

.headeranchor:before {
  content: '\f05c';
}

.markdown-body .task-list-item {
  list-style-type: none;
}

.markdown-body .task-list-item+.task-list-item {
  margin-top: 3px;
}

.markdown-body .task-list-item input {
  margin: 0 4px 0.25em -20px;
  vertical-align: middle;
}

/* Media */
@media only screen and (min-width: 480px) {
  .markdown-body {
    font-size:14px;
  }
}

@media only screen and (min-width: 768px) {
  .markdown-body {
    font-size:16px;
  }
}

@media print {
  .markdown-body * {
    background: transparent !important;
    color: black !important;
    filter:none !important;
    -ms-filter: none !important;
  }

  .markdown-body {
    font-size:12pt;
    max-width:100%;
    outline:none;
    border: 0;
  }

  .markdown-body a,
  .markdown-body a:visited {
    text-decoration: underline;
  }

  .markdown-body .headeranchor-link {
    display: none;
  }

  .markdown-body a[href]:after {
    content: &quot; (&quot; attr(href) &quot;)&quot;;
  }

  .markdown-body abbr[title]:after {
    content: &quot; (&quot; attr(title) &quot;)&quot;;
  }

  .markdown-body .ir a:after,
  .markdown-body a[href^=&quot;javascript:&quot;]:after,
  .markdown-body a[href^=&quot;#&quot;]:after {
    content: &quot;&quot;;
  }

  .markdown-body pre {
    white-space: pre;
    white-space: pre-wrap;
    word-wrap: break-word;
  }

  .markdown-body pre,
  .markdown-body blockquote {
    border: 1px solid #999;
    padding-right: 1em;
    page-break-inside: avoid;
  }

  .markdown-body .progress,
  .markdown-body .progress-bar {
    -moz-box-shadow: none;
    -webkit-box-shadow: none;
    box-shadow: none;
  }

  .markdown-body .progress {
    border: 1px solid #ddd;
  }

  .markdown-body .progress-bar {
    height: 22px;
    border-right: 1px solid #ddd;
  }

  .markdown-body tr,
  .markdown-body img {
    page-break-inside: avoid;
  }

  .markdown-body img {
    max-width: 100% !important;
  }

  .markdown-body p,
  .markdown-body h2,
  .markdown-body h3 {
    orphans: 3;
    widows: 3;
  }

  .markdown-body h2,
  .markdown-body h3 {
    page-break-after: avoid;
  }
}
&lt;/style&gt;&lt;title&gt;&quot;UNIX 入门小教程&quot;&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;article class=&quot;markdown-body&quot;&gt;&lt;ul&gt;
&lt;li toc=&quot;toc&quot;&gt;content&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;作为一名 iOS 老司机,要想工作效率高,Unix 则是必须要熟悉的.今天扒一扒 Unix 的那些事&lt;/p&gt;
&lt;p&gt;奉上 Unix 学习笔记,需要的拿去但请注明链接.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;unix&quot;&gt;&lt;a name=&quot;user-content-unix&quot; href=&quot;#unix&quot; class=&quot;headeranchor-link&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;headeranchor&quot;&gt;&lt;/span&gt;&lt;/a&gt;UNIX 概述&lt;/h3&gt;
&lt;p&gt;说起 Unix 就必须说 Bell Labs ,这个实验室厉害啊, 对计算机早期的贡献是相当大的.像大家熟知的 Unix \ C  都是这家公司发明创建的,&lt;br /&gt;
实验室目前是 Nokia 公司的.关于贝尔实验室,更多介绍请戳 &lt;a href=&quot;https://en.wikipedia.org/wiki/Bell_Labs&quot;&gt;wikipedia&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;其实关于操作系统,以前是学过的,但不知道为啥就分不清了&amp;hellip;以下简单介绍下 Unix \ OS X \ Linux \ Windows 的异同,可以有一个直观的认识.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Unix : GUI 是 X Window(在内核外跑的应用),内核则包括 X Server(与内核通信)与 X Client(负责显示)两部分;&lt;/li&gt;
&lt;li&gt;OS X : GUI 是自己开发的 Aqua(嵌入内核中) ,而内核则是基于Darwin(Unix BSD);&lt;/li&gt;
&lt;li&gt;OS   : 注意和 OS X 是不同的,OS X 是全新设计基于 Unix 内核的,而 OS 内核基于 Mach(微内核) .&lt;/li&gt;
&lt;li&gt;Linux : 也是基于 Unix 内核的.&lt;/li&gt;
&lt;li&gt;Windows : 内核是 DOS  NT ;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;除上之外, Unix 的变体有: Solaris Unix,AIX,HP Unix,BSD以及 Linux 等等&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h5 id=&quot;unix_1&quot;&gt;&lt;a name=&quot;user-content-unix_1&quot; href=&quot;#unix_1&quot; class=&quot;headeranchor-link&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;headeranchor&quot;&gt;&lt;/span&gt;&lt;/a&gt;从功能上看 Unix&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;内核: 操作系统的核心,调度任务和管理存储;&lt;/li&gt;
&lt;li&gt;shell: 连接和解释用户的命令，从内存中调用程序并执行它们;&lt;/li&gt;
&lt;li&gt;工具和应用程序: 为操作系统提供附加功能.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt=&quot;屏幕快照 2017-03-05 10.34.16.png&quot; src=&quot;https://ooo.0o0.ooo/2017/03/05/58bb78709b9d2.png&quot; /&gt;&lt;/p&gt;
&lt;h5 id=&quot;unix_2&quot;&gt;&lt;a name=&quot;user-content-unix_2&quot; href=&quot;#unix_2&quot; class=&quot;headeranchor-link&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;headeranchor&quot;&gt;&lt;/span&gt;&lt;/a&gt;从构架上看 Unix&lt;/h5&gt;
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://www.tutorialspoint.com/unix/images/unix_architecture.jpg&quot; /&gt;&lt;/p&gt;
&lt;p&gt;上图展示了 Unix 的基本框架:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;内核 : 内核是操作系统的核心,它与硬件和大多数任务（如内存管理，任务调度和文件管理）交互&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Shell: shell 是处理请求的实用程序,当在终端上键入命令时，shell 会解释该命令并调用所需的程序。shell对所有命令使用标准语法。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;命令和实用程序 :有各种命令和实用程序，您可以在您的日常活动中使用。cp，mv，cat和grep等是命令和实用程序的几个例子。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;文件和目录 : Unix的所有数据都组织成文件。然后将所有文件组织到目录中。这些目录进一步组织成称为文件系统的树状结构。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;1&quot;&gt;&lt;a name=&quot;user-content-1&quot; href=&quot;#1&quot; class=&quot;headeranchor-link&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;headeranchor&quot;&gt;&lt;/span&gt;&lt;/a&gt;1. 文件体系&lt;/h3&gt;
&lt;p&gt;Unix中的每个文件都有以下属性 &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;所有者权限  所有者的权限决定文件所有者可对文件执行的操作。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;组权限    组的权限决定了用户，文件所属组的成员可以对文件执行哪些操作。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;其他人权限  其他人的权限指示所有其他用户可对文件执行的操作。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;pre&gt;&lt;code&gt;$ls -l /home/amrood
-rwxr-xr--  1 amrood   users 1024  Nov 2 00:10  myfile
drwxr-xr--- 1 amrood   users 1024  Nov 2 00:10  mydir
&lt;/code&gt;&lt;/pre&gt;&lt;br /&gt;
- d 开头的表示目录&lt;br /&gt;
- 第一列表示不同的访问模式,权限被分成三组(所有者,组,其他人权限 )，权限：read（r），write（w），execute（x）&lt;br /&gt;
- -rwxr-xr&amp;ndash;  表示(2-4)所有者权限: rwx ,(5-7)组权限: xr ,(8-10)其他人权限: r &lt;/p&gt;
&lt;h5 id=&quot;_1&quot;&gt;&lt;a name=&quot;user-content-_1&quot; href=&quot;#_1&quot; class=&quot;headeranchor-link&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;headeranchor&quot;&gt;&lt;/span&gt;&lt;/a&gt;修改文件权限&lt;/h5&gt;
&lt;p&gt;chmod（change mode）命令。有两种方式使用chmod - 符号模式和绝对模式&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;符号模式&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;添加权限, - - 删除权限 = 设置指定权限&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code&gt;$chmod o+wx testfile
$ls -l testfile
-rwxrwxrwx  1 amrood   users 1024  Nov 2 00:10  testfile
$chmod u-x testfile
$ls -l testfile
-rw-rwxrwx  1 amrood   users 1024  Nov 2 00:10  testfile
$chmod g = rx testfile
$ls -l testfile
-rw-r-xrwx  1 amrood   users 1024  Nov 2 00:10  testfile

# 以下是如何在一行上组合这些命令 -

$chmod o+wx,u-x,g = rx testfile
$ls -l testfile
-rw-r-xrwx  1 amrood   users 1024  Nov 2 00:10  testfile
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;绝对模式&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;数   八进制权限表示    参考文献
0   没有权限          --- ---
1   执行权限              - X
2   写权限              -w-
3   执行和写入权限    1（执行）+ 2（写）= 3  -wx
4   读取权限            r--
5   读取和执行权限     4（读取）+ 1（执行）= 5 rx
6   读写权限        4（读）+ 2（写）= 6  rw-
7   所有权限       4（读）+ 2（写）+ 1（执行）= 7   rwx
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;$ls -l testfile
-rwxrwxr--  1 amrood   users 1024  Nov 2 00:10  testfile
然后修改:
$ chmod 755 testfile
$ls -l testfile
-rwxr-xr-x  1 amrood   users 1024  Nov 2 00:10  testfile
$chmod 743 testfile
$ls -l testfile
-rwxr---wx  1 amrood   users 1024  Nov 2 00:10  testfile
$chmod 043 testfile
$ls -l testfile
----r---wx  1 amrood   users 1024  Nov 2 00:10  testfile
&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&quot;_2&quot;&gt;&lt;a name=&quot;user-content-_2&quot; href=&quot;#_2&quot; class=&quot;headeranchor-link&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;headeranchor&quot;&gt;&lt;/span&gt;&lt;/a&gt;文件目录&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;/    : 根目录,命令:$ cd /&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;$ cd / ;ls
# 列出根目录的文件夹:
Applications        home
Library             installer.failurerequests
Network             net
System              opt
Users               private
Volumes             sbin
bin                 tmp
cores               usr
dev                 var
etc
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;关于上述目录说明如下:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;/bin  : 这是可执行文件所在的位置。这些文件可供所有用户使用&lt;/li&gt;
&lt;li&gt;/dev  : 设备驱动&lt;/li&gt;
&lt;li&gt;/etc  : 管理程序目录命令，配置文件，磁盘配置文件，有效用户列表，组，以太网，主机，在哪里发送关键消息&lt;/li&gt;
&lt;li&gt;/lib  : 含共享库文件和有时其他与内核相关的文件&lt;/li&gt;
&lt;li&gt;/home : 包含用户和其他帐户的主目录&lt;/li&gt;
&lt;li&gt;/tmp  : 保存系统引导之间使用的临时文件&lt;/li&gt;
&lt;li&gt;/usr  : 用于其他目的，可供许多用户使用。包括管理命令，共享文件，库文件和其他&lt;/li&gt;
&lt;li&gt;/var  : 通常包含可变长度文件，例如日志和打印文件以及可能包含可变数据量的任何其他类型的文件&lt;/li&gt;
&lt;li&gt;/sbin : 包含二进制（可执行文件）文件，通常用于系统管理。例如，fdisk和ifconfig utlities&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;....&lt;/p&gt;
&lt;h5 id=&quot;_3&quot;&gt;&lt;a name=&quot;user-content-_3&quot; href=&quot;#_3&quot; class=&quot;headeranchor-link&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;headeranchor&quot;&gt;&lt;/span&gt;&lt;/a&gt;浏览文件系统&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;$cat 文件名      : 显示文件内容&lt;/li&gt;
&lt;li&gt;$cd 目录名       : 进入目录 &lt;/li&gt;
&lt;li&gt;$cp file1 file2 : 将file1 内容复制到 file2 ,或者将 file1 复制到 file2 目录中&lt;/li&gt;
&lt;li&gt;$file 文件名     : 显示文件类型&lt;/li&gt;
&lt;li&gt;$head 文件名     : 显示文件开头&lt;/li&gt;
&lt;li&gt;$mkdir 目录名    : 创建文件夹&lt;/li&gt;
&lt;li&gt;$mv file1 file2 : 移动file1 到file2   &lt;/li&gt;
&lt;li&gt;$rm filename    : 删除文件&lt;/li&gt;
&lt;li&gt;$rmdir dirname  : 删除目录&lt;/li&gt;
&lt;li&gt;$touch filename : 创建空白文件或修改现有文件或其属性&lt;/li&gt;
&lt;li&gt;$whereis 文件名  : 显示文件的位置&lt;/li&gt;
&lt;li&gt;$which filename : 如果文件在PATH中，则显示文件的位置&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&quot;https://www.tutorialspoint.com/unix/unix-file-system.htm&quot;&gt;更多文件相关内容&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;2&quot;&gt;&lt;a name=&quot;user-content-2&quot; href=&quot;#2&quot; class=&quot;headeranchor-link&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;headeranchor&quot;&gt;&lt;/span&gt;&lt;/a&gt;2. 环境变量&lt;/h3&gt;
&lt;p&gt;在登录 Unix 系统时,会先初始化设置环境变量,读取/ etc / profile(OS X:.profile) 文件,&lt;br /&gt;
如果 Home目录存在 profile 文件,就会读取,并在终端显示 $ 符号.&lt;/p&gt;
&lt;h5 id=&quot;path&quot;&gt;&lt;a name=&quot;user-content-path&quot; href=&quot;#path&quot; class=&quot;headeranchor-link&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;headeranchor&quot;&gt;&lt;/span&gt;&lt;/a&gt;PATH&lt;/h5&gt;
&lt;p&gt;PATH变量指定shell应查找命令的位置。通常Path变量设置如下 &lt;/p&gt;
&lt;p&gt;$PATH=/bin:/usr/bin&lt;/p&gt;
&lt;p&gt;这里，用冒号字符（:)分隔的每个单独的条目是目录&lt;/p&gt;
&lt;p&gt;我自己的 profile 文件 PATH 设置如下:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$vim .bash_profile&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;结果如下:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;shell&quot;&gt;# 加载 .profile
[[ -s &amp;quot;$HOME/.profile&amp;quot; ]] &amp;amp;&amp;amp; source &amp;quot;$HOME/.profile&amp;quot; # Load the default .profile

# 加载 RVM 
[[ -s &amp;quot;$HOME/.rvm/scripts/rvm&amp;quot; ]] &amp;amp;&amp;amp; source &amp;quot;$HOME/.rvm/scripts/rvm&amp;quot; # Load RVM into a shell session *as a function*

# 设置 PATH 路径
export PATH=${PATH}:/usr/local/mysql-5.6.12-osx10.7-x86_64/bin/mysql

# 设置 PATH 路径
export PATH=/usr/local/bin:$PATH

# 设置 PATH 路径
export PATH=$HOME/bin/:$PATH

# 设置 PATH 路径
export THEOS=/opt/theos

# 设置 PATH 路径
export PATH=$THEOS/bin:$PATH
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;注意之所以会设置这么多的路径,是因为:当请求 shell 执行命令的时候, shel 会从 PATH 路径中寻找命令,如果不存在,就不会执行:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ home
-bash: home: command not found
# 这是因为上述没有 PATH 路径没有 home 命令 ,shell 无法解释 home 

&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&quot;unix_3&quot;&gt;&lt;a name=&quot;user-content-unix_3&quot; href=&quot;#unix_3&quot; class=&quot;headeranchor-link&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;headeranchor&quot;&gt;&lt;/span&gt;&lt;/a&gt;Unix 环境变量&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;- HOME 当前用户主目录:
$ echo $HOME
/Users/jiangxiaocai

- PATH  打印当前的 PATH 路径 
$ echo $PATH

- PWD 当前目录路径
$ pwd
/Users/jiangxiaocai

- RANDOM 每次引用都生成一个介于0和32,767之间的随机整数
$ echo $RANDOM
20303

- TERM 显示类型
$ echo $TERM
xterm-256color

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&quot;https://www.tutorialspoint.com/unix/unix-environment.htm&quot;&gt;更多的请看&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;3&quot;&gt;&lt;a name=&quot;user-content-3&quot; href=&quot;#3&quot; class=&quot;headeranchor-link&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;headeranchor&quot;&gt;&lt;/span&gt;&lt;/a&gt;3.基础小程序&lt;/h3&gt;
&lt;h5 id=&quot;_4&quot;&gt;&lt;a name=&quot;user-content-_4&quot; href=&quot;#_4&quot; class=&quot;headeranchor-link&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;headeranchor&quot;&gt;&lt;/span&gt;&lt;/a&gt;打印文件&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;使用 pr &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;$pr 文件 即可打印文件的内容&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# pr 语法如下:
pr option(s) filename(s)
$pr txt.txt

# -k 产生 K 列输出:
$pr -2 txt.txt 

&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;使用 cat &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;$cat txt.txt &lt;/p&gt;
&lt;h5 id=&quot;_5&quot;&gt;&lt;a name=&quot;user-content-_5&quot; href=&quot;#_5&quot; class=&quot;headeranchor-link&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;headeranchor&quot;&gt;&lt;/span&gt;&lt;/a&gt;发邮件&lt;/h5&gt;
&lt;p&gt;语法:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$mail [-s subject] [-c cc-addr] [-b bcc-addr] to-addr

# 以下是将测试消息发送到admin@yahoo.com的示例。
$mail -s &amp;quot;Test Message&amp;quot; admin@yahoo.com 
#...
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&quot;https://www.tutorialspoint.com/unix/unix-file-permission.htm&quot;&gt;更多参见&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;4&quot;&gt;&lt;a name=&quot;user-content-4&quot; href=&quot;#4&quot; class=&quot;headeranchor-link&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;headeranchor&quot;&gt;&lt;/span&gt;&lt;/a&gt;4.用户管理与进程&lt;/h3&gt;
&lt;p&gt;Unix 上有三种账户:&lt;br /&gt;
- 根账户:可以运行任何命令&lt;br /&gt;
- 系统账户:系统帐户是操作系统特定组件所需的帐户，例如邮件帐户和sshd帐户。这些帐户通常需要您的系统上的某些特定功能，对它们的任何修改可能会对系统产生不利影响。&lt;br /&gt;
- 用户帐户:&lt;br /&gt;
用户帐户为用户和用户组提供对系统的交互式访问。一般用户通常分配到这些帐户，并且通常对关键系统文件和目录的访问受限。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.tutorialspoint.com/unix/unix-user-administration.htm&quot;&gt;更多账户资料&lt;/a&gt;&lt;/p&gt;
&lt;h5 id=&quot;_6&quot;&gt;&lt;a name=&quot;user-content-_6&quot; href=&quot;#_6&quot; class=&quot;headeranchor-link&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;headeranchor&quot;&gt;&lt;/span&gt;&lt;/a&gt;进程&lt;/h5&gt;
&lt;p&gt;操作系统通过称为pid或进程ID的五位ID号跟踪进程。系统中的每个进程都有一个唯一的pid。&lt;/p&gt;
&lt;p&gt;通过运行ps（process status）命令很容易看到你自己的进程，如下所示&lt;br /&gt;
&lt;pre&gt;&lt;code&gt;$ps
PID       TTY      TIME        CMD
18358     ttyp3    00:00:00    sh
18361     ttyp3    00:01:31    abiword
18789     ttyp3    00:00:00    ps
&lt;/code&gt;&lt;/pre&gt;&lt;br /&gt;
-f（f为full）选项 &lt;code&gt;$ps -f&lt;/code&gt; 精细显示&lt;/p&gt;
&lt;h3 id=&quot;5&quot;&gt;&lt;a name=&quot;user-content-5&quot; href=&quot;#5&quot; class=&quot;headeranchor-link&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;headeranchor&quot;&gt;&lt;/span&gt;&lt;/a&gt;5. 通信&lt;/h3&gt;
&lt;p&gt;Unix 系统可以通过终端进行电子邮件的通信.&lt;/p&gt;
&lt;p&gt;$ping 该命令发送回送请求到网络上可用的主机。使用此命令，您可以检查远程主机是否响应良好。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ping hostname or ip-address&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&quot;6-vim&quot;&gt;&lt;a name=&quot;user-content-6-vim&quot; href=&quot;#6-vim&quot; class=&quot;headeranchor-link&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;headeranchor&quot;&gt;&lt;/span&gt;&lt;/a&gt;6. VIM&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;$vi filename      如果新文件已经不存在，则创建新文件，否则打开现有文件&lt;/li&gt;
&lt;li&gt;$vi -R filename   以只读模式打开现有文件。&lt;/li&gt;
&lt;li&gt;$view filename    只读模式打开&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&quot;_7&quot;&gt;&lt;a name=&quot;user-content-_7&quot; href=&quot;#_7&quot; class=&quot;headeranchor-link&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;headeranchor&quot;&gt;&lt;/span&gt;&lt;/a&gt;操作模式&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;命令模式 - 此模式允许您执行管理任务，例如保存文件，执行命令，移动光标，剪切（ying）和粘贴线或单词，以及查找和替换。在这种模式下，无论你输入什么都被解释为一个命令。&lt;/li&gt;
&lt;li&gt;插入模式 - 此模式允许您将文本插入文件。在此模式下键入的所有内容都将被解释为输入并放在文件中。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;vi始终在命令模式下启动。要输入文本，您必须处于插入模式，只需输入i。要退出插入模式，请按Esc键，这将使您返回命令模式。&lt;br /&gt;
如果您不确定您所处的模式，请按Esc键两次; 这将带你到命令模式。使用vi编辑器打开文件&lt;/p&gt;
&lt;h5 id=&quot;vi&quot;&gt;&lt;a name=&quot;user-content-vi&quot; href=&quot;#vi&quot; class=&quot;headeranchor-link&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;headeranchor&quot;&gt;&lt;/span&gt;&lt;/a&gt;保存 VI&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;ESC 进入命令模式，键入冒号和w,即可保存&lt;/li&gt;
&lt;li&gt;ESC 进入命令模式，键入&amp;rsquo;冒号和&amp;rsquo;wq&amp;rsquo;, 或者键入&amp;rsquo;冒号和&amp;rsquo;zz&amp;rsquo;   然后回车.这时会保存退出 .&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&quot;vi_1&quot;&gt;&lt;a name=&quot;user-content-vi_1&quot; href=&quot;#vi_1&quot; class=&quot;headeranchor-link&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;headeranchor&quot;&gt;&lt;/span&gt;&lt;/a&gt;退出 VI:&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;ESC 进入命令模式，键入冒号和&amp;rsquo;q&amp;rsquo;,然后回车.这时会提示保存.&lt;/li&gt;
&lt;li&gt;ESC 进入命令模式，键入冒号和&amp;rsquo;q!&amp;rsquo;,然后回车.这时会直接退出,不进行提示.&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&quot;_8&quot;&gt;&lt;a name=&quot;user-content-_8&quot; href=&quot;#_8&quot; class=&quot;headeranchor-link&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;headeranchor&quot;&gt;&lt;/span&gt;&lt;/a&gt;重命名:&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;ESC 进入命令模式，键入&amp;rsquo;冒号和&amp;rsquo;w filename2&amp;rsquo;和return .&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&quot;_9&quot;&gt;&lt;a name=&quot;user-content-_9&quot; href=&quot;#_9&quot; class=&quot;headeranchor-link&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;headeranchor&quot;&gt;&lt;/span&gt;&lt;/a&gt;在文本中移动光标:&lt;/h5&gt;
&lt;p&gt;要在文件中移动而不影响文本，您必须处于命令模式（按两次Esc）。下表列出了几个可用于一次移动一个字符的命令：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;k 将光标向上移动一行&lt;/li&gt;
&lt;li&gt;j 将光标向下移动一行&lt;/li&gt;
&lt;li&gt;h    将光标移动到左一个字符位置&lt;/li&gt;
&lt;li&gt;l  将光标向右移动一个字符位置&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&quot;https://www.tutorialspoint.com/unix/unix-vi-editor.htm&quot;&gt;更多参见&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;7&quot;&gt;&lt;a name=&quot;user-content-7&quot; href=&quot;#7&quot; class=&quot;headeranchor-link&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;headeranchor&quot;&gt;&lt;/span&gt;&lt;/a&gt;7. 性能管理:&lt;/h3&gt;
&lt;h5 id=&quot;_10&quot;&gt;&lt;a name=&quot;user-content-_10&quot; href=&quot;#_10&quot; class=&quot;headeranchor-link&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;headeranchor&quot;&gt;&lt;/span&gt;&lt;/a&gt;性能工具&lt;/h5&gt;
&lt;p&gt;Unix提供以下重要工具来测量和微调Unix系统性能 &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;nice/renice    运行具有修改的调度优先级的程序&lt;/li&gt;
&lt;li&gt;$netstat       打印网络连接，路由表，接口统计信息，伪装连接和多播成员资格&lt;/li&gt;
&lt;li&gt;$time          帮助计时一个简单的命令或提供资源使用&lt;/li&gt;
&lt;li&gt;$uptime        这是系统负载平均&lt;/li&gt;
&lt;li&gt;$ps      报告当前进程的快照&lt;/li&gt;
&lt;li&gt;$vmstat       报告虚拟内存统计&lt;/li&gt;
&lt;li&gt;$gprof        显示调用图配置文件数据&lt;/li&gt;
&lt;li&gt;$prof         促进过程分析&lt;/li&gt;
&lt;li&gt;$top   [有用] 显示系统任务: 很详细&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;5_1&quot;&gt;&lt;a name=&quot;user-content-5_1&quot; href=&quot;#5_1&quot; class=&quot;headeranchor-link&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;headeranchor&quot;&gt;&lt;/span&gt;&lt;/a&gt;5. 常用命令汇集&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;使用;来分开两个命令,从而在一行执行,例如:&lt;code&gt;cd \bin ; ls&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;获取帮助:$man pwd ,用户获取 pwd 命令的联机帮助,其他类似.&lt;/li&gt;
&lt;li&gt;$ctrl+c 关闭进行&lt;/li&gt;
&lt;li&gt;$kill -signal pid 关闭某个 PID 的进程&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;系统用户:&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;$login 登录电脑,首先要输入用户名,回车输入密码&lt;/li&gt;
&lt;li&gt;$passwd 修改当前用户的密码&lt;/li&gt;
&lt;li&gt;$whoami 获取当前是哪个用户登录的&lt;/li&gt;
&lt;li&gt;$who    当前用户信息&lt;/li&gt;
&lt;li&gt;$users  当前用户信息&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;文件管理:&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;$cd \ 进入根目录&lt;/li&gt;
&lt;li&gt;$ls    列出当前文件夹的内容&lt;/li&gt;
&lt;li&gt;$ls -l 在ls 基础上列出详细信息 (其中以 d .....开头的项表示目录)&lt;/li&gt;
&lt;li&gt;$ls -l 列出权限信息&lt;/li&gt;
&lt;li&gt;$cat 文件名      : 显示文件内容&lt;/li&gt;
&lt;li&gt;$cd 目录名       : 进入目录 &lt;/li&gt;
&lt;li&gt;$cp file1 file2 : 将file1 内容复制到 file2 ,或者将 file1 复制到 file2 目录中&lt;/li&gt;
&lt;li&gt;$file 文件名     : 显示文件类型&lt;/li&gt;
&lt;li&gt;$head 文件名     : 显示文件开头&lt;/li&gt;
&lt;li&gt;$mkdir 目录名    : 创建文件夹&lt;/li&gt;
&lt;li&gt;$mv file1 file2 : 移动file1 到file2   &lt;/li&gt;
&lt;li&gt;$rm filename    : 删除文件&lt;/li&gt;
&lt;li&gt;$rmdir dirname  : 删除目录&lt;/li&gt;
&lt;li&gt;$touch filename : 创建空白文件或修改现有文件或其属性&lt;/li&gt;
&lt;li&gt;$whereis 文件名  : 显示文件的位置&lt;/li&gt;
&lt;li&gt;$which filename : 如果文件在PATH中，则显示文件的位置&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;重启关机:&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;注意 + sudo &lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;$logout     注销&lt;/li&gt;
&lt;li&gt;$sudo halt       立即关机&lt;/li&gt;
&lt;li&gt;$init 0     在关闭系统之前，使用预定义的脚本关闭系统以同步和清理系统&lt;/li&gt;
&lt;li&gt;$init 6     系统完全关闭然后重新启动，重新启动系统&lt;/li&gt;
&lt;li&gt;$poweroff   通过关闭电源关闭系统&lt;/li&gt;
&lt;li&gt;$reboot     重启&lt;/li&gt;
&lt;li&gt;$shutdown   关闭系统&lt;/li&gt;
&lt;li&gt;$shutdown - r now 重启 &lt;/li&gt;
&lt;li&gt;
&lt;p&gt;$shutdown now&lt;br /&gt;
4.日期日历:&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;$cal   显示日历&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;$date  显示日期&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;$&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;$&lt;/li&gt;
&lt;li&gt;$&lt;/li&gt;
&lt;li&gt;$&lt;/li&gt;
&lt;li&gt;$&lt;/li&gt;
&lt;li&gt;$&lt;/li&gt;
&lt;li&gt;$&lt;/li&gt;
&lt;li&gt;$&lt;/li&gt;
&lt;li&gt;$&lt;/li&gt;
&lt;li&gt;$&lt;/li&gt;
&lt;li&gt;$&lt;/li&gt;
&lt;li&gt;$&lt;/li&gt;
&lt;li&gt;$&lt;/li&gt;
&lt;li&gt;$&lt;/li&gt;
&lt;li&gt;$&lt;/li&gt;
&lt;li&gt;$&lt;/li&gt;
&lt;li&gt;$&lt;/li&gt;
&lt;li&gt;$&lt;/li&gt;
&lt;li&gt;$&lt;/li&gt;
&lt;li&gt;$&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://upclinux.github.io/intro/07/script/&quot;&gt;关于脚本和批处理,这里介绍的还可以&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.tutorialspoint.com/unix_commands/index.htm&quot;&gt;Unix 系统命令&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Bell_Labs&quot;&gt;贝尔实验室的维基百科&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://s3-us-west-2.amazonaws.com/belllabs-microsite-unixhistory/tutorial.html&quot;&gt;Unix 档案&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://tldp.org/LDP/abs/html/opprecedence.html&quot;&gt;高级Bash脚本指南&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://tldp.org/LDP/abs/html/&quot;&gt;高级Bash脚本指南&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.tutorialspoint.com/unix/unix-shell.htm&quot;&gt;Unix   Shell教程 英语&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://bash.cyberciti.biz/guide/Main_Page&quot;&gt;Linux  Shell教程 英语&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/article&gt;&lt;/body&gt;&lt;/html&gt;</description>
        <pubDate>Sat, 04 Mar 2017 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2017/03/04/Unix/</link>
        <guid isPermaLink="true">http://localhost:4000/2017/03/04/Unix/</guid>
        
        
      </item>
    
      <item>
        <title>Shell 脚本</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#shell-&quot; id=&quot;markdown-toc-shell-&quot;&gt;shell 基础&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#section&quot; id=&quot;markdown-toc-section&quot;&gt;热身小例子&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#shell--1&quot; id=&quot;markdown-toc-shell--1&quot;&gt;1. shell 概念&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#section-1&quot; id=&quot;markdown-toc-section-1&quot;&gt;2. 脚本解释器&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#section-2&quot; id=&quot;markdown-toc-section-2&quot;&gt;3. 脚本语言&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#section-3&quot; id=&quot;markdown-toc-section-3&quot;&gt;4. 编写脚本&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#section-4&quot; id=&quot;markdown-toc-section-4&quot;&gt;5. 运行脚本&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#section-5&quot; id=&quot;markdown-toc-section-5&quot;&gt;6. 变量&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#section-6&quot; id=&quot;markdown-toc-section-6&quot;&gt;定义变量&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#section-7&quot; id=&quot;markdown-toc-section-7&quot;&gt;变量类型&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#section-8&quot; id=&quot;markdown-toc-section-8&quot;&gt;使用变量&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#section-9&quot; id=&quot;markdown-toc-section-9&quot;&gt;重定义变量&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#section-10&quot; id=&quot;markdown-toc-section-10&quot;&gt;注释&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#section-11&quot; id=&quot;markdown-toc-section-11&quot;&gt;7. 字符串&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#section-12&quot; id=&quot;markdown-toc-section-12&quot;&gt;单引号&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#section-13&quot; id=&quot;markdown-toc-section-13&quot;&gt;双引号&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#section-14&quot; id=&quot;markdown-toc-section-14&quot;&gt;8. 字符串操作&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#section-15&quot; id=&quot;markdown-toc-section-15&quot;&gt;拼接字符串&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#section-16&quot; id=&quot;markdown-toc-section-16&quot;&gt;获取字符串长度：&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#section-17&quot; id=&quot;markdown-toc-section-17&quot;&gt;提取子字符串&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#section-18&quot; id=&quot;markdown-toc-section-18&quot;&gt;查找子字符串&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#section-19&quot; id=&quot;markdown-toc-section-19&quot;&gt;9. 流程控制&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#if&quot; id=&quot;markdown-toc-if&quot;&gt;if&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#if-else&quot; id=&quot;markdown-toc-if-else&quot;&gt;if else&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#for-while&quot; id=&quot;markdown-toc-for-while&quot;&gt;for while&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#section-20&quot; id=&quot;markdown-toc-section-20&quot;&gt;10. 函数&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#section-21&quot; id=&quot;markdown-toc-section-21&quot;&gt;文件包含&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#shell--2&quot; id=&quot;markdown-toc-shell--2&quot;&gt;11. 终端\shell 常用命令&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#os-x-&quot; id=&quot;markdown-toc-os-x-&quot;&gt;12. OS X 常用终端命令&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#section-22&quot; id=&quot;markdown-toc-section-22&quot;&gt;13.更多参考链接&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;

  &lt;p&gt;作为一名 iOS 老司机,工作中最常用的就是脚本\命令行了,但是没系统的看过. python 以前用的多,现在要系统的看看 shell ,虽然不一定会学的深入,但是绝对可以进一步提高我的工作效率.&lt;/p&gt;

&lt;/blockquote&gt;

&lt;p&gt;说起脚本,就得说脚本的通用性,说起通用性,就得说常见的操作系统: OS X \ Linux \ Windows \ Unix
简单介绍下异同:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;BellLAB 发明了 Unix (还有 C);&lt;/li&gt;
  &lt;li&gt;Unix 的 GUI 是 X Window(在内核外跑的应用),包括X Server(与内核通信)与X Client(负责显示)两部分;&lt;/li&gt;
  &lt;li&gt;OS X 的 GUI 是自己开发的 Aqua(嵌入内核中) ,而内核则是基于Darwin(Unix + BSD);&lt;/li&gt;
  &lt;li&gt;OS X 是全新设计的,和 OS (Mach内核)不同, OS 不是基于 Unix 的;&lt;/li&gt;
  &lt;li&gt;Linux 一开始就是免费开源的,基于 Unix.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;以上是 Unix 派的,下边的 Windows 则是 DOS + NT 系的:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Windows 则是 DOS + NT 内核;&lt;/li&gt;
  &lt;li&gt;Windows 使用反斜杠: \ 分割路径,原因在于其来自 DOS 最初支持软盘,使用斜杠: /  表示命令参数起始符号&lt;/li&gt;
  &lt;li&gt;Unix 使用斜杠:/分割路径&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;扯的有点远了…&lt;/p&gt;

&lt;p&gt;下边回归正文:&lt;/p&gt;

&lt;h3 id=&quot;shell-&quot;&gt;shell 基础&lt;/h3&gt;

&lt;p&gt;最初的 Unix shell是在20世纪70年代中期由Stephen R. Bourne写的，现在 shell 分为两种:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Bourne shell : 默认提示符是$字符。&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;Bourne Shell 的各种子类别如下：&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;blockquote&gt;
    &lt;p&gt;Bourne Shell （sh）、 Korn shell （ksh）、 Bourne Again（bash）、POSIX shell（sh）&lt;/p&gt;
  &lt;/blockquote&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;C shell: 则默认提示符是％字符。&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;C shell 子类别如下:&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;blockquote&gt;
    &lt;p&gt;C shell（csh）、 TENEX / TOPS C shell（tcsh）&lt;/p&gt;
  &lt;/blockquote&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Bourne shell是在UNIX系统上出现的第一个shell，因此它被称为“shell”。&lt;/strong&gt;
Bourne shell通常在大多数UNIX版本上安装为/ bin / sh&lt;/p&gt;

&lt;h3 id=&quot;section&quot;&gt;热身小例子&lt;/h3&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#!/bin/sh                # 制定脚本解释器,使用 /bin/sh  作为解释器&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; ~                     &lt;span class=&quot;c&quot;&gt;# 切换到当前用户的 home 目录&lt;/span&gt;
mkdir shell_txt          &lt;span class=&quot;c&quot;&gt;# 创建一个 shell_txt 文件夹&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;shell_txt             &lt;span class=&quot;c&quot;&gt;# 进入 shell_txt 文件夹&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0; i&amp;lt;10; i++&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;     &lt;span class=&quot;c&quot;&gt;# 循环10次&lt;/span&gt;
    touch txt_&lt;span class=&quot;nv&quot;&gt;$i&lt;/span&gt;.txt           &lt;span class=&quot;c&quot;&gt;# 创建10个文件:test_1…10.txt文件&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;                           &lt;span class=&quot;c&quot;&gt;# 结束循环&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;上边的脚本就创建了 shell_txt 文件夹,并创建10个 txt 文件.&lt;/li&gt;
  &lt;li&gt;cd, mkdir, touch都是系统自带的程序，一般在/bin或者/usr/bin目录下&lt;/li&gt;
  &lt;li&gt;for, do, done是sh脚本语言的关键字。&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;shell--1&quot;&gt;1. shell 概念&lt;/h3&gt;

&lt;p&gt;上边是入门热身,下边解释概念:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;ol&gt;
    &lt;li&gt;
      &lt;p&gt;shell 是指一种应用程序，这个应用程序提供了一个界面，用户通过这个界面访问操作系统内核的服务&lt;/p&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;p&gt;shell脚本（shell script），是一种为 shell 编写的脚本程序&lt;/p&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;p&gt;业界所说的shell通常都是指shell脚本&lt;/p&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;p&gt;shell编程跟java、php编程一样，只要有一个能编写代码的文本编辑器和一个能解释执行的脚本解释器就可以了。&lt;/p&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;p&gt;当前主流的操作系统都支持shell编程&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;Linux 默认安装就带了 shell 解释器&lt;/li&gt;
  &lt;li&gt;Mac OS 不仅带了 sh、bash 这两个最基础的解释器，还内置了 ksh、csh、zsh 等不常用的解释器。&lt;/li&gt;
  &lt;li&gt;windows 出厂时没有内置 shell 解释器，需要自行安装&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;section-1&quot;&gt;2. 脚本解释器&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;sh   即Bourne shell，POSIX 标准的shell解释器，它的二进制文件路径通常是/bin/sh，由Bell Labs开发&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;bash  是Bourne shell的替代品，属GNU Project，二进制文件路径通常是/bin/bash。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;业界通常混用bash、sh、和shell，比如你会经常在招聘运维工程师的文案中见到：熟悉Linux Bash编程，精通Shell编程&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;section-2&quot;&gt;3. 脚本语言&lt;/h3&gt;

&lt;p&gt;理论上讲，只要一门语言提供了解释器（而不仅是编译器），这门语言就可以胜任脚本编程，常见的解释型语言都是可以用作脚本编程的，如：Perl、Tcl、Python、PHP、Ruby。Perl是最老牌的脚本编程语言了，Python这些年也成了一些linux发行版的预置解释器。&lt;/p&gt;

&lt;p&gt;编译型语言，只要有解释器，也可以用作脚本编程，如C shell是内置的（/bin/csh），Java有第三方解释器Jshell，Ada有收费的解释器AdaScript。&lt;/p&gt;

&lt;p&gt;shell 只定义了一个非常简单的编程语言，如果你的脚本程序复杂度较高，或者要操作的数据结构比较复杂，那么还是应该使用Python、Perl这样的脚本语言，或者是你本来就已经很擅长的高级语言。因为sh和bash在这方面很弱，比如说：&lt;/p&gt;

&lt;p&gt;如果你的脚本是提供给别的用户使用，使用sh或者bash，你的脚本将具有最好的环境兼容性，perl很早就是linux标配了，python这些年也成了一些linux发行版的标配，至于mac os，它默认安装了perl、python、ruby、php、java等主流编程语言。&lt;/p&gt;

&lt;h3 id=&quot;section-3&quot;&gt;4. 编写脚本&lt;/h3&gt;

&lt;p&gt;打开文本编辑器，新建一个文件，扩展名为sh（sh代表shell），扩展名并不影响脚本执行，见名知意就好，如果你用php写shell 脚本，扩展名就用php好了。&lt;/p&gt;

&lt;p&gt;输入一些代码，第一行一般是这样：&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#!/bin/bash&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#!/usr/bin/php&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;“#!”是一个约定的标记，它告诉系统这个脚本需要什么解释器来执行。&lt;/p&gt;

&lt;h3 id=&quot;section-4&quot;&gt;5. 运行脚本&lt;/h3&gt;

&lt;p&gt;运行Shell脚本的方法：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;作为解释器参数&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;在终端,直接运行解释器 :&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$/&lt;/span&gt;bin/sh test.sh
&lt;span class=&quot;nv&quot;&gt;$/&lt;/span&gt;bin/php test.php
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;这种方式运行的脚本，不需要在第一行指定解释器信息.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;或者&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$sh&lt;/span&gt; test.sh
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;说明,以下仅挑选部分语法知识,更多的请参见文末的链接,里面内容很全的.&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&quot;section-5&quot;&gt;6. 变量&lt;/h3&gt;

&lt;p&gt;一个变量只不过是一个指向实际数据的指针&lt;/p&gt;

&lt;h5 id=&quot;section-6&quot;&gt;定义变量&lt;/h5&gt;

&lt;p&gt;定义变量时,变量名不加美元符号（$），如：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# 标量变量:
your_name=&quot;qinjx&quot;
# 只读变量
NAME=&quot;Zara Ali&quot;
readonly NAME
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h5 id=&quot;section-7&quot;&gt;变量类型&lt;/h5&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;局部变量  一个局部变量是一个变量，只是shell的当前实例中存在。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;环境变量 环境变量可用于shell的任何子进程。一些程序需要环境变量才能正常工作。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Shell变量 - shell变量是一个特殊的变量，由shell设置，是shell所需要的，以便正确地运行。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;注意: 变量名和等号之间不能有空格&lt;/p&gt;

&lt;h5 id=&quot;section-8&quot;&gt;使用变量&lt;/h5&gt;

&lt;p&gt;使用一个定义过的变量，只要在变量名前面加美元符号即可，如：&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;your_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;qinjx&quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$your_name&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;your_name&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;变量名外面的花括号是可选的，加不加都行，加花括号是为了帮助解释器识别变量的边界,比如下边的例子&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;skill &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;Ada Coffe Action Java; &lt;span class=&quot;k&quot;&gt;do
    &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;I am good at &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;skill&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Script&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;done&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;如果不给skill变量加花括号，写成echo “I am good at $skillScript”，解释器就会把$skillScript当成一个变量（其值为空），代码执行结果就不是我们期望的样子了&lt;/p&gt;

&lt;h5 id=&quot;section-9&quot;&gt;重定义变量&lt;/h5&gt;

&lt;p&gt;已定义的变量，可以被重新定义，如：&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;your_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;qinjx&quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$your_name&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;your_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;alibaba&quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$your_name&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;这样写是合法的，但注意，第二次赋值的时候不能写$your_name=”alibaba”，使用变量的时候才加美元符。&lt;/p&gt;

&lt;h5 id=&quot;section-10&quot;&gt;注释&lt;/h5&gt;

&lt;p&gt;以“#”开头的行就是注释，会被解释器忽略。&lt;/p&gt;

&lt;p&gt;多行注释&lt;/p&gt;

&lt;p&gt;sh里没有多行注释，只能每一行加一个#号&lt;/p&gt;

&lt;p&gt;如果在开发过程中，遇到大段的代码需要临时注释起来，过一会儿又取消注释，怎么办呢？每一行加个#符号太费力了，可以把这一段要注释的代码用一对花括号括起来，定义成一个函数，没有地方调用这个函数，这块代码就不会执行，达到了和注释一样的效果。&lt;/p&gt;

&lt;h3 id=&quot;section-11&quot;&gt;7. 字符串&lt;/h3&gt;

&lt;p&gt;字符串是shell编程中最常用最有用的数据类型（除了数字和字符串，也没啥其它类型好用了，哈哈），字符串可以用单引号，也可以用双引号，也可以不用引号。单双引号的区别跟PHP类似。&lt;/p&gt;

&lt;h5 id=&quot;section-12&quot;&gt;单引号&lt;/h5&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;str='this is a string'
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;单引号字符串的限制：&lt;/p&gt;

&lt;p&gt;单引号里的任何字符都会原样输出，单引号字符串中的变量是无效的
单引号字串中不能出现单引号（对单引号使用转义符后也不行）&lt;/p&gt;

&lt;h5 id=&quot;section-13&quot;&gt;双引号&lt;/h5&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;your_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'qinjx'&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Hello, I know your are &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$your_name&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;! &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;双引号里可以有变量
双引号里可以出现转义字符&lt;/p&gt;

&lt;h3 id=&quot;section-14&quot;&gt;8. 字符串操作&lt;/h3&gt;

&lt;h5 id=&quot;section-15&quot;&gt;拼接字符串&lt;/h5&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;your_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;qinjx&quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;greeting&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;hello, &quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$your_name&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot; !&quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;greeting_1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;hello, &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;your_name&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; !&quot;&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$greeting&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$greeting_1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h5 id=&quot;section-16&quot;&gt;获取字符串长度：&lt;/h5&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;string=&quot;abcd&quot;
echo ${#string} 
#输出：4
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h5 id=&quot;section-17&quot;&gt;提取子字符串&lt;/h5&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;string=&quot;alibaba is a great company&quot;
echo ${string:1:4} 
#输出：liba
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;h5 id=&quot;section-18&quot;&gt;查找子字符串&lt;/h5&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;string=&quot;alibaba is a great company&quot;
echo `expr index &quot;$string&quot; is`
#输出：8，这个语句的意思是：找出单词is在这名话中的位置
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;section-19&quot;&gt;9. 流程控制&lt;/h3&gt;

&lt;h5 id=&quot;if&quot;&gt;if&lt;/h5&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;if condition
then
    command1 
    command2
    ...
    commandN 
fi 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;写成一行&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt; if &lt;/code&gt;ps -ef&lt;/td&gt;
      &lt;td&gt;grep ssh&lt;code class=&quot;highlighter-rouge&quot;&gt;;  then echo hello; fi &lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;末尾的fi就是if倒过来拼写，后面还会遇到类似的&lt;/p&gt;

&lt;h5 id=&quot;if-else&quot;&gt;if else&lt;/h5&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;if condition
then
    command1 
    command2
    ...
    commandN
else
    command
fi 

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h5 id=&quot;for-while&quot;&gt;for while&lt;/h5&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;for var in item1 item2 ... itemN
do
    command1
    command2
    ...
    commandN
done 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;写成一行：&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;for var in item1 item2 ... itemN; do command1; command2… done;&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;section-20&quot;&gt;10. 函数&lt;/h3&gt;

&lt;h5 id=&quot;section-21&quot;&gt;文件包含&lt;/h5&gt;

&lt;p&gt;可以使用source和.关键字，如：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# 写法1
source ./function.sh
# 写法2
. ./function.sh 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;在bash里，source和.是等效的，他们都是读入function.sh的内容并执行其内容（类似PHP里的include），为了更好的可移植性，推荐使用第二种写法。&lt;/p&gt;

&lt;p&gt;包含一个文件和执行一个文件一样，也要写这个文件的路径，不能光写文件名，比如上述例子中:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;. ./function.sh
# 不可以写作：

. function.sh 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;如果function.sh是用户传入的参数，如何获得它的绝对路径呢？方法是：&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#$1是用户输入的参数，如function.sh 
real_path=`readlink -f $1` 
. $real_path 

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;shell--2&quot;&gt;11. 终端\shell 常用命令&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;echo&lt;/code&gt; 显示在屏幕上&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;$  echo “wwwww”
终端就会打印: wwwww&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;获取文件的绝对路径&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# function.sh 的绝对路径: real_path
real_path=`readlink -f $1` 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;ps 查看进程表&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ ps 
  PID TTY           TIME CMD
75831 ttys000    0:00.13 -bash
75832 ttys001    0:00.13 -bash
78258 ttys001    2:07.88 ruby /Users/zzz/.rvm/gems/ruby-2.3.0/bin/jeky
80088 ttys001    0:00.04 /Users/zzz/.rvm/gems/ruby-2.3.0/gems/rb-fseve
42208 ttys002    0:00.29 -bash
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;ul&gt;
  &lt;li&gt;date 打印当前日期&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ date
2017年 3月 4日 星期六 21时03分15秒 CST
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;pwd 打印当前路径&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;ls 列出当前路径的内容&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;os-x-&quot;&gt;12. OS X 常用终端命令&lt;/h3&gt;

&lt;h3 id=&quot;section-22&quot;&gt;13.更多参考链接&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://training.apple.com/pdf/support-10.11-exam-prep.pdf&quot;&gt;OS X Support Essentials 10.11&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://tldp.org/LDP/abs/html/opprecedence.html&quot;&gt;高级Bash脚本指南&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://tldp.org/LDP/abs/html/&quot;&gt;高级Bash脚本指南&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.tutorialspoint.com/unix/unix-shell.htm&quot;&gt;Unix   Shell教程 英语&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://bash.cyberciti.biz/guide/Main_Page&quot;&gt;Linux  Shell教程 英语&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.tutorialspoint.com/unix/unix-file-permission.htm&quot;&gt;Unix 入门教程&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sat, 04 Mar 2017 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2017/03/04/Shell-oneDay/</link>
        <guid isPermaLink="true">http://localhost:4000/2017/03/04/Shell-oneDay/</guid>
        
        <category>Shell</category>
        
        
        <category>Shell</category>
        
      </item>
    
      <item>
        <title> 持续集成系列 - CI + Jenkins的魔法世界</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#ci-&quot; id=&quot;markdown-toc-ci-&quot;&gt;CI 基础知识&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#continuous-integration&quot; id=&quot;markdown-toc-continuous-integration&quot;&gt;持续集成(Continuous Integration)&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#continuous-deployment&quot; id=&quot;markdown-toc-continuous-deployment&quot;&gt;持续部署(Continuous Deployment)&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#xcode---xcodebuild&quot; id=&quot;markdown-toc-xcode---xcodebuild&quot;&gt;1.  Xcode 命令行工具 : xcodebuild&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#project-&quot; id=&quot;markdown-toc-project-&quot;&gt;2. project 项目的命令行编译:&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#cocoapods-&quot; id=&quot;markdown-toc-cocoapods-&quot;&gt;3.CocoaPods 项目&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#xctool&quot; id=&quot;markdown-toc-xctool&quot;&gt;4.Xctool&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#jenkins-&quot; id=&quot;markdown-toc-jenkins-&quot;&gt;Jenkins 简介&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#jenkins&quot; id=&quot;markdown-toc-jenkins&quot;&gt;安装 Jenkins&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#section&quot; id=&quot;markdown-toc-section&quot;&gt;1. 安装&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#section-1&quot; id=&quot;markdown-toc-section-1&quot;&gt;2. 启动&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#section-2&quot; id=&quot;markdown-toc-section-2&quot;&gt;3. 访问方式&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#section-3&quot; id=&quot;markdown-toc-section-3&quot;&gt;4. 修改端口&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#section-4&quot; id=&quot;markdown-toc-section-4&quot;&gt;5. 用户设置&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#section-5&quot; id=&quot;markdown-toc-section-5&quot;&gt;6.系统设置&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#section-6&quot; id=&quot;markdown-toc-section-6&quot;&gt;7. 认证配置&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#section-7&quot; id=&quot;markdown-toc-section-7&quot;&gt;项目通用配置&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#section-8&quot; id=&quot;markdown-toc-section-8&quot;&gt;项目编译参数&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#section-9&quot; id=&quot;markdown-toc-section-9&quot;&gt;项目构建参数&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#section-10&quot; id=&quot;markdown-toc-section-10&quot;&gt;构建触发器&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#build-when-a-change-is-pushed-to-github&quot; id=&quot;markdown-toc-build-when-a-change-is-pushed-to-github&quot;&gt;根据提交进行构建(Build when a change is pushed to GitHub)&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#jobs-&quot; id=&quot;markdown-toc-jobs-&quot;&gt;Jobs构建方式\编译 配置&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#section-11&quot; id=&quot;markdown-toc-section-11&quot;&gt;构建后的操作&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#github&quot; id=&quot;markdown-toc-github&quot;&gt;配置 github&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#freestyle&quot; id=&quot;markdown-toc-freestyle&quot;&gt;创建freestyle任务&lt;/a&gt;            &lt;ul&gt;
              &lt;li&gt;&lt;a href=&quot;#githubwebhook&quot; id=&quot;markdown-toc-githubwebhook&quot;&gt;配置Github仓库的Webhook&lt;/a&gt;&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#gitlab&quot; id=&quot;markdown-toc-gitlab&quot;&gt;配置 GitLab&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#section-12&quot; id=&quot;markdown-toc-section-12&quot;&gt;1. 安装插件&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#api-token&quot; id=&quot;markdown-toc-api-token&quot;&gt;2. 配置 API Token&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#gitlab-&quot; id=&quot;markdown-toc-gitlab-&quot;&gt;3. 配置 Gitlab 账号密码&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#ssh&quot; id=&quot;markdown-toc-ssh&quot;&gt;4. 配置 SSH&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#freestyle-1&quot; id=&quot;markdown-toc-freestyle-1&quot;&gt;创建freestyle任务&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#xcode-builder&quot; id=&quot;markdown-toc-xcode-builder&quot;&gt;Xcode Builder&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#xcode-builder-&quot; id=&quot;markdown-toc-xcode-builder-&quot;&gt;Xcode Builder 设置&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#target-&quot; id=&quot;markdown-toc-target-&quot;&gt;多 Target 扩展&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#jenkins-shell-&quot; id=&quot;markdown-toc-jenkins-shell-&quot;&gt;Jenkins Shell 脚本&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#section-13&quot; id=&quot;markdown-toc-section-13&quot;&gt;其他&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#firim&quot; id=&quot;markdown-toc-firim&quot;&gt;fir.im&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#travis&quot; id=&quot;markdown-toc-travis&quot;&gt;Travis&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#section-14&quot; id=&quot;markdown-toc-section-14&quot;&gt;自动发布&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;

  &lt;p&gt;最近一直在关注移动端的持续集成部署相关的内容,在网搜 Jenkins 资料是很多,但是基本都不是移动端的集成部署.下边将个人的使用体会分享出来,希望能帮助到需要的伙伴们.&lt;/p&gt;

&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;在进行 CI 之前,你需要一些基本的知识&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&quot;ci-&quot;&gt;CI 基础知识&lt;/h3&gt;

&lt;p&gt;在互联网的产品开发时代,产品迭代越来越频繁,“从功能开发完成直到成功部署”这一阶段被称为软件开发“最后一公里”.很多开发团队也越来越认识到,自动化测试和持续部署可帮助开发团队提高迭代效率和质量.
那么,如何更好地解决“最后一公里”这一问题呢?&lt;/p&gt;

&lt;p&gt;可以分为两部分:持续集成和持续部署&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;持续集成:是指整个开发过程,每个人开发的模块向项目主体交付时,频繁进行集成以便更快地发现其中的错误&lt;/li&gt;
  &lt;li&gt;持续部署:是指开发过程中连续的阶段性版本的上线, V1.1.0上线部署,V1.1.1上线部署…&lt;/li&gt;
  &lt;li&gt;前者和后者时间尺度是一样的,不过前者是涵盖每一次 push ,后者是指一个稳定的版本,可以内测和发布用的&lt;/li&gt;
  &lt;li&gt;实际使用中,两者是结合在一起的,持续集成的平台上,可以进一步配置持续部署,这样就可以实现:每次 push 自动构建测试,每次稳定的版本,可以顺利的构建分发用于内测.&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;continuous-integration&quot;&gt;持续集成(Continuous Integration)&lt;/h5&gt;

&lt;p&gt;持续集成:是指整个开发过程,个人开发的模块,向项目主体交付,频繁进行集成以便更快地发现其中的错误.涉及到的内容为:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;自动化测试:单元测试+ UI 测试&lt;/li&gt;
  &lt;li&gt;持续集成平台:Jenkins (自动化的构建) \ Travis CI (基于 github 平台的CI持续集成)等&lt;/li&gt;
  &lt;li&gt;版本控制:如 Git\SVN\CVS 等&lt;/li&gt;
  &lt;li&gt;部署发布工具:fastlane 等&lt;/li&gt;
  &lt;li&gt;部署发布平台:蒲公英\Fir.im (目前支持 Android 和 iOS 应用的分发,提供的工具有 flow.ci)&lt;/li&gt;
  &lt;li&gt;一般流程(Jenkins 为例):Jenkins 服务器轮训 Git ,发现新的版本,就会 clone 到本地,并按照预先设定的脚本进行自动编译,并执行测试.如果有问题,就会发出邮件通知.&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;continuous-deployment&quot;&gt;持续部署(Continuous Deployment)&lt;/h5&gt;

&lt;p&gt;持续部署:是指开发过程中的连续的阶段性版本, V1.1.0上线部署,V1.1.1上线部署…
在移动端主要是使用 fastlane 实现持续部署:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;开发项目,单元测试&lt;/li&gt;
  &lt;li&gt;模块开发,集成\UI 测试&lt;/li&gt;
  &lt;li&gt;Archive项目&lt;/li&gt;
  &lt;li&gt;上传包到iTunes&lt;/li&gt;
  &lt;li&gt;在iTunes后台提交版本截图\描述等信息(也可以在测试完成后配置)&lt;/li&gt;
  &lt;li&gt;配置TestFlight,分发测试Beta版&lt;/li&gt;
  &lt;li&gt;测试,改 bug&lt;/li&gt;
  &lt;li&gt;测试完成,提交App Store审核&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;xcode---xcodebuild&quot;&gt;1.  Xcode 命令行工具 : xcodebuild&lt;/h5&gt;

&lt;p&gt;Xcode 不仅可以通过 GUI 编译运行,还可以通过命令行实现编译运行,这也是 CI 的基础条件之一.&lt;/p&gt;

&lt;p&gt;官方的使用方法:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;xcodebuild &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;-project &amp;lt;projectname&amp;gt;] &lt;span class=&quot;o&quot;&gt;[[&lt;/span&gt;-target &amp;lt;targetname&amp;gt;]...|-alltargets] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;-configuration &amp;lt;configurationname&amp;gt;] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;-arch &amp;lt;architecture&amp;gt;]... &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;-sdk &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&amp;lt;sdkname&amp;gt;|&amp;lt;sdkpath&amp;gt;]] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;-showBuildSettings] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&amp;lt;buildsetting&amp;gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;lt;value&amp;gt;]... &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&amp;lt;buildaction&amp;gt;]...

...
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;关键字:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Options:
    -usage                              print brief usage
    -help                               print complete usage
    -verbose                            provide additional status output
    -license                            show the Xcode and SDK license agreements
    ....
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;实战:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ cd  /Users/guoyinjinrong1/Git_Projecrt/XCTest/UITEST 
$ xcodebuild build -workspace UITEST.xcworkspace -scheme UITEST -sdk iphonesimulator ONLY_ACTIVE_ARCH=NO
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h5 id=&quot;project-&quot;&gt;2. project 项目的命令行编译:&lt;/h5&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# 列出 xcodebuild 所有可用的参数:&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;xcodebuild --help
&lt;span class=&quot;c&quot;&gt;# project 项目的命令行编译:&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;xcodebuild -project &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;project&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;.xcodeproj -target &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;xxtarget&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; -sdk iphonesimulator &lt;span class=&quot;nv&quot;&gt;ONLY_ACTIVE_ARCH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;NO
&lt;span class=&quot;c&quot;&gt;#&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;使用 iphonesimulator SDK 是为了避免签名错误.直到我们稍后引入证书之前,这一步是必须的.通过设置 ONLY_ACTIVE_ARCH=NO 我们可以确保利用模拟器架构编译工程.你也可以设置额外的属性,例如 configuration,输入 man xcodebuild 查看相关文档.&lt;/p&gt;

&lt;h5 id=&quot;cocoapods-&quot;&gt;3.CocoaPods 项目&lt;/h5&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# 需要用下面的命令来指定 workspace 和 scheme：&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;xcodebuild -workspace &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;workspace&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;.xcworkspace -scheme &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;scheme&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; -sdk iphonesimulator &lt;span class=&quot;nv&quot;&gt;ONLY_ACTIVE_ARCH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;NO
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;schemes 是由 Xcode 自动生成的,但这在服务器上不会发生.确保所有的 scheme 都被设为 shared 并加入到仓库中.否则它只会在本地工作而不会被  CI 系统识别&lt;/p&gt;

&lt;h5 id=&quot;xctool&quot;&gt;4.Xctool&lt;/h5&gt;

&lt;p&gt;Xctool 是来自 Facebook 的命令行工具,它可以简化程序的编译和测试.它的彩色输出信息比 xcodebuild 更加简洁直观.同时还添加了对逻辑测试,应用测试的支持.(Travis 中已经预装了 xctool.要在本地测试的话,需要用 Homebrew 安装 xctool)&lt;/p&gt;

&lt;p&gt;xctool 用法非常简单,它使用的参数跟 xcodebuild 相同:&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;xctool &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt; -workspace TravisExample.xcworkspace -scheme TravisExampleTests -sdk iphonesimulator &lt;span class=&quot;nv&quot;&gt;ONLY_ACTIVE_ARCH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;NO
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;jenkins-&quot;&gt;Jenkins 简介&lt;/h3&gt;

&lt;p&gt;1.简介:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Jenkins 由以前的 hudson 更名而来&lt;/li&gt;
  &lt;li&gt;Jenkins 是一个跨平台的开源软件项目,旨在实现持续集成和持续交付以提高工作效率&lt;/li&gt;
  &lt;li&gt;Jenkins 的主要功能是监视重复工作的执行,例如项目的构建等&lt;/li&gt;
  &lt;li&gt;最终都是为了提高软件开发的效率&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;2.特点:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;易于安装:一个命令就可启动,也方便部署到各种Web容器中（如tomcat)&lt;/li&gt;
  &lt;li&gt;易于配置:所有的配置都在Web界面实现,权限控制得也不错&lt;/li&gt;
  &lt;li&gt;插件支持:基本上所有的扩展都是有插件完成的,开发插件也很方便,由此产生了庞大的社区&lt;/li&gt;
  &lt;li&gt;支持分布式构建:Jenkins能够让通过主从模式（master/slave）多台机器一起构建&lt;/li&gt;
  &lt;li&gt;采用 shell 自定义脚本,控制集成部署环境更加方便灵活&lt;/li&gt;
  &lt;li&gt;构建失败发邮件通知相关人员解决&lt;/li&gt;
  &lt;li&gt;自动按天备份 war 包,Jenkins 配置备份以及版本控制化&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;3.公司的配置流程:&lt;/p&gt;

&lt;p&gt;1\Jenkins服务器一般先架设在一台服务器上,有配置管理人员管理
2\产品有构建需求后,配置管理人员就新建一个任务,配好源码仓库,设置构建时间,指定运行脚本来编译测试产品,并且设置报告输出&lt;/p&gt;

&lt;p&gt;4.弊端:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;多平台或依赖的包:
如果你的软件想在不同的操作系统软件构建并验​​证,这将是相当有难度和技巧性,一般是准备不同的操作系统的机器,然后使用主/从模式进行分布式构建.在C++中你可以使用有关的交叉编译器;当然你可有使用虚拟机的技术&lt;a href=&quot;http://larrycai.github.com/2011/10/25/vagrant-jenkins-ci.html&quot;&gt;vagrant/virtualbox&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;配置管理人员的工作:
一般来说Jenkins的构建任务,它是集中控制的.大多来说都是有专职的配置管理人员来管理,否者权限会混乱.
当有需求时,他们负责在CI服务器创建任务（这些配置文件不是有版本控制的）,这个就涉及到了沟通成本,你有变化需求,很难及时满足.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;作为开发者,要想随时构建项目,那就需要 Travis CI.&lt;/p&gt;

&lt;h3 id=&quot;jenkins&quot;&gt;安装 Jenkins&lt;/h3&gt;

&lt;h5 id=&quot;section&quot;&gt;1. 安装&lt;/h5&gt;

&lt;p&gt;安装方式一:下载&lt;a href=&quot;https://mirrors.tuna.tsinghua.edu.cn/jenkins/osx/jenkins-2.45.pkg&quot;&gt;pkg&lt;/a&gt;文件,然后安装即可(此处未必是最新版,请移步&lt;a href=&quot;https://jenkins.io/&quot;&gt;官网&lt;/a&gt;下载)&lt;/p&gt;

&lt;p&gt;安装方式二:终端&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# 安装自动选择最快源的插件&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;yum install yum-fastestmirror -y  
&lt;span class=&quot;c&quot;&gt;# 添加 Jenkins 源:&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;sudo wget -O /etc/yum.repos.d/jenkins.repo http://jenkins-ci.org/redhat/jenkins.repo
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;sudo rpm --import http://pkg.jenkins-ci.org/redhat/jenkins-ci.org.key
&lt;span class=&quot;c&quot;&gt;#安装 Jenkins&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;yum install jenkins               
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h5 id=&quot;section-1&quot;&gt;2. 启动&lt;/h5&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;sudo service jenkins start
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h5 id=&quot;section-2&quot;&gt;3. 访问方式&lt;/h5&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;open http://localhost:8080/
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h5 id=&quot;section-3&quot;&gt;4. 修改端口&lt;/h5&gt;

&lt;p&gt;为避免端口冲突,可重配端口:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;vim /etc/sysconfig/jenkins
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;sudo service jenkins restart
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;或者这样修改端口:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo launchctl unload /Library/LaunchDaemons/org.jenkins-ci.plist
sudo defaults write /Library/Preferences/org.jenkins-ci httpPort 8443
sudo launchctl load /Library/LaunchDaemons/org.jenkins-ci.plist
&lt;span class=&quot;c&quot;&gt;# 如果是 https:&lt;/span&gt;
sudo defaults write /Library/Preferences/org.jenkins-ci httpPort 8443
sudo defaults write /Library/Preferences/org.jenkins-ci httpsKeyStore /path/to/your/keystore/file
sudo defaults write /Library/Preferences/org.jenkins-ci httpsKeyStorePassword &amp;lt;keystore password&amp;gt;
&lt;span class=&quot;c&quot;&gt;# 其中两条命令分别是启动和关闭 Jenkins&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h5 id=&quot;section-4&quot;&gt;5. 用户设置&lt;/h5&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;打开页面: http://localhost:8080 , 按照提示从&lt;code class=&quot;highlighter-rouge&quot;&gt;/Users/Shared/Jenkins/Home/secrets/initialAdminPassword&lt;/code&gt;文件中获取密码,然后输入即可. &lt;strong&gt;vim 打开文件或者 cat 显示文件皆可&lt;/strong&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;然后进入插件设置页面,可以选择 Jenkins 推荐的插件,也可自主选择需要安装的插件.(会有一些插件安装失败,没关系,可以后续再安装)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;安装完成之后,进入创建用户页面,设置用户名密码等&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;用户创建完成,就可以开始创建第一个 Jenkins 任务啦!&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;主界面如下(已经创建过一个任务):&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://img.hb.aicdn.com/0b2dc9f4695effe8bd26d856957165a040f4c3c310b35-pnIrgy_fw658&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h5 id=&quot;section-5&quot;&gt;6.系统设置&lt;/h5&gt;

&lt;ol&gt;
  &lt;li&gt;编码设置:&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
  &lt;p&gt;进入 系统管理-&amp;gt;系统设置 界面：&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;首先设置一下 jenkins 内部shell 执行编码，目的当在jenkins执行shell命令时，有时候会报 utf-8 编码错误。主要是pod install的时候报错。&lt;/p&gt;

&lt;p&gt;[33mWARNING: CocoaPods requires your terminal to be using UTF-8 encoding.&lt;/p&gt;

&lt;p&gt;设置如下：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://img.hb.aicdn.com/cb6bfa7ef1bc54947df56afd938f66f13617e97b220ed-hPTfFv_fw658&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;2.邮件设置:&lt;/p&gt;

&lt;p&gt;jenkins Location 设置
主要设置 jenkins 外部访问的 URL 和系统管理员的邮箱地址.用来发送错误报告的邮箱地址：如图
&lt;img src=&quot;http://7xsugd.com2.z0.glb.clouddn.com/runningyoungBlog/images/location.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;上面只设置了邮箱发送的地址（From地址）,下面设置邮箱的服务器\协议\邮箱\密码.如图:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xsugd.com2.z0.glb.clouddn.com/runningyoungBlog/images/email.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h5 id=&quot;section-6&quot;&gt;7. 认证配置&lt;/h5&gt;

&lt;ul&gt;
  &lt;li&gt;基于 用户名+密码 : 将 Gitlab 的用户名,密码添加进来.就可以通过此认证,来访问 Git 的项目库&lt;/li&gt;
  &lt;li&gt;&lt;/li&gt;
  &lt;li&gt;基于 API Token : 将 GIT的 token 添加进来.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;section-7&quot;&gt;项目通用配置&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;插件gitlab hook plugin，可以识别gitlab发送过来的提交信息，并触发对应的job&lt;/li&gt;
  &lt;li&gt;Environment Injector Plugin（自定义全局变量）&lt;/li&gt;
  &lt;li&gt;Email Extension Plugin（邮件）&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;可以先看看下边的官方教程:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://berlin.gitbooks.io/jenkins/content/job/pei_zhi_bian_yi_can_shu.html&quot;&gt;官方指南 教程&lt;/a&gt;&lt;/p&gt;

&lt;h5 id=&quot;section-8&quot;&gt;项目编译参数&lt;/h5&gt;

&lt;p&gt;设置 debug,test等:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;打开项目 -&amp;gt; 选择参数化构建过程 -&amp;gt; 点选 Choice 配置如下&lt;/p&gt;

  &lt;p&gt;&lt;img src=&quot;https://berlin.gitbooks.io/jenkins/content/pic/job/jb-02.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h5 id=&quot;section-9&quot;&gt;项目构建参数&lt;/h5&gt;

&lt;p&gt;设置构建参数:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;打开项目 -&amp;gt; Build with Parameters -&amp;gt; 配置如下&lt;/p&gt;

  &lt;p&gt;&lt;img src=&quot;https://berlin.gitbooks.io/jenkins/content/pic/job/jb-03.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h5 id=&quot;section-10&quot;&gt;构建触发器&lt;/h5&gt;

&lt;blockquote&gt;
  &lt;p&gt;通常手动构建job不是我们想要的，我们想要让其自动构建，这就需要达到一定条件进行触发构建，所有就有了触发器
详细的配置,参考&lt;a href=&quot;https://berlin.gitbooks.io/jenkins/content/job/gou_jian_de_hong_fa_qi.html&quot;&gt;官方文档&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Jenkins 支持多种触发器配置,包括：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;/li&gt;
  &lt;li&gt;定期检测代码更新，如有更新则进行构建（Poll SCM） (隔一段时间比较一次源代码如果发生变更，那么就build。否则，不进行build)&lt;/li&gt;
  &lt;li&gt;&lt;/li&gt;
  &lt;li&gt;
    &lt;h2 id=&quot;build-when-a-change-is-pushed-to-github&quot;&gt;根据提交进行构建(Build when a change is pushed to GitHub)&lt;/h2&gt;
  &lt;/li&gt;
  &lt;li&gt;触发远程构建(例如和gitlab的webhooks联动)(当一有对代码push的情况下，就执行构建)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;这里以 Gitlab 为例: 有两种方法,这里介绍简单的一种,复杂的请看&lt;a href=&quot;https://berlin.gitbooks.io/jenkins/content/job/gou_jian_de_hong_fa_qi.html&quot;&gt;官方&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;1.通过gitlab的webhook与jenkins联动自动触发:需要 jenkins上安装Gitlab Hook Plugin插件.&lt;/p&gt;

  &lt;p&gt;2.勾选:Build when a change is pushed to GitLab. GitLab CI Service URL: http://localhost:8080/project/CI%20GitLab  并保存后边的 URL, 这用于在 gitlab 中的 webhook.&lt;/p&gt;

  &lt;p&gt;保存以上设置,然后:&lt;/p&gt;

  &lt;p&gt;3.进入 gitlab -&amp;gt; 项目 -&amp;gt; 点击左侧的设置 -&amp;gt; webhook -&amp;gt; 粘贴刚才的 URL, 保存,并点击 TEST HOOK… 如果 一切 OK, 页面很快会提示:HOOK SUCCESSFUL.&lt;/p&gt;

  &lt;p&gt;4.有问题,参见&lt;a href=&quot;https://berlin.gitbooks.io/jenkins/content/job/gou_jian_de_hong_fa_qi.html&quot;&gt;官方&lt;/a&gt;&lt;/p&gt;

  &lt;p&gt;&lt;img src=&quot;https://berlin.gitbooks.io/jenkins/content/pic/job/jb-18.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;定期进行构建（Build periodically），(隔一段时间build一次，不管版本库代码是否发生变化，通常不会采用此种方式),语法如下:
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;H(25-30) 18 1-5： 工作日下午6点25到30分之间进行build
H 23 1-5：工作日每晚23:00至23:59之间的某一时刻进行build
H(0-29)/15：前半小时内每隔15分钟进行build（开始时间不确定） 
H/20：每隔20分钟进行build（开始时间不确定）
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h6 id=&quot;jobs-&quot;&gt;Jobs构建方式\编译 配置&lt;/h6&gt;

&lt;p&gt;Jenkins支持多种编译配置方式,包括：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Xcode: iOS编译配置（安装Xcode integration插件）&lt;/li&gt;
  &lt;li&gt;Invoke Gradle script： Android编译配置(安装Gradle plugin插件)&lt;/li&gt;
  &lt;li&gt;Exceute Shell： 脚本方式&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;对于iOS应用的构建,如果选择Xcode方式构建,需要配置好开发者证书. 推荐使用Exceute Shell方式,简单有效。&lt;/p&gt;

&lt;h5 id=&quot;section-11&quot;&gt;构建后的操作&lt;/h5&gt;

&lt;ul&gt;
  &lt;li&gt;向分支push后自动触发jenkins job,上边已经是实现&lt;/li&gt;
  &lt;li&gt;jenkins job 成功执行后为当前的commit添加一个标签，方便以后进行线上回滚&lt;/li&gt;
  &lt;li&gt;如果编译失败，就发邮件给开发人员,如果编译成功，就发邮件给测试人员&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Artifacts和邮件通知配置等,&lt;a href=&quot;https://gold.xitu.io/entry/5792b7320a2b580061ab0e27&quot;&gt;参考&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;github&quot;&gt;配置 github&lt;/h3&gt;

&lt;p&gt;之所以要配置,是因为 Jenkins 默认不支持 GitHub,需要自行配置(默认支持 CVS\Subversion)&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;1.在 GitHub 中,配置 token (保存此 token 紧接着就要用)&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;流程: github –&amp;gt; setting –&amp;gt; Personal Access Token –&amp;gt; Generate new token&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;详细配置如下图:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://img.hb.aicdn.com/df55935992514b80c0672f2d3ae55ce4f726f4731bdfe-eVrSec_fw658&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;2.安装 GitHub Plugin&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;如果此前已经没安装过&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;流程:系统管理–&amp;gt;插件管理–&amp;gt;可选插件–&amp;gt;直接安装 GitHub Plugin&lt;/p&gt;

  &lt;p&gt;Jenkins会自动帮你安装plain-credentials 、git 、 credentials 、 github-api&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;3.配置 GitHub Plugin&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;流程:系统管理 –&amp;gt; 系统设置 –&amp;gt; GitHub –&amp;gt; Add GitHub Sever&lt;/p&gt;

  &lt;p&gt;Add GitHub Sever 页面 Kind 选择 Secrect text,Secret 贴入上文 GitHub 中配置的 Token,ID 可空白,并加上简单描述即可.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;http://img.hb.aicdn.com/52b78661c0326778df8ea624bb680b59aa11c884106ee-Gos8u3_fw658&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;以上就完成了 GitHub 的配置.&lt;/p&gt;

&lt;h4 id=&quot;freestyle&quot;&gt;创建freestyle任务&lt;/h4&gt;

&lt;p&gt;主界面 –&amp;gt; 点击新建 –&amp;gt; 输入任务名称,并选择任务类型,然后确定&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://img.hb.aicdn.com/c51fae690f1e3d46ae3b63c432fd275add8808b524354-J7rfU3_fw658&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;1.基本信息:填入 GitHub 项目主页&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;http://img.hb.aicdn.com/0503e68febf932d309025bba65434d9507d223cde4ae-ECKWwr_fw658&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;2.项目源码管理:&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;填入项目的 git 地址–&amp;gt;点击 Add 添加 git 账户,以便读写该项目–&amp;gt;Branches to build 用于监听分支,**表示监听全部分支–&amp;gt;Local subdirectory for repo 表示项目相对于默认路径的保存路径,之后都会在此路径进行构建执行.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;http://img.hb.aicdn.com/969a90bcc1d7d12c26164dd7f7ef11b1048a24a3e321-l92EFL_fw658&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;3.构建触发器/构建环境:&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;GitHub hook trigger for GITScm polling 选项:当 GitHub 有版本库更新时触发 Jenkins 进行构建
Poll SCM 选项:定期检查版本库是否有更新(使用Schedule语法)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;http://img.hb.aicdn.com/cd592746112fbda093692f630b3b6c8c8e260d4134bac-9nqLy0_fw658&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;4.构建&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;http://img.hb.aicdn.com/e0ce275c67b89629017b4a706b2b6cc6b283ed5660c6-0fzKor_fw658&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;这里指定脚本&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#!/usr/bin/env zsh --login&lt;/span&gt;

rvm use 2.0.0
ruby --version
bundle
bundle --version
bin/pod
/usr/bin/xcodebuild -scheme &lt;span class=&quot;s1&quot;&gt;'UITEST'&lt;/span&gt; -workspace UITEST.xcworkspace -destination &lt;span class=&quot;s2&quot;&gt;&quot;platform=iOS Simulator,name=iPhone Retina (4-inch),OS=latest&quot;&lt;/span&gt; -configuration Debug clean build &lt;span class=&quot;nb&quot;&gt;test &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;ONLY_ACTIVE_ARCH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;NO
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;ul&gt;
  &lt;li&gt;5\ 构建后的操作
Jenkins默认只能构建前执行shell,不能构建后执行shell.当有该需求时 Jenkins 的 PostBuildScript plugin 插件实现这个功能.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;http://img.hb.aicdn.com/517fe769dfaed57c8a9e6389d940bbbe1a50bfe83a7c-3uou8P_fw658&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;以上便完成了任务的配置.&lt;/p&gt;

&lt;h5 id=&quot;githubwebhook&quot;&gt;配置Github仓库的Webhook&lt;/h5&gt;

&lt;blockquote&gt;
  &lt;p&gt;进入GitHub上指定的项目 –&amp;gt; setting –&amp;gt; WebHooks&amp;amp;Services –&amp;gt; add webhook –&amp;gt; 输入刚刚部署jenkins的服务器的IP&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;这样,每次 push 都会触发一次build.&lt;/p&gt;

&lt;p&gt;然而,我的 Jenkins 是本地的,在 GitHub 并不能直接访问到我的电脑,so,设置是无效的….&lt;/p&gt;

&lt;h3 id=&quot;gitlab&quot;&gt;配置 GitLab&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;集成目的: Gitlab 有新的推送,就会触发 Jenkins 构建.构建状态反馈给 Gitlab&lt;/strong&gt;&lt;/p&gt;

&lt;h5 id=&quot;section-12&quot;&gt;1. 安装插件&lt;/h5&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;https://docs.gitlab.com/ee/integration/jenkins.html&quot;&gt;Gitlab官方教程&lt;/a&gt;
&lt;a href=&quot;https://docs.gitlab.com/ee/integration/jenkins.html&quot;&gt;Gitlab 官方教程2&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;1). 安装 Gitlab 插件&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;系统管理 -&amp;gt; 管理插件 -&amp;gt; 可选插件 :中选择GitLab Plugin 和 Gitlab Hook Plugin 这两项，然后安装.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;2). 安装 Xcode 插件&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;同上,安装 Xcode integration&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;3). 安装签名证书管理插件
OS打包内测版时,需要发布证书及相关签名文件,因此这两个插件对于管理iOS证书非常方便.&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;同上,安装 Credentials Plugin 和 Keychains and Provisioning Profiles Management&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h5 id=&quot;api-token&quot;&gt;2. 配置 API Token&lt;/h5&gt;

&lt;blockquote&gt;
  &lt;ol&gt;
    &lt;li&gt;
      &lt;p&gt;Gitlabe: Copy the private API token from [ Profile Settings -&amp;gt; Account ]&lt;/p&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;p&gt;Jenkins: Go to [ Manage Jenkins -&amp;gt; Configure System ] -&amp;gt; [GitLab] 粘贴 Gitlab 主机地址,以及 API Token&lt;/p&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;p&gt;可能2步骤没有 API Token 选项,因为都已经集成到 Credentials 中了,所以,要进入 Credentials 中,然后 添加新的凭证:&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;

  &lt;p&gt;首页点击 Credentials -&amp;gt; 点击 System -&amp;gt; 点击底部的 Glopbal credentials(unrestricted) -&amp;gt; 跳入新的页面,点击 Add Credentials -&amp;gt; Kind 选择 [GitLab API Token],然后粘贴上述的 token ,要注意的是, Description 需要写清楚,不然容易弄混淆(GitHub 也添加了 Secret text, 容易混)&lt;/p&gt;

  &lt;p&gt;以上前提是有安装插件:Plain Credentiles Plugin ,以及相关插件. 否则不会有 gitlab API token 这个选项的.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h5 id=&quot;gitlab-&quot;&gt;3. 配置 Gitlab 账号密码&lt;/h5&gt;

&lt;p&gt;在系统配置里,添加 类型: Username with password -&amp;gt; 配置账号密码即可.&lt;/p&gt;

&lt;h5 id=&quot;ssh&quot;&gt;4. 配置 SSH&lt;/h5&gt;

&lt;p&gt;1.直接获取:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;ls ~/.ssh
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;cat id_rsa &lt;span class=&quot;c&quot;&gt;# 显示&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;pbcopy &amp;lt; ~/.ssh/id_rsa &lt;span class=&quot;c&quot;&gt;#复制&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# 然后 粘贴到 Jenkins 中,并输入最初始的密码即可.如下图&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;http://img.hb.aicdn.com/9756ed06006b5d816ac3e4fdc9891249fd7879f116026-K0Lsxk_fw658&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;2.创建新的 SSH&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;ssh-keygen -t rsa -C “Your email” 
&lt;span class=&quot;c&quot;&gt;# 私钥id_rsa:本机添加秘钥到秘钥管理器:&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;eval&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;ssh-agent -s&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;ssh-add ~/.ssh/id_rsa
&lt;span class=&quot;c&quot;&gt;# 私钥copy添加进 Jenkins（private key选项）&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;pbcopy &amp;lt; ~/.ssh/id_rsa
&lt;span class=&quot;c&quot;&gt;# 公钥id_rsa.pub:复制id_rsa.pub里面的公钥添加到Gitlab上  &lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;pbcopy &amp;lt; ~/.ssh/id_rsa.pub

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;SSH 添加路径为:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;系统管理 -&amp;gt; 系统设置 -&amp;gt; Gitlab 栏 点击 Add 添加,或者使用如下地址:&lt;/p&gt;

  &lt;p&gt;http://localhost:8080/credentials/store/system/domain/_/&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;freestyle-1&quot;&gt;创建freestyle任务&lt;/h4&gt;

&lt;p&gt;主界面 –&amp;gt; 点击新建 –&amp;gt; 输入任务名称,并选择 freestyle 任务类型,然后确定&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;源码管理:&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;blockquote&gt;
    &lt;p&gt;输入项目 git 协议地址(git@your.gitlab.server:gitlab_group/gitlab_project.git) 
–&amp;gt; 证书类型选择:相应的 SSH .
–&amp;gt;在高级设置中，将名称设置为origin,将Refspec设置为 +refs/heads/&lt;em&gt;:refs/remotes/origin/&lt;/em&gt; +refs/merge-requests/&lt;em&gt;/head:refs/remotes/origin/merge-requests/&lt;/em&gt;&lt;/p&gt;
  &lt;/blockquote&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;/li&gt;
  &lt;li&gt;构建触发器:Build when a change is pushed to GitLab. 注意,这里的地址,粘贴在 Gitlab 上 的 WebHook 中&lt;/li&gt;
  &lt;li&gt;&lt;/li&gt;
  &lt;li&gt;更加详细的任务配置,参考插件&lt;a href=&quot;https://github.com/jenkinsci/gitlab-plugin#using-it-with-a-job&quot;&gt;官方文档&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;xcode-builder&quot;&gt;Xcode Builder&lt;/h3&gt;

&lt;h6 id=&quot;xcode-builder-&quot;&gt;Xcode Builder 设置&lt;/h6&gt;

&lt;blockquote&gt;
  &lt;p&gt;系统管理–&amp;gt;系统设置-&amp;gt;Xcode Builder
默认 path 不变 -&amp;gt; 点击 Add 需填写的内容：&lt;/p&gt;

  &lt;p&gt;&lt;img src=&quot;http://img.blog.csdn.net/20160216141930768&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;blockquote&gt;
    &lt;p&gt;Keychain Name：iPhone Distribution: *（dis证书常用名）&lt;/p&gt;

    &lt;p&gt;Keychain path：${HOME}/Library/Keychains/login.keychain（dis证书路径）&lt;/p&gt;

    &lt;p&gt;Keychain password：*&lt;/p&gt;

    &lt;p&gt;Add to keychain search path after build：Yes&lt;/p&gt;

    &lt;p&gt;Default keychain:iPhone Distribution: *&lt;/p&gt;
  &lt;/blockquote&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;ol&gt;
      &lt;li&gt;General build settings:&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;++ 填写Target 名字&lt;/p&gt;

  &lt;p&gt;++ Clean before build? YES&lt;/p&gt;

  &lt;p&gt;++ Pack application and build .ipa? YES&lt;/p&gt;

  &lt;p&gt;++ .ipa filename pattern IPA 路径:AD_Demo_${SHORT_VERSION}(固定写法:targetName_${SHORT_VERSION})&lt;/p&gt;

  &lt;p&gt;++ Output directory IPA输出位置 ${WORKSPACE}/build/${BUILD_NUMBER}/&lt;/p&gt;

&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;2.Code signing &amp;amp; OS X keychain options:&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;在系统Xcode Builder（钥匙串设置）已配置,上边已配置&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;3.Advanced Xcode build options:
    &lt;blockquote&gt;
      &lt;p&gt;++ “Clean test reports?”  YES&lt;/p&gt;

      &lt;p&gt;++Build output directory：${WORKSPACE}/build/${BUILD_NUMBER}/&lt;/p&gt;

    &lt;/blockquote&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;http://img.blog.csdn.net/20160218095046760&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;http://img.blog.csdn.net/20160218095059932&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;http://img.blog.csdn.net/20160218095117084&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;ol&gt;
      &lt;li&gt;Versioning 构建后的设置 :SHELL 脚本&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;http://img.blog.csdn.net/20160218100247953&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;1).点击增加 Shell 脚本:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;WORKSPACE&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/build/&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;BUILD_NUMBER&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;file &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;*.ipa&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;do
    &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PLIST_NAME&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$file&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;done

&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PLIST_NAME&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PLIST_NAME&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%.*&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;WORKSPACE&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/build&quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;PLIST_NAME=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$PLIST_NAME&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &amp;gt; jenkinsUserGlobal.properties

cat &lt;span class=&quot;sh&quot;&gt;&amp;lt;&amp;lt; EOF &amp;gt; ${WORKSPACE}/build/${BUILD_NUMBER}/$PLIST_NAME.plist
&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&amp;gt;
&amp;lt;!DOCTYPE plist PUBLIC &quot;-//Apple//DTD PLIST 1.0//EN&quot; &quot;http://www.apple.com/DTDs/PropertyList-1.0.dtd&quot;&amp;gt;
&amp;lt;plist version=&quot;1.0&quot;&amp;gt;
&amp;lt;dict&amp;gt;
        &amp;lt;key&amp;gt;items&amp;lt;/key&amp;gt;
        &amp;lt;array&amp;gt;
                &amp;lt;dict&amp;gt;
                        &amp;lt;key&amp;gt;assets&amp;lt;/key&amp;gt;
                        &amp;lt;array&amp;gt;
                                &amp;lt;dict&amp;gt;
                                        &amp;lt;key&amp;gt;kind&amp;lt;/key&amp;gt;
                                        &amp;lt;string&amp;gt;software-package&amp;lt;/string&amp;gt;
                                        &amp;lt;key&amp;gt;url&amp;lt;/key&amp;gt;
                                        &amp;lt;string&amp;gt;https://127.0.0.1/$PLIST_NAME.ipa&amp;lt;/string&amp;gt;
                                &amp;lt;/dict&amp;gt;
                        &amp;lt;/array&amp;gt;
                        &amp;lt;key&amp;gt;metadata&amp;lt;/key&amp;gt;
                        &amp;lt;dict&amp;gt;
                                &amp;lt;key&amp;gt;bundle-identifier&amp;lt;/key&amp;gt;
                                &amp;lt;string&amp;gt;com.3code.ADDemo&amp;lt;/string&amp;gt;
                                &amp;lt;key&amp;gt;bundle-version&amp;lt;/key&amp;gt;
                                &amp;lt;string&amp;gt;1&amp;lt;/string&amp;gt;
                                &amp;lt;key&amp;gt;kind&amp;lt;/key&amp;gt;
                                &amp;lt;string&amp;gt;software&amp;lt;/string&amp;gt;
                                &amp;lt;key&amp;gt;title&amp;lt;/key&amp;gt;
                                &amp;lt;string&amp;gt;ADDemo&amp;lt;/string&amp;gt;
                        &amp;lt;/dict&amp;gt;
                &amp;lt;/dict&amp;gt;
        &amp;lt;/array&amp;gt;
&amp;lt;/dict&amp;gt;
&amp;lt;/plist&amp;gt;
EOF
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;2). 点击增加 Inject environment variables&lt;/p&gt;

&lt;p&gt;并设置:&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;需填写的内容：(将在Execute shell中生成的全局变量文件地址放入 Properties File Path中)
Properties File Path：${WORKSPACE}/build/jenkinsUserGlobal.properties&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;http://img.blog.csdn.net/20160218100610924&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;5.构建后的操作: 设置邮件&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;http://img.blog.csdn.net/20160218100726636&quot; alt=&quot;&quot; /&gt;
触发器：构建成功、失败触发(扩展一下：失败点“高级”设置只发送给自己) 
&lt;img src=&quot;http://img.blog.csdn.net/20160218100837965&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;需填写的内容：&lt;/p&gt;

  &lt;p&gt;Project Recipient List：邮件接收人（多个时用”,“分割）&lt;/p&gt;

  &lt;p&gt;Project Reply-To List：$DEFAULT_REPLYTO&lt;/p&gt;

  &lt;p&gt;Content Type：选择”HTML(text/html)“&lt;/p&gt;

  &lt;p&gt;Default Subject：标题: &lt;strong&gt;${PROJECT_NAME}构建通知:第${BUILD_NUMBER}次持续集成${PLIST_NAME}构建${BUILD_STATUS}&lt;/strong&gt;&lt;/p&gt;

  &lt;p&gt;Default Content:（将ipa全局变量传递到邮件生成下载链接和链接二维码）,如下:&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;charset=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;${ENV, var=&quot;JOB_NAME&quot;}-第${BUILD_NUMBER}次构建日志&lt;span class=&quot;nt&quot;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;body&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;leftmargin=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;8&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;marginwidth=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;0&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;topmargin=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;8&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;marginheight=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;4&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;ffset=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;0&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;table&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;95%&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;cellpadding=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;0&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;cellspacing=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;0&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;style=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;font-size: 11pt; font-family: Tahoma, Arial, Helvetica, sans-serif&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;tr&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;td&amp;gt;&amp;lt;h2&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;nt&quot;&gt;&amp;lt;font&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;color=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;#0000FF&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;构建结果 - ${BUILD_STATUS}&lt;span class=&quot;nt&quot;&gt;&amp;lt;/font&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;/h2&amp;gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;tr&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;td&amp;gt;&amp;lt;h2&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;nt&quot;&gt;&amp;lt;font&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;color=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;#FF0000&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;App下载链接:&lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;itms-services://?action=download-manifest&amp;amp;url=https://******/${PLIST_NAME}.plist&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;itms-services://?action=download-manifest&lt;span class=&quot;err&quot;&gt;&amp;amp;&lt;/span&gt;url=https://127.0.0.1/${PLIST_NAME}.plist&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&amp;lt;/font&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;/h2&amp;gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;tr&amp;gt;&lt;/span&gt;
               &lt;span class=&quot;nt&quot;&gt;&amp;lt;td&amp;gt;&amp;lt;h2&amp;gt;&lt;/span&gt;
                      &lt;span class=&quot;nt&quot;&gt;&amp;lt;font&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;color=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;#FF0000&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;二维码图片:&lt;span class=&quot;nt&quot;&gt;&amp;lt;/font&amp;gt;&lt;/span&gt;
               &lt;span class=&quot;nt&quot;&gt;&amp;lt;/h2&amp;gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;tr&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;td&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;nt&quot;&gt;&amp;lt;img&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://qr.liantu.com/api.php?text=itms-services://?action=download-manifest%26url=https://******/${PLIST_NAME}.plist&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;300&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;300&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;tr&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;td&amp;gt;&amp;lt;br&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;b&amp;gt;&amp;lt;font&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;color=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;#0B610B&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;构建信息&lt;span class=&quot;nt&quot;&gt;&amp;lt;/font&amp;gt;&amp;lt;/b&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;hr&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;size=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;2&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;100%&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;align=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;center&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;tr&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;td&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;ul&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&amp;gt;&lt;/span&gt;项目名称&lt;span class=&quot;ni&quot;&gt;&amp;amp;nbsp;&lt;/span&gt;：&lt;span class=&quot;ni&quot;&gt;&amp;amp;nbsp;&lt;/span&gt;${PROJECT_NAME}&lt;span class=&quot;nt&quot;&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&amp;gt;&lt;/span&gt;构建编号&lt;span class=&quot;ni&quot;&gt;&amp;amp;nbsp;&lt;/span&gt;：&lt;span class=&quot;ni&quot;&gt;&amp;amp;nbsp;&lt;/span&gt;第${BUILD_NUMBER}次构建&lt;span class=&quot;nt&quot;&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&amp;gt;&lt;/span&gt;SVN&lt;span class=&quot;ni&quot;&gt;&amp;amp;nbsp;&lt;/span&gt;版本：&lt;span class=&quot;ni&quot;&gt;&amp;amp;nbsp;&lt;/span&gt;${SVN_REVISION}&lt;span class=&quot;nt&quot;&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&amp;gt;&lt;/span&gt;触发原因：&lt;span class=&quot;ni&quot;&gt;&amp;amp;nbsp;&lt;/span&gt;${CAUSE}&lt;span class=&quot;nt&quot;&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&amp;gt;&lt;/span&gt;构建日志：&lt;span class=&quot;ni&quot;&gt;&amp;amp;nbsp;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;${BUILD_URL}console&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;${BUILD_URL}console&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&amp;gt;&lt;/span&gt;构建&lt;span class=&quot;ni&quot;&gt;&amp;amp;nbsp;&amp;amp;nbsp;&lt;/span&gt;Url&lt;span class=&quot;ni&quot;&gt;&amp;amp;nbsp;&lt;/span&gt;：&lt;span class=&quot;ni&quot;&gt;&amp;amp;nbsp;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;${BUILD_URL}&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;${BUILD_URL}&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&amp;gt;&lt;/span&gt;工作目录&lt;span class=&quot;ni&quot;&gt;&amp;amp;nbsp;&lt;/span&gt;：&lt;span class=&quot;ni&quot;&gt;&amp;amp;nbsp;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;${PROJECT_URL}ws&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;${PROJECT_URL}ws&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&amp;gt;&lt;/span&gt;项目&lt;span class=&quot;ni&quot;&gt;&amp;amp;nbsp;&amp;amp;nbsp;&lt;/span&gt;Url&lt;span class=&quot;ni&quot;&gt;&amp;amp;nbsp;&lt;/span&gt;：&lt;span class=&quot;ni&quot;&gt;&amp;amp;nbsp;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;${PROJECT_URL}&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;${PROJECT_URL}&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;tr&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;&amp;lt;font&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;color=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;#0B610B&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Changes Since Last
                        Successful Build:&lt;span class=&quot;nt&quot;&gt;&amp;lt;/font&amp;gt;&amp;lt;/b&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;hr&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;size=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;2&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;100%&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;align=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;center&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;tr&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;td&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;ul&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&amp;gt;&lt;/span&gt;历史变更记录 : &lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;${PROJECT_URL}changes&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;${PROJECT_URL}changes&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt; ${CHANGES_SINCE_LAST_SUCCESS,reverse=true, format=&quot;Changes for Build #%n:&lt;span class=&quot;nt&quot;&gt;&amp;lt;br&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;%c&lt;span class=&quot;nt&quot;&gt;&amp;lt;br&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;&quot;,showPaths=true,changesFormat=&quot;&lt;span class=&quot;nt&quot;&gt;&amp;lt;pre&amp;gt;&lt;/span&gt;[%a]&lt;span class=&quot;nt&quot;&gt;&amp;lt;br&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;%m&lt;span class=&quot;nt&quot;&gt;&amp;lt;/pre&amp;gt;&lt;/span&gt;&quot;,pathFormat=&quot;&lt;span class=&quot;ni&quot;&gt;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&lt;/span&gt;%p&quot;}
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;tr&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;&lt;/span&gt;Failed Test Results&lt;span class=&quot;nt&quot;&gt;&amp;lt;/b&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;hr&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;size=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;2&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;100%&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;align=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;center&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;tr&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;td&amp;gt;&amp;lt;pre&lt;/span&gt;
                    &lt;span class=&quot;na&quot;&gt;style=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;font-size: 11pt; font-family: Tahoma, Arial, Helvetica, sans-serif&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;$FAILED_TESTS&lt;span class=&quot;nt&quot;&gt;&amp;lt;/pre&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;br&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;tr&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;&amp;lt;font&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;color=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;#0B610B&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;构建日志 (最后 100行):&lt;span class=&quot;nt&quot;&gt;&amp;lt;/font&amp;gt;&amp;lt;/b&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;hr&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;size=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;2&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;100%&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;align=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;center&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;tr&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;td&amp;gt;&amp;lt;textarea&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;cols=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;80&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rows=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;30&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;readonly=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;readonly&quot;&lt;/span&gt;
                    &lt;span class=&quot;na&quot;&gt;style=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;font-family: Courier New&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;${BUILD_LOG, maxLines=100}&lt;span class=&quot;nt&quot;&gt;&amp;lt;/textarea&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/table&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;邮件截图&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://img.blog.csdn.net/20160218103409264&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;http://img.blog.csdn.net/20160218103358248&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;target-&quot;&gt;多 Target 扩展&lt;/h3&gt;

&lt;h3 id=&quot;jenkins-shell-&quot;&gt;Jenkins Shell 脚本&lt;/h3&gt;

&lt;p&gt;在 Jenkins 的任务里面,在构建\构建后,都可选择 Execute shell ,作为构建前或者构建后要执行的 shell 脚本.&lt;/p&gt;

&lt;p&gt;python\perl\ruby 等脚本其实也是 shell 脚本,因此这里的 Shell 可以扩展为 python\perl\ruby
等。&lt;/p&gt;

&lt;p&gt;常见脚本如:&lt;/p&gt;

&lt;p&gt;1\此脚本:在jenkins构建完成后,远程copy配置文件到项目中,并重启tomcat&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#!/bin/sh&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#datetime: 2017-2-7 17:00&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#author:3code&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#desc:此脚本用来在jenkins构建完成后，远程copy配置文件到项目中，并重启tomcat&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;#copy API工程的配置文件&lt;/span&gt;
cp -r /data/apache-tomcat-7.0.56/build/API/&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;  /data/apache-tomcat-7.0.56/webapps/API/WEB-INF/classes

&lt;span class=&quot;c&quot;&gt;#重启tomcat&lt;/span&gt;
bash /data/apache-tomcat-7.0.56/bin/shutdown.sh

sleep 30s

bash /data/apache-tomcat-7.0.56/bin/startup.sh
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Tips:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;对于刚接触Jenkins的同学可能有很多需要配置的地方不知道要怎么填，这时可以点击每一个填空后的？，就会弹出详细的提示。&lt;/li&gt;
  &lt;li&gt;官方的wiki是很好的入门教程https://wiki.jenkins-ci.org/display/JENKINS/Home&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;section-13&quot;&gt;其他&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Jenkins 的界面是可以自定义的,&lt;a href=&quot;https://wiki.jenkins-ci.org/display/JENKINS/Simple+Theme+Plugin&quot;&gt;参考此处&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://runningyoung.github.io/2016/04/01/2016-04-05-jenkins2/&quot;&gt;优秀:Jenkins + Gitlab + 蒲公英 + 邮件通知&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://blog.csdn.net/fengshi_sh/article/details/50669754&quot;&gt;优秀:jenkins+xcode+svn+七牛&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;http://www.itgo.me/a/x9151986573431569483&quot;&gt;构建iOS持续集成平台（三）——CI服务器与自动化部署&lt;/a&gt;
&lt;a href=&quot;http://blog.fir.im/fir_im_weekly160505/&quot;&gt;fir.im weekly - 「 持续集成 」实践教程合集&lt;/a&gt;
&lt;a href=&quot;http://blog.flow.ci/cicd_difference/&quot;&gt;谈谈持续集成，持续交付，持续部署之间的区别&lt;/a&gt;
&lt;a href=&quot;http://blog.caoyue.me/post/react-native-travis-ci-ios&quot;&gt;使用Travis CI自动部署React Native项目（iOS篇）&lt;/a&gt;
&lt;a href=&quot;http://www.infoq.com/cn/articles/build-ios-continuous-integration-platform-part3&quot;&gt;构建iOS持续集成平台（三）——CI服务器与自动化部署&lt;/a&gt;
…
&lt;a href=&quot;https://objccn.io/issue-6-5/&quot;&gt;为 iOS 建立 Travis CI&lt;/a&gt;
&lt;a href=&quot;https://gold.xitu.io/entry/57a982d10a2b58005869d8dc&quot;&gt;iOS 持续集成 –Travis CI + Fir.im 自动编译发布&lt;/a&gt;
&lt;a href=&quot;http://yeziahehe.com/2016/08/07/use_travis_ci_for_ios_project/&quot;&gt;iOS 持续集成–Travis CI + Fir.im自动编译发布&lt;/a&gt;
&lt;a href=&quot;https://objccn.io/issue-6-5/&quot;&gt;为 iOS 建立 Travis CI&lt;/a&gt;
&lt;a href=&quot;https://docs.docker.com/docker-hub/builds/&quot;&gt;在Docker Hub上配置自动构建&lt;/a&gt;
&lt;a href=&quot;http://www.jianshu.com/p/19c2b13e81fa&quot;&gt;利用pod trunk发布程序&lt;/a&gt;
&lt;a href=&quot;http://www.55118885.com/w/166141242.html&quot;&gt;使用GitLab来实现IOS项目的持续集成CI&lt;/a&gt;
&lt;a href=&quot;http://blog.fir.im/jenkinsgithubfir_cli-xing-ming-ling-cong-yuan-ma-dao-fir-im/&quot;&gt;Jenkins + GitHub + fir-cli 一行命令从源码到 fir.im&lt;/a&gt;
&lt;a href=&quot;http://www.2cto.com/kf/201411/356826.html&quot;&gt;用持续集成工具Travis进行构建和部署&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;firim&quot;&gt;fir.im&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;http://www.jianshu.com/p/f17caec72f0b&quot;&gt;使用 fir CLI插件上传 Swift 应用至fir.im&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;travis&quot;&gt;Travis&lt;/h4&gt;
&lt;p&gt;相关的文章:&lt;a href=&quot;https://blog.jamespan.me/2015/11/01/ci-your-hexo-blog&quot;&gt;Travis&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;http://ios.jobbole.com/87803/&quot;&gt;使用 TestFlight 进行 App Beta 版测试&lt;/a&gt;
&lt;a href=&quot;http://www.jianshu.com/p/27545c2d4d8b&quot;&gt;使用TestFlight进行App构建版本测试&lt;/a&gt;
&lt;a href=&quot;https://onevcat.com/2012/01/testflight/&quot;&gt;onevcat testflight&lt;/a&gt;
持续部署是指当交付的代码通过评审之后，自动部署到生产环境中。持续部署是持续交付的最高阶段。这意味着，所有通过了一系列的自动化测试的改动都将自动部署到生产环境。它也可以被称为“Continuous Release”。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;section-14&quot;&gt;自动发布&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Fastlane 是一组工具套件,旨在实现iOS应用发布流程的自动化，并且提供一个运行良好的持续部署流程.&lt;/li&gt;
  &lt;li&gt;使用场景: push 时执行单元测试,集成测试;创建屏幕截图发给客户;构建分发 Beta 版本;构建并分发到 appstore;&lt;/li&gt;
  &lt;li&gt;支持与Jenkins和CocoaPods，xctools等其他第三方工具的集成&lt;/li&gt;
  &lt;li&gt;博客教程:http://www.infoq.com/cn/news/2015/01/fastlane-ios-continuous-deploy&lt;/li&gt;
  &lt;li&gt;官方教程:https://docs.fastlane.tools/getting-started/ios/screenshots/&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Wed, 08 Feb 2017 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2017/02/08/AD-jenkins/</link>
        <guid isPermaLink="true">http://localhost:4000/2017/02/08/AD-jenkins/</guid>
        
        <category>fastlane</category>
        
        <category>CI</category>
        
        
        <category>CI</category>
        
      </item>
    
      <item>
        <title> 持续集成系列 - Fastlane的黑魔法:自动打包编译上传 AppStore</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#fastlane-&quot; id=&quot;markdown-toc-fastlane-&quot;&gt;Fastlane 简介&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#section&quot; id=&quot;markdown-toc-section&quot;&gt;1.主要使用场:&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#section-1&quot; id=&quot;markdown-toc-section-1&quot;&gt;2.工具集&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#section-2&quot; id=&quot;markdown-toc-section-2&quot;&gt;3.常见命令&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#fastlane--1&quot; id=&quot;markdown-toc-fastlane--1&quot;&gt;fastlane 入门实战&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#fastlane&quot; id=&quot;markdown-toc-fastlane&quot;&gt;1.安装 fastlane&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#app-id&quot; id=&quot;markdown-toc-app-id&quot;&gt;1.1 创建App ID\描述文件&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#section-3&quot; id=&quot;markdown-toc-section-3&quot;&gt;1.2 安装&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#fastlane-1&quot; id=&quot;markdown-toc-fastlane-1&quot;&gt;1.3 为项目配置 fastlane&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#fastlane--2&quot; id=&quot;markdown-toc-fastlane--2&quot;&gt;2.fastlane 文件配置&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#metadata-&quot; id=&quot;markdown-toc-metadata-&quot;&gt;2.1 配置 metadata 文件夹&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#section-4&quot; id=&quot;markdown-toc-section-4&quot;&gt;2.2 配置证书&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#fastlane--itc&quot; id=&quot;markdown-toc-fastlane--itc&quot;&gt;2.3 将 fastlane 本地配置上传至 ITC&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#xcode-&quot; id=&quot;markdown-toc-xcode-&quot;&gt;3.Xcode 配置&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#snapshot--xctest&quot; id=&quot;markdown-toc-snapshot--xctest&quot;&gt;4.Snapshot 截图和 XCTest&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#ipa-&quot; id=&quot;markdown-toc-ipa-&quot;&gt;5.创建 IPA 文件&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#ipa--itc&quot; id=&quot;markdown-toc-ipa--itc&quot;&gt;6.上传 IPA 文件到 ITC&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#deliverfile&quot; id=&quot;markdown-toc-deliverfile&quot;&gt;7.配置 Deliverfile&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#appstore-&quot; id=&quot;markdown-toc-appstore-&quot;&gt;8.提交 AppStore 审核&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#section-5&quot; id=&quot;markdown-toc-section-5&quot;&gt;9.使用一键命令&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#section-6&quot; id=&quot;markdown-toc-section-6&quot;&gt;10.参考&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;有关神器 Fastlane 持续集成\部署的文章网上挺多,本文定位是入门教程,针对 iOS 应用的持续部署,&lt;strong&gt;只需一条命令就可实现从 Xcode 项目到 编译\打包\构建\提交审核&lt;/strong&gt;&lt;/p&gt;

  &lt;p&gt;文章稍微有点长,涵盖内容为:fastlane 简介\安装\配置 + Snapshot 截图 + XCTest + 一键上传App Store&lt;/p&gt;

  &lt;p&gt;说明:本文将 Apple Dev Center 简称为 ADC; iTunes Connect 简称为 ITC&lt;/p&gt;

&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;首发文章及代码请&lt;a href=&quot;https://github.com/mythkiven/AD_Fastlane&quot;&gt;戳一下&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;先放图看 fastlane 实现自动上传功能:&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;进度:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://ooo.0o0.ooo/2017/02/08/589a9ef7823dc.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;提交成功,等待审核
&lt;img src=&quot;https://ooo.0o0.ooo/2017/02/08/589aaed07d991.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;fastlane-&quot;&gt;Fastlane 简介&lt;/h2&gt;

&lt;p&gt;fastlane 是一个完全开源的项目,包含一组 Ruby 实现的工具集,能完成 iOS 和 Android 工程 的自动化构建\测试和发布等功能,&lt;a href=&quot;https://krausefx.com/blog/fastlane-is-now-part-of-fabric&quot;&gt;现被Twitter收购,是Fabric的一部分&lt;/a&gt;.fastlane 强大之处就在于其提供的工具全,基本可以覆盖打包测试发布的所有流程,如下图:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://ooo.0o0.ooo/2017/02/08/589ace59a6210.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;fastlane 的每一个工具都对应一个 Ruby 脚本,用来执行某一特定的任务,而最妙的是可以通过配置文件将不同的工具灵活的结合在一起,从而形成一个完整的自动化流程,实现一键上传 ITC,从而缩短用于构建发布的时间.&lt;/p&gt;

&lt;h5 id=&quot;section&quot;&gt;1.主要使用场:&lt;/h5&gt;

&lt;ul&gt;
  &lt;li&gt;提交时执行测试（包括单元测试和集成测试）&lt;/li&gt;
  &lt;li&gt;构建并分发内部测试\公开测试版本&lt;/li&gt;
  &lt;li&gt;构建生产版本并上传至 ITC（包括更新配置文件,创建新的屏幕截图,上传应用并提交审核）&lt;/li&gt;
  &lt;li&gt;…&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;section-1&quot;&gt;2.工具集&lt;/h5&gt;

&lt;p&gt;fastlane 将如下的工具套件有机地结合起来,从管理证书到单元测试,从编译打包到上传发布,都能通过命令行轻松完成.该套件支持与 Jenkins 和 CocoaPods,xctools 等其他第三方工具的集成,并且能够定义多个通道（lanes）以支持不同的部署目标.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;deliver: 将应用在 ITC 上所需数据提交至 ITC (包括:截图,配置文件,ipa包)&lt;/li&gt;
  &lt;li&gt;snapshot: 依靠 UI Test 完成截图&lt;/li&gt;
  &lt;li&gt;frameit: 快速地把应用截图放入设备框里&lt;/li&gt;
  &lt;li&gt;pem: 可以自动化地生成和更新应用推送通知描述文件&lt;/li&gt;
  &lt;li&gt;sigh: 创建\更新\下载和修复 provisioning profiles,支持App Store, Ad Hoc, Development和企业profiles&lt;/li&gt;
  &lt;li&gt;gym: 编译\打包iOS app,生成签名的ipa文件&lt;/li&gt;
  &lt;li&gt;…&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;section-2&quot;&gt;3.常见命令&lt;/h5&gt;

&lt;p&gt;fastlane 命令中,个人觉得下面两个较为常用:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;列出所有的 fastlane 的 actions:&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ fastlane actions
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;fastlane action [action_name]: 显示某一个 action 的详细配置&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$  fastlane action match
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;fastlane--1&quot;&gt;fastlane 入门实战&lt;/h2&gt;

&lt;h3 id=&quot;fastlane&quot;&gt;1.安装 fastlane&lt;/h3&gt;

&lt;h5 id=&quot;app-id&quot;&gt;1.1 创建App ID\描述文件&lt;/h5&gt;

&lt;ul&gt;
  &lt;li&gt;本教程目标是上传 ITC ,因此需要提前在 ADC 和 ITC 中创建 App ID\描述文件\App&lt;/li&gt;
  &lt;li&gt;这里使用的项目是 AD Demo,代码见 &lt;a href=&quot;https://github.com/mythkiven/AD_Fastlane&quot;&gt;GitHub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://ooo.0o0.ooo/2017/02/06/589845eaa299d.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;https://ooo.0o0.ooo/2017/02/06/589847204b77a.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h5 id=&quot;section-3&quot;&gt;1.2 安装&lt;/h5&gt;

&lt;p&gt;查看 Ruby 版本,低于2.0最好升级&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ ruby -v
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;检查 Xcode CLT 是否安装&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ xcode-select --install
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;安装 fastlane&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ sudo gem install -n /usr/local/bin fastlane
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;检查版本 fastlane&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ fastlane --version
fastlane installation at path:
/Library/Ruby/Gems/2.0.0/gems/fastlane-2.14.2/bin/fastlane
-----------------------------
fastlane 2.14.2
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;OK,安装完成&lt;/p&gt;

&lt;h5 id=&quot;fastlane-1&quot;&gt;1.3 为项目配置 fastlane&lt;/h5&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ cd 项目目录
$ fastlane init
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;如果期间报错 &lt;code class=&quot;highlighter-rouge&quot;&gt;Connection reset by peer - SSL_Connect&lt;/code&gt;,就需要执行:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ brew update &amp;amp;&amp;amp; brew install ruby
// 重装
$ sudo gem install -n /usr/local/bin fastlane
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;然后重新执行&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ fastlane init
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;期间会让你输入 Apple ID 账号密码(这个信息会存在钥匙串中,后续使用无需再输入密码)&lt;/li&gt;
  &lt;li&gt;会检测当前的 app identifier 是否在  ADC 中&lt;/li&gt;
  &lt;li&gt;会检测当前 app 是否在 ITC 中&lt;/li&gt;
  &lt;li&gt;如果已经在 ADC 和 ITC 中创建相应的信息,那么过程会很顺利,如下图:&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://ooo.0o0.ooo/2017/02/07/58992aea708c6.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;并在 Xcode 项目目录中生成如下文件:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://ooo.0o0.ooo/2017/02/07/58992b1016443.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;注意:如果没有在 ITC 中创建 App ,也就不会创建上述两个文件夹;当然也可以后续创建,执行如下操作即可:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ fastlane produce init
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;fastlane--2&quot;&gt;2.fastlane 文件配置&lt;/h3&gt;

&lt;p&gt;fastlane 的各文件解释如下:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Appfile:用于存储应用程序标识符和Apple ID 等信息&lt;/li&gt;
  &lt;li&gt;Fastfile:配置管理 lane&lt;/li&gt;
  &lt;li&gt;Deliverfile:配置应用在 ITC 中的各种信息,和 ICC 中的数据是一一对应的&lt;/li&gt;
  &lt;li&gt;metadata:包含应用在 ITC 中的各种信息&lt;/li&gt;
  &lt;li&gt;screenshots:包含截图数据&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;需要注意的是,metadata 和 Deliverfile,都可以配置 ITC 的数据,但后者优先级高.正如下图:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://ooo.0o0.ooo/2017/02/08/589aba7c0b998.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://ooo.0o0.ooo/2017/02/08/589aba7c1d252.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;下文先在 metadata 文件夹中进行配置用于演示,在文末会删除 metadata 中的配置文本,全部配置在 Deliverfile 中.&lt;/p&gt;

&lt;h5 id=&quot;metadata-&quot;&gt;2.1 配置 metadata 文件夹&lt;/h5&gt;

&lt;p&gt;修改 App 描述:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ cd metadata 
$ cd zh-Hans
$ vim description.txt
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;修改关键字:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ vim keywords.txt
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;修改 support_url:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ vim support_url.txt
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;修改 copyright:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ vim copyright.txt
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;等等,其他信息的修改类似.&lt;/p&gt;

&lt;p&gt;然后创建分级文件:itunes_rating_config.json,这个和 ICC 中的分级是对应的.&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;CARTOON_FANTASY_VIOLENCE&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;REALISTIC_VIOLENCE&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; 
&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;PROLONGED_GRAPHIC_SADISTIC_REALISTIC_VIOLENCE&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;PROFANITY_CRUDE_HUMOR&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;MATURE_SUGGESTIVE&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; 
&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;HORROR&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;MEDICAL_TREATMENT_INFO&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;ALCOHOL_TOBACCO_DRUGS&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; 
&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;GAMBLING&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; 
&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;SEXUAL_CONTENT_NUDITY&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;GRAPHIC_SEXUAL_CONTENT_NUDITY&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; 
&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;UNRESTRICTED_WEB_ACCESS&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;GAMBLING_CONTESTS&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;此处配置参见&lt;a href=&quot;https://github.com/fastlane/fastlane/blob/master/deliver/Reference.md&quot;&gt;官方文档&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;然后将 App 图标添加至文件夹中,接下来要创建证书:&lt;/p&gt;

&lt;h5 id=&quot;section-4&quot;&gt;2.2 配置证书&lt;/h5&gt;

&lt;p&gt;修改 Fastfile:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ vim Fastfile
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;修改内容如下:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;fastlane_version &quot;2.14.2&quot;

default_platform :ios

platform :ios do
 
  # 当前任务的描述
  desc &quot;Creating a code signing certificate and provisioning profile&quot;
  # 任务名称
  lane :provision do
    # 创建 ITC 中的 App 信息
    produce(
      app_name: 'AD_Demo',
      language: 'zh-Hans',
      app_version: '1.0',
      sku: 'com.3code.ADDemo.Test'
    )
    # 使用证书创建私钥及签名
    cert
    # 每次运行时创建新的配置文件
    sigh(force: true)
  end
 
  error do |lane, exception|
  
  end
  
end
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;如果想创建 ad hoc 配置文件,需要指定sigh(adhoc: true).更多的信息参见:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fastlane/fastlane/tree/master/fastlane/docs&quot;&gt;官方文档&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.fastlane.tools/actions/&quot;&gt;fastlane actions&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;fastlane--itc&quot;&gt;2.3 将 fastlane 本地配置上传至 ITC&lt;/h5&gt;

&lt;p&gt;重新进入项目目录,执行如下操作:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ fastlane provision
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;等待一小会儿,终端提示成功创建证书配置:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;fastlane.tools finished successfully 🎉
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;打开 ICC 网页,会发现本地的配置,已经成功上传.&lt;/p&gt;

&lt;h3 id=&quot;xcode-&quot;&gt;3.Xcode 配置&lt;/h3&gt;

&lt;p&gt;xcode 配置也简单,只需要将项目修改至生产状态即可(描述文件).其它像构建版本号之类的不用理会, fastlane 会处理的.&lt;/p&gt;

&lt;h3 id=&quot;snapshot--xctest&quot;&gt;4.Snapshot 截图和 XCTest&lt;/h3&gt;

&lt;p&gt;snapshot 需要和 XCTest 配合使用,关于 XCTest,我的博客中&lt;a href=&quot;www.3code.info/2017/01/23/AD-XCTest/&quot;&gt;有一篇文章&lt;/a&gt;做了简单介绍.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ fastlane snapshot init
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;目录中会生成一个 Snapfile 文件,用于配置截图信息,修改内容如下:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# 图片尺寸
devices([
  &quot;iPhone 5&quot;,
  &quot;iPhone 6&quot;,
  &quot;iPhone 6 Plus&quot;
])
 
# 支持语言
languages([
  'zh-Hans'
])
 
# 储存位置
output_directory &quot;./fastlane/screenshots&quot;
 
# 删除之前图片
clear_previous_screenshots true
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;然后打开 Xcode 工程,添加截图设置(需要增加 UI Test, 因为截图是在 UI Test 时截取的):&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;\\ 1）在项目添加UI测试,已经添加略过
\\ 2）将./fastlane/SnapshotHelper.swift 添加到UI测试中
\\ 3）打开 AD_DemoUITests.swift ,删除setUp和tearDown方法，然后在其中添加以下代码testExample：
 
  let app = XCUIApplication()
  setupSnapshot(app)
  app.launch()
  
  app.buttons[&quot;next&quot;].tap()
  snapshot(&quot;01firstPage&quot;) // 此处截图
  
  app.buttons[&quot;back&quot;].tap()
  snapshot(&quot;02secondPage&quot;) // 此处截图

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;打开 Fastfile ,并添加如下信息,用于配置截图&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  desc &quot;Take screenshots&quot;
  lane :screenshot do
    snapshot
  end
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;执行 &lt;code class=&quot;highlighter-rouge&quot;&gt;$ fastlane screenshot&lt;/code&gt;, fastlane 会自动调用模拟器,执行测试并生成快照,可能会由于模拟器启动慢而导致时间稍微有点长.&lt;/p&gt;

&lt;p&gt;成功截图的提示:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://ooo.0o0.ooo/2017/02/07/58995745a83cd.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;ipa-&quot;&gt;5.创建 IPA 文件&lt;/h3&gt;

&lt;p&gt;打开 fastfile,加入如下代码,配置创建 ipa&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;desc &quot;Create ipa&quot;
  lane :build do
    increment_build_number
    gym
  end
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;保存并执行如下操作,将自动创建 IPA 包&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ fastlane build
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;如果出现错误: &lt;code class=&quot;highlighter-rouge&quot;&gt;There does not seem to be a CURRENT_PROJECT_VERSION key set for this project.  Add this key to your target's expert build settings.&lt;/code&gt;
&lt;a href=&quot;https://developer.apple.com/library/content/qa/qa1827/_index.html&quot;&gt;请查阅此处&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;这是一个自动增加构建版本号的设置,需要手动修改.&lt;/p&gt;

&lt;h3 id=&quot;ipa--itc&quot;&gt;6.上传 IPA 文件到 ITC&lt;/h3&gt;

&lt;p&gt;打开 Fastfile ,添加如下代码:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;desc &quot;Upload to App Store&quot;
  lane :upload do
    deliver
  end
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;然后执行命令,上传到 ITC :&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ fastlane upload
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;期间,会创建一个 html 形式的预览文件,确认没问题输入 y;&lt;/p&gt;

&lt;p&gt;当然最有可能的错误就是网络链接的问题: &lt;code class=&quot;highlighter-rouge&quot;&gt;Please use diagnostic mode to check connectivity. You need to have outbound access to TCP port 443.&lt;/code&gt; 重新配置代理即可.&lt;/p&gt;

&lt;h3 id=&quot;deliverfile&quot;&gt;7.配置 Deliverfile&lt;/h3&gt;

&lt;p&gt;其实上传 ITC 最主要的文件是 Deliverfile,配置好 Deliverfile 后,可以删除 metadata 文件夹中的文本配置.最终配置如下图:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://ooo.0o0.ooo/2017/02/08/589ac0ac8d172.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;以下是主要的配置,更多更详细的&lt;a href=&quot;https://github.com/mythkiven/AD_Fastlane/blob/master/AD_Demo/fastlane/Deliverfile&quot;&gt;请戳文件&lt;/a&gt;,里面有详细的注释,拿来即可使用&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
# 1 app_identifier
app_identifier &quot;com.3code.ADDemo&quot;

# 2 用户名,Apple ID电子邮件地址
username &quot;Apple ID电子邮件地址&quot;  

# 3 支持语言
supportedLanguages = {
  &quot;cmn-Hans&quot; =&amp;gt; &quot;zh-Hans&quot;
}

# 4 app 名称
name({
'zh-Hans' =&amp;gt; &quot;ADDemo&quot;
})

# 5 描述
description({
  'zh-Hans' =&amp;gt; &quot;简体中文版&quot;
})

# 6 提交审核信息
submission_information({    
    export_compliance_encryption_updated: false,
    export_compliance_uses_encryption: false,
    content_rights_contains_third_party_content: false,
    add_id_info_uses_idfa: false
})

# 7 应用审核小组的联系信息 app 审核信息
app_review_information(
  first_name: &quot;name&quot;,
  last_name: &quot;name&quot;,
  phone_number: &quot;手机号&quot;,
  email_address: &quot;email&quot;,
  demo_user: &quot;测试账号用户名&quot;,
  demo_password: &quot;测试账号密码&quot;,
  notes: &quot;noting&quot;
)

# 8 copyright 
copyright &quot;#{Time.now.year} 3code&quot;

# 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;appstore-&quot;&gt;8.提交 AppStore 审核&lt;/h3&gt;

&lt;p&gt;继续打开 Fastfile,修改如下代码:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;desc &quot;Upload to App Store and submit for review&quot;
  lane :upload do
    deliver(
      submit_for_review: true
    )
  end
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;然后执行命令,提交审核 :&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ fastlane upload
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;section-5&quot;&gt;9.使用一键命令&lt;/h3&gt;

&lt;p&gt;添加如下的代码,可以一步搞定所有的操作:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;desc &quot;Provision, take screenshots, build and upload to App Store&quot;
  lane :do_everything do
    provision
    screenshot
    build
    upload
  end
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;对应的命令是:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ fastlane do_everything
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;本文只是简单的介绍了 fastlane 的使用,更多的资料还请参考文末的链接&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;如果你对 ITC 不了解,或者很少发布 App ,建议看看官方文档,要知道发布 App 也有&lt;a href=&quot;https://developer.apple.com/library/content/documentation/LanguagesUtilities/Conceptual/iTunesConnect_Guide_SCh/Appendices/Properties.html&quot;&gt;官方指南哦&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;本文是系列文章,后续文章会陆续在这里以及我的&lt;a href=&quot;www.3code.info&quot;&gt;博客&lt;/a&gt;中发布,喜欢请给个✨吧&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;section-6&quot;&gt;10.参考&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://fastlane.tools/&quot;&gt;官网&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fastlane/fastlane&quot;&gt;github&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.fastlane.tools/getting-started/ios/setup/&quot;&gt;文档&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;最后给点小建议:如果遇到错误首选就是查 issues,你遇到的问题,基本前人都遇到过了.我能在2天里快速入门 fastlane 全靠看 issues 😁😁&lt;/p&gt;

</description>
        <pubDate>Tue, 07 Feb 2017 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2017/02/07/AD-Fastlane/</link>
        <guid isPermaLink="true">http://localhost:4000/2017/02/07/AD-Fastlane/</guid>
        
        <category>fastlane</category>
        
        
        <category>CI</category>
        
      </item>
    
      <item>
        <title>持续集成系列 - 测试: XCTest</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#section&quot; id=&quot;markdown-toc-section&quot;&gt;测试简述&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#itc&quot; id=&quot;markdown-toc-itc&quot;&gt;自动执行测试,自动构建并分发,自动部署到 ITC&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#unit-&quot; id=&quot;markdown-toc-unit-&quot;&gt;Unit 代表单元测试:&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#ui&quot; id=&quot;markdown-toc-ui&quot;&gt;UI自动化测试框架&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#ios-&quot; id=&quot;markdown-toc-ios-&quot;&gt;iOS 自动化测试实践&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#ui-testing--accessibility&quot; id=&quot;markdown-toc-ui-testing--accessibility&quot;&gt;UI Testing 和 Accessibility&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#demo&quot; id=&quot;markdown-toc-demo&quot;&gt;demo&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#section-1&quot; id=&quot;markdown-toc-section-1&quot;&gt;参考及延伸阅读&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;section&quot;&gt;测试简述&lt;/h3&gt;

&lt;h5 id=&quot;itc&quot;&gt;自动执行测试,自动构建并分发,自动部署到 ITC&lt;/h5&gt;

&lt;p&gt;自动化测试 –&amp;gt; 持续部署&lt;/p&gt;

&lt;p&gt;在互联网的产品开发时代，产品迭代越来越频繁，“从功能开发完成直到成功部署”这一阶段被称为软件开发“最后一公里”。很多开发团队也越来越认识到，自动化测试和持续部署可帮助开发团队提高迭代效率和质量。
那么，如何更好地解决“最后一公里”这一问题呢?&lt;/p&gt;

&lt;p&gt;一切从自动化测试开始，让自动化测试贯穿在整个项目开发-集成-部署-交付的-开发流程中。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://huaban.com/go/?pin_id=1002439558&quot; alt=&quot;&quot; /&gt;
在这个分层自动化测试金字塔中，&lt;/p&gt;
&lt;h4 id=&quot;unit-&quot;&gt;Unit 代表单元测试:&lt;/h4&gt;

&lt;p&gt;XCTest是苹果在iOS 7和Xcode5引入的一个简单而强大的测试框架，它的测试编写起来非常简单，并且遵循xUnit风格。XCTest的优点是与Xcode深度集成，有专门的Test导航栏，但因为受限于官方测试API，因此功能不是很丰富。&lt;/p&gt;

&lt;p&gt;iOS 中的单元测试开源库:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Kiwi是对XCTest的一个完整替代，使用xSpec风格编写测试。Kiwi带有自己的一套工具集，包括expectations、mocks、stubs，甚至还支持异步测试。&lt;/li&gt;
  &lt;li&gt;Specta与Kiwi功能相似，但在架构上非常不同。Kiwi注重功能的整合，而Specta则注重模块化。它本身只专注于运行测试，而将模拟、匹配等功能交给第三方。下
下面这些一些开源测试组件，它们能与Specta和Kiwi框架搭配使用：&lt;/li&gt;
  &lt;li&gt;Expecta：匹配程序框架。&lt;/li&gt;
  &lt;li&gt;OCHamcrest：匹配程序框架。&lt;/li&gt;
  &lt;li&gt;OCMock：模拟测试框架。&lt;/li&gt;
  &lt;li&gt;OCMockito：模拟测试框架。&lt;/li&gt;
  &lt;li&gt;OHTTPStubs：模拟网络请求的库，基于block的语法来匹配URL。&lt;/li&gt;
  &lt;li&gt;Nocilla：模拟网络请求的库，使用链式API。&lt;/li&gt;
  &lt;li&gt;Quick是:一个使用Swift开发的新测试框架，对测试使用Swift编写的App非常友好。它还有一个Nimble库用于编写匹配模式。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;ui&quot;&gt;UI自动化测试框架&lt;/h2&gt;

&lt;p&gt;一些第三方自动化测试框架则比较成熟，如Appium, MonkeyTalk，Frank等，这里介绍KIF和EarlGrey:开源\内嵌式框架 (以 framework 形式内嵌至应用中) , 本质上是iOS的Unit test
\使用Object-C和Swift\支持真机和模拟器&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;EarlGrey:原生的 iOS UI 自动化测试框架,写法多样,操作灵活,作为后来者的EarlGrey功能更加强大.&lt;a href=&quot;https://github.com/google/EarlGrey&quot;&gt;github/文档&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;KIF:出来早\KIF的语法比较简单\适合快速开发.&lt;a href=&quot;&quot;&gt;github&lt;/a&gt;&lt;a href=&quot;http://cocoadocs.org/docsets/KIF/3.5.1/&quot;&gt;文档&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;ios-&quot;&gt;iOS 自动化测试实践&lt;/h1&gt;

&lt;p&gt;###单元测试（Unit Testing）是针对程序单元进行正确性检验的测试工作,程序单元是应用的 最小可测试部件.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Expecta:专为Objective-C/Cocoa而生，相比OCHamcrest，其优化了匹配的语法，测试用例的可读性更高。&lt;/li&gt;
  &lt;li&gt;OCHamcrest:&lt;/li&gt;
  &lt;li&gt;GHUnit已被弃用，不能积极维护！使用XCTest来代替。&lt;/li&gt;
  &lt;li&gt;OCUnit，被官方集成进XCode 4.x版本中；&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;持续集成CI（Continuous Integration）是一种实践,可以让团队在持续的基础上收到反馈并进行改进,不必等到开发周期后期才寻找和修复缺陷.通俗一点儿说:就是指对于开发人员的每一次代码提交,都自动地把Repository中所有代码Check out到一个空目录,并且自动运行所有Test Case.如果成功则接受这次提交,否则告诉所有人,这是一个失败的Revision[2]&lt;/p&gt;

&lt;p&gt;说起 UI 测试,在 iOS 的开源社区有过一系列的尝试,比如 KIF 框架,Apple 自己的 Automating UI Testing 或者 Facebook 的截图测试等.这些方法有一个共同的特点,那就是配置起来十分繁琐,使用上也有诸多不便.这大概也是 UI 测试所面临的最大窘境 – 往往开发者在一个项目里写了一两个 UI 测试用例后,就会觉得难以维护,怯于巨大的时间成本,继而放弃.&lt;/p&gt;

&lt;p&gt;Apple 在 Xcode 7 中新加入了一套 UI Testing 的工具,其目的就是解决这个问题.新的 UI Testing 比以往的解决方案要简单不少,特别是在创建测试用例的时候更集成了录制的功能,这有希望让 UI Testing 变得更为普及.&lt;/p&gt;

&lt;p&gt;其他概念比如: 单元测试\集成测试.&lt;/p&gt;

&lt;p&gt;单元测试:对软件中的最小可测试单元进行检验。通常而言，一个单元测试是用于判断某个特定条件（或者场景）下某个特定函数的行为。相比其他层级的测试，单元测试发现并解决问题付出的成本相对来说最低，而投入产出比最高&lt;/p&gt;

&lt;p&gt;集成测试:是在单元测试的基础上，将所有模块按照设计要求（如根据结构图）组装成为子系统或系统，进行集成测试集成测试是在单元测试的基础上，测试在将所有的软件单元按照概要设计规格说明的要求组装成模块、子系统或系统的过程中各部分工作是否达到或实现相应技术指标及要求的活动。也就是说，在集成测试之前，单元测试应该已经完成。这一点很重要，因为如果不经过单元测试，那么集成测试的效果将会受到很大影响，并且会大幅增加软件单元代码纠错的代价。&lt;/p&gt;

&lt;h3 id=&quot;ui-testing--accessibility&quot;&gt;UI Testing 和 Accessibility&lt;/h3&gt;

&lt;p&gt;在 iOS 中使用 XCTest, 就必须要了解 Accessibility. UI Accessibility 早在 iOS 3.0 就被引入了,用来辅助身体不便的人士使用 app.VoiceOver 是 Apple 的屏幕阅读技术,而 UI Accessibility 的基本原则就是对屏幕上的 UI 元素进行分类和标记.两者配合,通过阅读或者聆听这些元素,用户就可以在不接触屏幕的情况下通过声音来使用 app.&lt;/p&gt;

&lt;p&gt;Accessibility 的核心思想是对 UI 元素进行分类和标记 – 将屏幕上的 UI 分类为像是按钮,文本框,cell 或者是静态文本 (也就是 label) 这样的类型,然后使用 identifier 来区分不同的 UI 元素.用户可以通过语音控制 app 的按钮点击,或是询问某个 label 的内容等等,十分方便.iOS SDK 中的控件都实现了默认的 Accessibility 支持,而我们如果使用自定义的控件的话,则需要自行使用 Accessibility 的 API 来进行添加.&lt;/p&gt;

&lt;p&gt;UI 测试的本质就是定位在屏幕上的元素,实现一些像是点击或者拖动这样的操作交互,然后获取 UI 的状态进行断言来判断是否符合我们的预期.这个过程及其需求与 Accessibility 的功能是高度吻合的.这也是为什么 iOS 中大部分的 UI 测试框架都是基于 UI Accessibility 的原因, UI Testing 也不例外.&lt;/p&gt;

&lt;h3 id=&quot;demo&quot;&gt;demo&lt;/h3&gt;

&lt;p&gt;demo 比较简单,主要用于演示基本的流程,代码在 GitHub 中.&lt;/p&gt;

&lt;p&gt;相比起其他一些 UI 测试框架,Xcode 的 UI Testing 最为诱人的优点在于可以直接录制操作.新建一个 XCTest,默认实现如下:&lt;/p&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;XCTest&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;UITESTUITests&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;XCTestCase&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        
    &lt;span class=&quot;k&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;setUp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;setUp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        
        &lt;span class=&quot;n&quot;&gt;continueAfterFailure&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;
        
        &lt;span class=&quot;c1&quot;&gt;// launch 方法来启动测试 app&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// XCUIApplication 是 UIApplication 在测试进程中的代理 (proxy)&lt;/span&gt;

        &lt;span class=&quot;kt&quot;&gt;XCUIApplication&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;launch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; 

    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    
    &lt;span class=&quot;k&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;tearDown&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;tearDown&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    
    &lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;testExample&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;使用的方法是,先创建一个测试方法,然后将光标停留在方法中,然后点击录制.和 app 的交互就会被自动转写成代码.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://ooo.0o0.ooo/2017/02/06/5898158326f72.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;操作是:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;2次点击 “color” 按钮 ,改变背景色&lt;/li&gt;
  &lt;li&gt;点击”下一页”按钮 push 到第二页&lt;/li&gt;
  &lt;li&gt;点击”back” 按钮 pop 回第一页&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://ooo.0o0.ooo/2017/02/06/589817a5d03a6.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;testMyApp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        
        &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;app&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;XCUIApplication&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;// &quot;color&quot; 按钮设置 Accessibility id 为 changeColor&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;changecolorButton&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;buttons&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;changeColor&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;changecolorButton&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;tap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;changecolorButton&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;tap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;// &quot;下一页&quot;按钮没有设置 Accessibility id&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;buttons&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;下一页&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;tap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;// &quot;back&quot; 按钮设置 Accessibility id 为 back&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;buttons&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;back&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;tap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;编写完成之后可以 cmd+U 运行试试吧.&lt;/p&gt;

&lt;h3 id=&quot;section-1&quot;&gt;参考及延伸阅读&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.blogs8.cn/posts/A1Rj797&quot;&gt;Swift中KIF测试的特点－b&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.infoq.com/cn/news/2015/01/fastlane-ios-continuous-deploy&quot;&gt;Xcode 7 UI 测试初窥&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://masilotti.com/ui-testing-cheat-sheet/&quot;&gt;UITest&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://nshipster.com/xctestcase/&quot;&gt;XCTest​Case&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://objccn.io/issue-15-6/&quot;&gt;UI 测试&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://objccn.io/issue-15-7/&quot;&gt;截图测试&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Mon, 23 Jan 2017 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2017/01/23/AD-XCTest/</link>
        <guid isPermaLink="true">http://localhost:4000/2017/01/23/AD-XCTest/</guid>
        
        <category>XCTest</category>
        
        
        <category>CI</category>
        
      </item>
    
      <item>
        <title>持续集成系列 - Xcode 的脚本世界</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#section&quot; id=&quot;markdown-toc-section&quot;&gt;基础知识&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#xcode-&quot; id=&quot;markdown-toc-xcode-&quot;&gt;1. 嵌入 Xcode 项目的脚本&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#xcodebuild&quot; id=&quot;markdown-toc-xcodebuild&quot;&gt;2. Xcodebuild&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#section-1&quot; id=&quot;markdown-toc-section-1&quot;&gt;脚本打包&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#plist&quot; id=&quot;markdown-toc-plist&quot;&gt;1.准备Plist文件:&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#section-2&quot; id=&quot;markdown-toc-section-2&quot;&gt;脚本打测试包&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#section-3&quot; id=&quot;markdown-toc-section-3&quot;&gt;脚本打生产包&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#section-4&quot; id=&quot;markdown-toc-section-4&quot;&gt;#&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;section&quot;&gt;基础知识&lt;/h3&gt;

&lt;p&gt;现在有两个需求:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;打一个 AdHoc 测试包,发送给测试人员进行测试&lt;/li&gt;
  &lt;li&gt;打一个 生产包,上线 ITC&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;以上如果人工手动操作,挺耗时耗力的,而自动化则可以完美解决.自动化打包包括两种途径:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;使用 Apple 自出品的脚本语言: AppleScript;&lt;/li&gt;
  &lt;li&gt;使用 shell 或者 python&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;以下的操作基本是基于 Xcode 自带的命令行工具: Command Line Tools ,其包含两个重要的工具:
xcodebuild 和 xcrun.相关工具及概念如下:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;xcodebuild 主要用于编译和打包,&lt;code class=&quot;highlighter-rouge&quot;&gt;$ xcodebuild -help&lt;/code&gt; 可以查看用法&lt;/li&gt;
  &lt;li&gt;xcrun 主要用于打包 &lt;code class=&quot;highlighter-rouge&quot;&gt;xcrun -h&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;以及 altool ,用于上传二进制文件到 ITC&lt;/li&gt;
  &lt;li&gt;Workspace、Project、Scheme、Target的区别:&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;Workspace: 是最大的集合,可以包含多个Project,可以管理不同的Project之间的关系.Workspace是以xcworkspace的文件形式存在的(和Project一致).Workspace的存在是为了解决原来仅有Project的时候不同的Project之间的引用和调用困难的问题.同时,一个Workspace的Project共用一个编译路径。比如使用CocoaPod或者使用其他开发库\框架.&lt;/p&gt;

  &lt;p&gt;Project: 是一个仓库,包含编译一个或多个product所需的文件\资源和信息,保持和聚合这些元素间的关系(每个Target能指定自己的Build Settings来覆盖Project),一般包含的内容如下:&lt;/p&gt;

  &lt;blockquote&gt;
    &lt;p&gt;Source code, including header files and implementation files
Libraries and frameworks, internal and external
Resource files
Image files
Interface Builder (nib) files&lt;/p&gt;
  &lt;/blockquote&gt;

  &lt;p&gt;Scheme: 包含了一些要构建的Scheme,一些构建时用到的设置,一些要运行的测试.同时只能有一个Scheme是有效的.&lt;/p&gt;

  &lt;p&gt;Target: 是对应了具体一个想要构建的Product,包含了一些构建这个Product所需的配置和文件(build settings和build phases).一个Project可以包含多个Target.&lt;/p&gt;

&lt;/blockquote&gt;

&lt;h5 id=&quot;xcode-&quot;&gt;1. 嵌入 Xcode 项目的脚本&lt;/h5&gt;

&lt;ul&gt;
  &lt;li&gt;脚本的位置:&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;Build Phases -&amp;gt; 点击左上角+ -&amp;gt; 添加 Run Script (运行脚本) -&amp;gt; 添加脚本即可
&lt;img src=&quot;https://ooo.0o0.ooo/2017/02/12/58a0190a69476.png&quot; alt=&quot;374E29EC-49D9-4348-BA45-56B665CA4448.png&quot; /&gt;
&lt;img src=&quot;https://ooo.0o0.ooo/2017/02/12/58a0193db099b.png&quot; alt=&quot;81EB716F-2F50-426D-BDBF-C0E2C1EF566E.png&quot; /&gt;&lt;/p&gt;

  &lt;p&gt;默认的是 shell 脚本.需要修改成 py 脚本.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# 查看 python 解释器的位置:&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;whereis python
/usr/bin/python
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;首先将上方的脚本解释器 由 &lt;code class=&quot;highlighter-rouge&quot;&gt;/bin/sh &lt;/code&gt;修改为 &lt;code class=&quot;highlighter-rouge&quot;&gt;/usr/bin/python &lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;然后添加脚本:在编译时,修改一个main.cpp文件的内容:&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#-*- coding:utf-8 -*-&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;os&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;cppfile&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'/Users/jiangxiaocai/Desktop/Test/main.cpp'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'w'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;outstr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;// 修改.cpp 文件&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;cppfile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;outstr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;cppfile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;https://ooo.0o0.ooo/2017/02/12/58a01bc9a01d9.png&quot; alt=&quot;C34DFE25-2477-457F-B57A-26D805A55F96.png&quot; /&gt;
&lt;img src=&quot;https://ooo.0o0.ooo/2017/02/12/58a01be30a2d1.png&quot; alt=&quot;06809A1C-87D3-4E9F-AC10-4FFB63193CE6.png&quot; /&gt;&lt;/p&gt;

&lt;h5 id=&quot;xcodebuild&quot;&gt;2. Xcodebuild&lt;/h5&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# 功能选项没有,放进来,主要是用于编译的命令

Available keys for -exportOptionsPlist:

    compileBitcode : Bool

        # For non-App Store exports, should Xcode re-compile the app from bitcode? Defaults to YES.

    embedOnDemandResourcesAssetPacksInBundle : Bool

        # For non-App Store exports, if the app uses On Demand Resources and this is YES, asset packs are embedded in the app bundle so that the app can be tested without a server to host asset packs. Defaults to YES unless onDemandResourcesAssetPacksBaseURL is specified.

    iCloudContainerEnvironment

        # For non-App Store exports, if the app is using CloudKit, this configures the &quot;com.apple.developer.icloud-container-environment&quot; entitlement. Available options: Development and Production. Defaults to Development.

    manifest : Dictionary

        # For non-App Store exports, users can download your app over the web by opening your distribution manifest file in a web browser. To generate a distribution manifest, the value of this key should be a dictionary with three sub-keys: appURL, displayImageURL, fullSizeImageURL. The additional sub-key assetPackManifestURL is required when using on demand resources.

    method : String

        # Describes how Xcode should export the archive. Available options: app-store, ad-hoc, package, enterprise, development, and developer-id. The list of options varies based on the type of archive. Defaults to development.

    onDemandResourcesAssetPacksBaseURL : String

        # For non-App Store exports, if the app uses On Demand Resources and embedOnDemandResourcesAssetPacksInBundle isn't YES, this should be a base URL specifying where asset packs are going to be hosted. This configures the app to download asset packs from the specified URL.

    teamID : String

        # The Developer Portal team to use for this export. Defaults to the team used to build the archive.

    thinning : String

        # For non-App Store exports, should Xcode thin the package for one or more device variants? Available options: &amp;lt;none&amp;gt; (Xcode produces a non-thinned universal app), &amp;lt;thin-for-all-variants&amp;gt; (Xcode produces a universal app and all available thinned variants), or a model identifier for a specific device (e.g. &quot;iPhone7,1&quot;). Defaults to &amp;lt;none&amp;gt;.

    uploadBitcode : Bool

        # For App Store exports, should the package include bitcode? Defaults to YES.

    uploadSymbols : Bool

        # For App Store exports, should the package include symbols? Defaults to YES.

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;section-1&quot;&gt;脚本打包&lt;/h3&gt;

&lt;p&gt;一般来说实现实现方式有两种:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;xcodebuild 和 xcrun 实现:&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;xcodebuild -workspace XXX -scheme XXX -configuration Release&lt;/p&gt;

  &lt;p&gt;xcrun -sdk iphoneos PackageApplication -v “/XXX/XXX.app” -o “/XXX/XXX”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;xcodebuild 和 exportOptionsPlist 实现:&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;准备两个Plist文件，用于导出不同ipa包时使用&lt;/p&gt;

  &lt;p&gt;获取命令行参数，区分上传到Fir还是App Store&lt;/p&gt;

  &lt;p&gt;清理构建目录&lt;/p&gt;

  &lt;p&gt;编译打包&lt;/p&gt;

  &lt;p&gt;导出包&lt;/p&gt;

  &lt;p&gt;上传到Fir或者验证并上传到App Store&lt;/p&gt;

  &lt;p&gt;发邮件通知&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;下边是基于第二种方式的方法:
首先因为不了解这种自动化打包,所以要看官方的资料,最直接的方式就是:
&lt;code class=&quot;highlighter-rouge&quot;&gt;$ xcodebuild -help&lt;/code&gt;,得知如下信息:&lt;/p&gt;

&lt;p&gt;Available keys for -exportOptionsPlist:以下每个 key 的详细解释可以&lt;code class=&quot;highlighter-rouge&quot;&gt;$ xcodebuild -help&lt;/code&gt;查看即可.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;测试包导出: compileBitcode\embedOnDemandResourcesAssetPacksInBundle\iCloudContainerEnvironment\manifest\onDemandResourcesAssetPacksBaseURL\thinning&lt;/li&gt;
  &lt;li&gt;用于 App Store 导出: uploadBitcode\uploadSymbols&lt;/li&gt;
  &lt;li&gt;共用: method\teamID&lt;/li&gt;
  &lt;li&gt;method 可选值: app-store\ package\ ad-hoc\ enterprise\ development and developer-id&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;步骤为:&lt;/p&gt;

&lt;h5 id=&quot;plist&quot;&gt;1.准备Plist文件:&lt;/h5&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;AppStoreExportOptions.plist： method＝app-store，uploadBitcode＝YES，uploadSymbols＝YES
AdHocExportOptions.plist： method＝ad-hoc，compileBitcode＝NO
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;xcodebuild -exportArchive -archivePath ./xxx.xcarchive -exportOptionsPlist ./AdHocExportOptions.plist -exportPath ./&lt;/p&gt;

&lt;h5 id=&quot;section-2&quot;&gt;脚本打测试包&lt;/h5&gt;

&lt;h5 id=&quot;section-3&quot;&gt;脚本打生产包&lt;/h5&gt;

&lt;h2 id=&quot;section-4&quot;&gt;#&lt;/h2&gt;

&lt;p&gt;参考资料:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://zackzheng.info/2015/12/27/2015-12-27-an-automated-script-for-building-archiving-submission-sending-emails/&quot;&gt;教程1&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://wangjordy.github.io/blog/2015/06/25/xcodebuildtools/&quot;&gt;教程2&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.cnblogs.com/brycezhang/p/4097487.html&quot;&gt;教程3&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://3426724.blog.51cto.com/3416724/883484&quot;&gt;&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://segmentfault.com/a/1190000004533963&quot;&gt;&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.reviewcode.cn/article.html?reviewId=11&quot;&gt;&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://victorchee.github.io/blog/package-adHoc-ipa/&quot;&gt;&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.jianshu.com/p/9ee0ba3af81a&quot;&gt;&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://blog.nswebfrog.com/2013/02/18/ios-automation/&quot;&gt;&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/webfrogs/xcode_shell&quot;&gt;脚本代码&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://itunesconnect.apple.com/docs/UsingApplicationLoader.pdf&quot;&gt;ApplicationLoader 官方使用指南&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Thu, 19 Jan 2017 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2017/01/19/AD-xctool/</link>
        <guid isPermaLink="true">http://localhost:4000/2017/01/19/AD-xctool/</guid>
        
        <category>Termianl</category>
        
        <category>xctool</category>
        
        
        <category>CI</category>
        
      </item>
    
      <item>
        <title>持续集成系列 - Github中的魔法工具:Travis CI</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#jenkins&quot; id=&quot;markdown-toc-jenkins&quot;&gt;基础知识,参考博文:Jenkins&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#travis-ci-&quot; id=&quot;markdown-toc-travis-ci-&quot;&gt;1. Travis-CI 简介&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#jenkins-1&quot; id=&quot;markdown-toc-jenkins-1&quot;&gt;对比 Jenkins&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#travis-ci--1&quot; id=&quot;markdown-toc-travis-ci--1&quot;&gt;2.Travis-CI 配置小教程&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#project-&quot; id=&quot;markdown-toc-project-&quot;&gt;project 项目配置&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#workspace-&quot; id=&quot;markdown-toc-workspace-&quot;&gt;workspace 管理的项目配置&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#section&quot; id=&quot;markdown-toc-section&quot;&gt;3. 应用程序的签名\证书&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#section-1&quot; id=&quot;markdown-toc-section-1&quot;&gt;4.部署&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#section-2&quot; id=&quot;markdown-toc-section-2&quot;&gt;密码和证书安全&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#section-3&quot; id=&quot;markdown-toc-section-3&quot;&gt;其他&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#section-4&quot; id=&quot;markdown-toc-section-4&quot;&gt;显示构建状态&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#section-5&quot; id=&quot;markdown-toc-section-5&quot;&gt;跳过自动构建&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#section-6&quot; id=&quot;markdown-toc-section-6&quot;&gt;资源&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#unit-&quot; id=&quot;markdown-toc-unit-&quot;&gt;Unit 代表单元测试:&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#ui-&quot; id=&quot;markdown-toc-ui-&quot;&gt;UI 测试&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#ui&quot; id=&quot;markdown-toc-ui&quot;&gt;UI自动化测试框架&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#ios-&quot; id=&quot;markdown-toc-ios-&quot;&gt;iOS 自动化测试实践&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#section-7&quot; id=&quot;markdown-toc-section-7&quot;&gt;工具&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#section-8&quot; id=&quot;markdown-toc-section-8&quot;&gt;持续集成平台&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#continuous-integration-ci&quot; id=&quot;markdown-toc-continuous-integration-ci&quot;&gt;持续集成(Continuous Integration) CI&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#continuous-delivery&quot; id=&quot;markdown-toc-continuous-delivery&quot;&gt;持续交付 Continuous Delivery&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#firim&quot; id=&quot;markdown-toc-firim&quot;&gt;fir.im&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#travis&quot; id=&quot;markdown-toc-travis&quot;&gt;Travis&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#continuous-deployment&quot; id=&quot;markdown-toc-continuous-deployment&quot;&gt;持续部署 Continuous Deployment&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#fastlane-&quot; id=&quot;markdown-toc-fastlane-&quot;&gt;fastlane 解决持续部署问题&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#section-9&quot; id=&quot;markdown-toc-section-9&quot;&gt;自动发布&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#travis-ci&quot; id=&quot;markdown-toc-travis-ci&quot;&gt;配置Travis CI&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;jenkins&quot;&gt;基础知识,参考博文:Jenkins&lt;/h3&gt;

&lt;h3 id=&quot;travis-ci-&quot;&gt;1. Travis-CI 简介&lt;/h3&gt;

&lt;p&gt;Travis-CI 是一个开源的持续构建项目,能够测试和部署;Travis-CI 会同步你在 GitHub 上托管的项目,每当你 Commit Push 之后,预装的编译脚本会分析你的 Xcode 项目,并对每个 target 进行编译.如果所有文件都没有编译错误,并且测试也没有被打断,那么项目就编译成功了.&lt;/p&gt;

&lt;h5 id=&quot;jenkins-1&quot;&gt;对比 Jenkins&lt;/h5&gt;

&lt;ul&gt;
  &lt;li&gt;Jenkins 和 Travis-CI 类似,前者主要用于公司中项目的 CI(商业化),后者则主要用在 GitHub 中(小众)&lt;/li&gt;
  &lt;li&gt;都是基于 Vagrant/Virtualbox技术&lt;/li&gt;
  &lt;li&gt;配置文件:Jenkins 配置在 Jenkins 服务器中,后者配置文件和源码一起.使用 DSL 编写的&lt;/li&gt;
  &lt;li&gt;Travis Ci 与 Github 集成非常紧密,官方的集成测试托管只支持 Github 项目&lt;/li&gt;
  &lt;li&gt;总的来说:如果是开源项目,放在 GitHub 上,使用 Travis CI 来做集成测试是最佳选择.但如果是公司项目,当然是搭建 Jenkins 环境.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;travis-ci--1&quot;&gt;2.Travis-CI 配置小教程&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;1.用你的 GitHub 账号登录 &lt;a href=&quot;https://travis-ci.org/&quot;&gt;Travis-CI&lt;/a&gt;,赋予 TCI 访问 GH 的授权.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;对于私有仓库,需要注册一个 &lt;a href=&quot;https://magnum.travis-ci.com/&quot;&gt;Travis 专业版账号&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;2.登录之后 Travis-CI 就会同步 GitHub 账号的仓库,然后打开个人页面并给你想要构建的项目启用 Travis-CI &lt;img src=&quot;https://raw.githubusercontent.com/nukc/how-to-use-travis-ci/master/images/enable.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;3.创建一个 .travis.yml 文件,在项目的根目录下.则 Travis-CI 会按照 .travis.yml 里的内容进行构建&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;4.最后可以在&lt;a href=&quot;https://travis-ci.org/repositories&quot;&gt;构建状态页面&lt;/a&gt;来查看你的项目是否构建成功&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;project-&quot;&gt;project 项目配置&lt;/h5&gt;

&lt;pre&gt;&lt;code class=&quot;language-DSL&quot;&gt;language: swift # 语言种类
#language: objective-c 

osx_image: xcode8 # 环境

# 根据项目类型不同,可以选择两个 key :xcode_project 或者  xcode_workspace
xcode_project: ./UITEST.xcodeproj # 项目文件相对于.travis.yml文件的路径

xcode_scheme: UITEST # 你需要集成测试的scheme

xcode_sdk: iphonesimulator10.0 # 模拟器

&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&quot;workspace-&quot;&gt;workspace 管理的项目配置&lt;/h5&gt;

&lt;pre&gt;&lt;code class=&quot;language-DSL&quot;&gt;language: swift # 语言种类
#language: objective-c 

osx_image: xcode8 # 环境

# 根据项目类型不同,可以选择两个 key :xcode_project 或者  xcode_workspace
xcode_workspace: ./UITEST.xcworkspace # 项目文件相对于.travis.yml文件的路径

xcode_scheme: UITEST # 你需要集成测试的scheme

xcode_sdk: iphonesimulator10.0 # 模拟器

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;同时也要设置 Target 为 shared 状态.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;打开项目 -&amp;gt; Manage Schemes -&amp;gt; 把需要构建的 Target 勾上 shared -&amp;gt; 选中你需要管理的 scheme,点击左下角的 Edit 按钮 -&amp;gt; 选择 Build 选项，点击左下角的+号按钮，添加你需要依赖的 CocoaPods 管理的第三方静态库的名字，下图是已经添加后的截图.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/656113-97e903b6472ce2eb.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;以上配置,可以看看&lt;a href=&quot;https://docs.travis-ci.com/user/languages/objective-c/&quot;&gt;官方文档&lt;/a&gt;,写的挺详细的&lt;/p&gt;

&lt;h3 id=&quot;section&quot;&gt;3. 应用程序的签名\证书&lt;/h3&gt;

&lt;p&gt;[参见(https://objccn.io/issue-6-5/)&lt;/p&gt;

&lt;h3 id=&quot;section-1&quot;&gt;4.部署&lt;/h3&gt;

&lt;p&gt;负责分发部署的平台很多像:TestFlight \ HockeyApp \ 蒲公英 \ fir.im 等等&lt;/p&gt;

&lt;p&gt;可以配置然后在上述平台进行部署.&lt;/p&gt;

&lt;h3 id=&quot;section-2&quot;&gt;密码和证书安全&lt;/h3&gt;

&lt;p&gt;对于密码等敏感信息,Travis CI提供了2种解决方案:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;对密码等敏感信息进行加密,然后再构建环境时解密&lt;/li&gt;
  &lt;li&gt;在 Travis CI控制台设置环境变量,然后使用 System.getenv() 获取值&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/nukc/how-to-use-travis-ci/master/images/var-setting.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;section-3&quot;&gt;其他&lt;/h3&gt;

&lt;h5 id=&quot;section-4&quot;&gt;显示构建状态&lt;/h5&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/nukc/how-to-use-travis-ci/master/images/image.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h5 id=&quot;section-5&quot;&gt;跳过自动构建&lt;/h5&gt;

&lt;p&gt;如果commit不想让travis ci构建，那么就在commit message里加上[ci skip]就行了。&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git commit -m &lt;span class=&quot;s2&quot;&gt;&quot;[ci skip] commit message&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;section-6&quot;&gt;资源&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.travis-ci.com/user/customizing-the-build/&quot;&gt;官方文档&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/objcio/issue-6-travis-ci&quot;&gt;示例 Demo&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/facebook/xctool&quot;&gt;xctool&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/nukc/how-to-use-travis-ci&quot;&gt;安卓环境下的教程&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;-&lt;a href=&quot;https://objccn.io/issue-6-5/&quot;&gt;优秀的文章为 iOS 建立 Travis CI:签名+部署+发布&lt;/a&gt;
-&lt;a href=&quot;http://blog.csdn.net/jiang314/article/details/54965283&quot;&gt;备份版:优秀的文章为 iOS 建立 Travis CI:签名+部署+发布&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;为 iOS 建立 Travis CI: https://objccn.io/issue-6-5/&lt;/p&gt;

&lt;p&gt;自动化测试 –&amp;gt; 持续部署&lt;/p&gt;

&lt;p&gt;在互联网的产品开发时代，产品迭代越来越频繁，“从功能开发完成直到成功部署”这一阶段被称为软件开发“最后一公里”。很多开发团队也越来越认识到，自动化测试和持续部署可帮助开发团队提高迭代效率和质量。
那么，如何更好地解决“最后一公里”这一问题呢?&lt;/p&gt;

&lt;p&gt;一切从自动化测试开始，让自动化测试贯穿在整个项目开发-集成-部署-交付的-开发流程中。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://huaban.com/go/?pin_id=1002439558&quot; alt=&quot;&quot; /&gt;
在这个分层自动化测试金字塔中，&lt;/p&gt;
&lt;h4 id=&quot;unit-&quot;&gt;Unit 代表单元测试:&lt;/h4&gt;

&lt;p&gt;XCTest是苹果在iOS 7和Xcode5引入的一个简单而强大的测试框架，它的测试编写起来非常简单，并且遵循xUnit风格。XCTest的优点是与Xcode深度集成，有专门的Test导航栏，但因为受限于官方测试API，因此功能不是很丰富。&lt;/p&gt;

&lt;p&gt;iOS 中的单元测试开源库:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Kiwi是对XCTest的一个完整替代，使用xSpec风格编写测试。Kiwi带有自己的一套工具集，包括expectations、mocks、stubs，甚至还支持异步测试。&lt;/li&gt;
  &lt;li&gt;Specta与Kiwi功能相似，但在架构上非常不同。Kiwi注重功能的整合，而Specta则注重模块化。它本身只专注于运行测试，而将模拟、匹配等功能交给第三方。下
下面这些一些开源测试组件，它们能与Specta和Kiwi框架搭配使用：&lt;/li&gt;
  &lt;li&gt;Expecta：匹配程序框架。&lt;/li&gt;
  &lt;li&gt;OCHamcrest：匹配程序框架。&lt;/li&gt;
  &lt;li&gt;OCMock：模拟测试框架。&lt;/li&gt;
  &lt;li&gt;OCMockito：模拟测试框架。&lt;/li&gt;
  &lt;li&gt;OHTTPStubs：模拟网络请求的库，基于block的语法来匹配URL。&lt;/li&gt;
  &lt;li&gt;Nocilla：模拟网络请求的库，使用链式API。&lt;/li&gt;
  &lt;li&gt;Quick是:一个使用Swift开发的新测试框架，对测试使用Swift编写的App非常友好。它还有一个Nimble库用于编写匹配模式。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;对软件中的最小可测试单元进行检验。通常而言，一个单元测试是用于判断某个特定条件（或者场景）下某个特定函数的行为。相比其他层级的测试，单元测试发现并解决问题付出的成本相对来说最低，而投入产出比最高&lt;/p&gt;

&lt;h3 id=&quot;ui-&quot;&gt;UI 测试&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;KIF（Keep It Functional）是用Objective-C编写的用户界面测试框架。KIF tester使用了私有API来了解App中的视图层级。缺点是运行较慢。&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;相关文章:&lt;a href=&quot;http://www.blogs8.cn/posts/A1Rj797&quot;&gt;Swift中KIF测试的特点－b&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Subliminal是另一款与XCTest集成的框架。与KIF不同的是，它基于UIAutomation编写，旨在对开发者隐藏UIAutomation中一些复杂的细节。不过它最后更新日期是2014年2月，可能已停止更新。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Calabash是跨平台开发工具Xamarin推出的一款测试工具。它使用BDD风格来编写验收测试。它的优点是支持跨平台（需使用不同的库），声明式的测试风格非常易于读写。缺点是不够稳定并且运行速度慢。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Service 代表服务集成测试: 集成测试是在单元测试的基础上，将所有模块按照设计要求（如根据结构图）组装成为子系统或系统，进行集成测试集成测试是在单元测试的基础上，测试在将所有的软件单元按照概要设计规格说明的要求组装成模块、子系统或系统的过程中各部分工作是否达到或实现相应技术指标及要求的活动。也就是说，在集成测试之前，单元测试应该已经完成。这一点很重要，因为如果不经过单元测试，那么集成测试的效果将会受到很大影响，并且会大幅增加软件单元代码纠错的代价。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;系统测试:将需测试的软件，作为整个基于计算机系统的一个元素，与计算机硬件、外设、某些支持软件、数据和人员等其他系统元素及环境结合在一起测试。系统测试的目的在于通过与系统的需求定义作比较，发现软件与系统定义不符合或与之矛盾的地方。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;UI 代表页面级的功能测试: 页面展示逻辑及界面前端与服务展现层交互的集成验证.对于前端而言,不同的开发框架有不同的测试工具.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;你是否曾经试着为 iOS 项目搭建一台支持持续集成的服务器，从我的个人经验而言，这可不是一个轻松的活。首先需要准备一台 Mac 电脑，并安装好全部所需的软件和插件。你要负责管理所有的用户账户，并提供安全保护。你需要授予访问仓库的权限，并配置所有的编译步骤和证书。在项目运行时期，你需要保持服务器的稳健和最新。&lt;/p&gt;

&lt;p&gt;最后，原本你想节省的时间，会发现你花费了大量的时间去维护这台服务器。不过如果你的项目托管在 GitHub) 上，现在有了新的希望：Travis CI。该服务可以为你的项目提供持续集成的支持，也就意味着它会负责好托管一个项目的所有细节。在 Ruby 的世界中，Travis CI 已久负盛名。从 2013 年 4 月起，Travis 也开始支持 iOS 和 Mac 平台。&lt;/p&gt;

&lt;p&gt;在 Ruby 的世界中，Travis CI 已久负盛名，从 2013 年 4 月起，Travis 也开始支持 iOS 和 Mac 平台。&lt;/p&gt;

&lt;p&gt;在项目中集成 Travis CI，不仅包括项目的编译和单元测试的运行，还包括将应用部署到 Fir.im 的测试设备上。&lt;/p&gt;

&lt;h2 id=&quot;ui&quot;&gt;UI自动化测试框架&lt;/h2&gt;

&lt;p&gt;一些第三方自动化测试框架则比较成熟，如Appium, MonkeyTalk，Frank等，这里介绍KIF和EarlGrey:开源\内嵌式框架 (以 framework 形式内嵌至应用中) , 本质上是iOS的Unit test
\使用Object-C和Swift\支持真机和模拟器&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;EarlGrey:原生的 iOS UI 自动化测试框架,写法多样,操作灵活,作为后来者的EarlGrey功能更加强大.&lt;a href=&quot;https://github.com/google/EarlGrey&quot;&gt;github/文档&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;KIF:出来早\KIF的语法比较简单\适合快速开发.&lt;a href=&quot;&quot;&gt;github&lt;/a&gt;&lt;a href=&quot;http://cocoadocs.org/docsets/KIF/3.5.1/&quot;&gt;文档&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;ios-&quot;&gt;iOS 自动化测试实践&lt;/h1&gt;

&lt;p&gt;###单元测试（Unit Testing）是针对程序单元进行正确性检验的测试工作,程序单元是应用的 最小可测试部件.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Expecta:专为Objective-C/Cocoa而生，相比OCHamcrest，其优化了匹配的语法，测试用例的可读性更高。&lt;/li&gt;
  &lt;li&gt;OCHamcrest:&lt;/li&gt;
  &lt;li&gt;GHUnit已被弃用，不能积极维护！使用XCTest来代替。&lt;/li&gt;
  &lt;li&gt;OCUnit，被官方集成进XCode 4.x版本中；&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;持续集成CI（Continuous Integration）是一种实践,可以让团队在持续的基础上收到反馈并进行改进,不必等到开发周期后期才寻找和修复缺陷.通俗一点儿说:就是指对于开发人员的每一次代码提交,都自动地把Repository中所有代码Check out到一个空目录,并且自动运行所有Test Case.如果成功则接受这次提交,否则告诉所有人,这是一个失败的Revision[2]&lt;/p&gt;

&lt;h3 id=&quot;section-7&quot;&gt;工具&lt;/h3&gt;
&lt;p&gt;而 JavaScript 作为一种客户端脚本语言,和传统编程语言 OC、Java 等相比,没有诸如 Xcode\Eclipse等集成开发调试环境,好在 JS 有较为丰富的测试单元测试框架:Buster.js\TestSwarm\JsTestDriver\Jasmine 等&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;单元测试:Qunit\、Jasmine\Mocha&lt;/li&gt;
  &lt;li&gt;Jasmine: JS 测试框架,可进行单元测试等&lt;/li&gt;
  &lt;li&gt;Karma:自动化完成单元测试并执行代码覆盖率检测&lt;/li&gt;
  &lt;li&gt;Travis:完成基于github平台的CI持续集成&lt;/li&gt;
  &lt;li&gt;Jenkins: 自动化的构建&lt;/li&gt;
  &lt;li&gt;fir-cli: fir.im提供的简单工具,支持命令行进行打包分发&lt;/li&gt;
  &lt;li&gt;fir.im: http://fir.im__ 应用分发:目前支持 Android 和 iOS 应用的分发。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section-8&quot;&gt;持续集成平台&lt;/h2&gt;

&lt;p&gt;这里列出的持续集成工具都是基于云平台的，因为自己搭建类似Jenkins这样的持续集成环境代价高昂。&lt;/p&gt;

&lt;p&gt;下面的列表是目前支持iOS的主流CI(持续集成)平台。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Travis CI&lt;/li&gt;
  &lt;li&gt;Ship.io&lt;/li&gt;
  &lt;li&gt;Sauce Labs&lt;/li&gt;
  &lt;li&gt;Bitrise&lt;/li&gt;
  &lt;li&gt;Testdroid&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;http://img.hb.aicdn.com/5183a312b542649b19abe9a5ed5d89de3554efd015523-WlVqgO_fw658&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;continuous-integration-ci&quot;&gt;持续集成(Continuous Integration) CI&lt;/h2&gt;

&lt;p&gt;持续集成是指个人开发的模块,向项目主体交付，频繁进行集成以便更快地发现其中的错误。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;全面的自动化测试。这是实践持续集成&amp;amp;持续部署的基础，同时，选择合适的自动化测试工具也极其重要；&lt;/li&gt;
  &lt;li&gt;灵活的基础设施。容器，虚拟机的存在让开发人员和 QA 人员不必再大费周折；&lt;/li&gt;
  &lt;li&gt;版本控制工具。如 Git，CVS，SVN 等；&lt;/li&gt;
  &lt;li&gt;自动化的构建和软件发布流程的工具，如 Jenkins，flow.ci；&lt;/li&gt;
  &lt;li&gt;反馈机制。如构建/测试的失败，可以快速地反馈到相关负责人，以尽快解决达到一个更稳定的版本。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;continuous-delivery&quot;&gt;持续交付 Continuous Delivery&lt;/h2&gt;

&lt;p&gt;持续交付在持续集成的基础上，将集成后的代码部署到更贴近真实运行环境的「类生产环境」（production-like environments）中。持续交付优先于整个产品生命周期的软件部署，建立在高水平自动化持续集成之上。
持续交付的好处
持续交付和持续集成的优点非常相似：&lt;/p&gt;

&lt;p&gt;快速发布。能够应对业务需求，并更快地实现软件价值。
编码-&amp;gt;测试-&amp;gt;上线-&amp;gt;交付的频繁迭代周期缩短，同时获得迅速反馈；
高质量的软件发布标准。整个交付过程标准化、可重复、可靠，
整个交付过程进度可视化，方便团队人员了解项目成熟度；
更先进的团队协作方式。从需求分析、产品的用户体验到交互 设计、开发、测试、运维等角色密切协作，相比于传统的瀑布式软件团队，更少浪费。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.itgo.me/a/x9151986573431569483&quot;&gt;构建iOS持续集成平台（三）——CI服务器与自动化部署&lt;/a&gt;
&lt;a href=&quot;http://blog.fir.im/fir_im_weekly160505/&quot;&gt;fir.im weekly - 「 持续集成 」实践教程合集&lt;/a&gt;
&lt;a href=&quot;http://blog.flow.ci/cicd_difference/&quot;&gt;谈谈持续集成，持续交付，持续部署之间的区别&lt;/a&gt;
&lt;a href=&quot;http://blog.caoyue.me/post/react-native-travis-ci-ios&quot;&gt;使用Travis CI自动部署React Native项目（iOS篇）&lt;/a&gt;
&lt;a href=&quot;http://www.infoq.com/cn/articles/build-ios-continuous-integration-platform-part3&quot;&gt;构建iOS持续集成平台（三）——CI服务器与自动化部署&lt;/a&gt;
…
&lt;a href=&quot;https://objccn.io/issue-6-5/&quot;&gt;为 iOS 建立 Travis CI&lt;/a&gt;
&lt;a href=&quot;https://gold.xitu.io/entry/57a982d10a2b58005869d8dc&quot;&gt;iOS 持续集成 –Travis CI + Fir.im 自动编译发布&lt;/a&gt;
&lt;a href=&quot;http://yeziahehe.com/2016/08/07/use_travis_ci_for_ios_project/&quot;&gt;iOS 持续集成–Travis CI + Fir.im自动编译发布&lt;/a&gt;
&lt;a href=&quot;https://objccn.io/issue-6-5/&quot;&gt;为 iOS 建立 Travis CI&lt;/a&gt;
&lt;a href=&quot;https://docs.docker.com/docker-hub/builds/&quot;&gt;在Docker Hub上配置自动构建&lt;/a&gt;
&lt;a href=&quot;http://www.jianshu.com/p/19c2b13e81fa&quot;&gt;利用pod trunk发布程序&lt;/a&gt;
&lt;a href=&quot;http://www.55118885.com/w/166141242.html&quot;&gt;使用GitLab来实现IOS项目的持续集成CI&lt;/a&gt;
&lt;a href=&quot;http://blog.fir.im/jenkinsgithubfir_cli-xing-ming-ling-cong-yuan-ma-dao-fir-im/&quot;&gt;Jenkins + GitHub + fir-cli 一行命令从源码到 fir.im&lt;/a&gt;
&lt;a href=&quot;http://www.2cto.com/kf/201411/356826.html&quot;&gt;用持续集成工具Travis进行构建和部署&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;firim&quot;&gt;fir.im&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;http://www.jianshu.com/p/f17caec72f0b&quot;&gt;使用 fir CLI插件上传 Swift 应用至fir.im&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;travis&quot;&gt;Travis&lt;/h4&gt;
&lt;p&gt;相关的文章:&lt;a href=&quot;https://blog.jamespan.me/2015/11/01/ci-your-hexo-blog&quot;&gt;Travis&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;continuous-deployment&quot;&gt;持续部署 Continuous Deployment&lt;/h2&gt;

&lt;h3 id=&quot;fastlane-&quot;&gt;fastlane 解决持续部署问题&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://fastlane.tools/&quot;&gt;官网&lt;/a&gt;
&lt;a href=&quot;https://github.com/fastlane/fastlane&quot;&gt;github&lt;/a&gt;
&lt;a href=&quot;https://zespia.tw/blog/2015/01/21/continuous-deployment-to-github-with-travis/&quot;&gt;用 Travis CI 自動部署網站到 GitHub&lt;/a&gt;
在实际开发中,iOS开发\打包\发布流程:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;开发项目,单元测试&lt;/li&gt;
  &lt;li&gt;模块开发,集成\UI 测试&lt;/li&gt;
  &lt;li&gt;Archive项目&lt;/li&gt;
  &lt;li&gt;上传包到iTunes&lt;/li&gt;
  &lt;li&gt;在iTunes后台提交版本截图\描述等信息(也可以在测试完成后配置)&lt;/li&gt;
  &lt;li&gt;配置TestFlight,分发测试Beta版&lt;/li&gt;
  &lt;li&gt;测试,改 bug&lt;/li&gt;
  &lt;li&gt;测试完成,提交App Store审核&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;以上步骤虽然看着不多,但是每一步都有可能是一个大坑~
其实可以使用 fastlane 解决以上问题;fastlane是一个完全开源的项目，现在被Twitter收购，是Fabric的一部分，主要是提供自动化构建和发布的一系列的工具集合，他包括iOS和Android工具集，由于我们只在iOS上使用，所以这里仅介绍一下iOS相关的工具：&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;deliver: 上传应用截图、metadata信息和ipa包到iTunes，提交审核
snapshot: 在所有分辨率的iOS设备上截图并上传iTunes
frameit: 快速地把应用截图放入设备框里
pem: 自动生成推送使用到的的profiles
sigh: 创建、更新、下载和修复provisioning profiles，支持App Store, Ad Hoc, Development和企业profiles，而且可以自动添加测试设备UDID
produce: 使用命令行在iTunes和Dev后台创建iOS app
cert: 自动化创建和维护你的iOS签名证书
pilot: 管理TestFlight的测试版本和测试设备
boarding: 自动创建一个表单来邀请参与TestFlight的用户
gym: 编译、打包iOS app，生成签名的ipa文件
match: 通过git在团队中共享和同步你的证书和profiles，避免团队开发经常遇到的iOS证书不一致的蛋疼问题
scan: 跑测试用例
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;上述gym, sigh, match等几个工具可以说是极大提高效率的神器。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;http://ios.jobbole.com/87803/&quot;&gt;使用 TestFlight 进行 App Beta 版测试&lt;/a&gt;
&lt;a href=&quot;http://www.jianshu.com/p/27545c2d4d8b&quot;&gt;使用TestFlight进行App构建版本测试&lt;/a&gt;
&lt;a href=&quot;https://onevcat.com/2012/01/testflight/&quot;&gt;onevcat testflight&lt;/a&gt;
持续部署是指当交付的代码通过评审之后，自动部署到生产环境中。持续部署是持续交付的最高阶段。这意味着，所有通过了一系列的自动化测试的改动都将自动部署到生产环境。它也可以被称为“Continuous Release”。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;section-9&quot;&gt;自动发布&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Fastlane 是一组工具套件,旨在实现iOS应用发布流程的自动化，并且提供一个运行良好的持续部署流程.&lt;/li&gt;
  &lt;li&gt;使用场景: push 时执行单元测试,集成测试;创建屏幕截图发给客户;构建分发 Beta 版本;构建并分发到 appstore;&lt;/li&gt;
  &lt;li&gt;支持与Jenkins和CocoaPods，xctools等其他第三方工具的集成&lt;/li&gt;
  &lt;li&gt;博客教程:http://www.infoq.com/cn/news/2015/01/fastlane-ios-continuous-deploy&lt;/li&gt;
  &lt;li&gt;官方教程:https://docs.fastlane.tools/getting-started/ios/screenshots/&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;travis-ci&quot;&gt;配置Travis CI&lt;/h2&gt;

&lt;p&gt;如果你的项目是托管在 Github 上，那么 Travis CI 是做持续集成非常好的选择。在 Ruby 的世界中，Travis CI 已久负盛名，从 2013 年 4 月起，Travis 也开始支持 iOS 和 Mac 平台。&lt;/p&gt;

&lt;p&gt;首先需要将 github 的项目与 Travis 进行关联,&lt;/p&gt;

</description>
        <pubDate>Fri, 13 Jan 2017 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2017/01/13/Travis-CI/</link>
        <guid isPermaLink="true">http://localhost:4000/2017/01/13/Travis-CI/</guid>
        
        <category>Github</category>
        
        <category>Travis-CI</category>
        
        
        <category>CI</category>
        
      </item>
    
      <item>
        <title>持续集成系列 - App 内测分发平台之 OTA </title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#section&quot; id=&quot;markdown-toc-section&quot;&gt;剩下的任务就是: 如何通过脚本,将项目打包,并上传的服务器??????????&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#newitemforgitlab--&quot; id=&quot;markdown-toc-newitemforgitlab--&quot;&gt;newItemForGitlab 项目已经可以正确的运行了,关键就是 打包编译的问题//////&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#section-1&quot; id=&quot;markdown-toc-section-1&quot;&gt;前言&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#section-2&quot; id=&quot;markdown-toc-section-2&quot;&gt;构建内测分发平台;&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#web&quot; id=&quot;markdown-toc-web&quot;&gt;1. 在web服务器上部署好目录结构&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#jenkins&quot; id=&quot;markdown-toc-jenkins&quot;&gt;2. 在jenkins中用简单的脚本实现这个过程&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;section&quot;&gt;剩下的任务就是: 如何通过脚本,将项目打包,并上传的服务器??????????&lt;/h1&gt;
&lt;h1 id=&quot;newitemforgitlab--&quot;&gt;newItemForGitlab 项目已经可以正确的运行了,关键就是 打包编译的问题//////&lt;/h1&gt;

&lt;h3 id=&quot;section-1&quot;&gt;前言&lt;/h3&gt;

&lt;p&gt;目标是:建立自己的移动应用内测分发平台.方便测试人员快速的获取到最新的测试包.&lt;/p&gt;

&lt;p&gt;流程:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;通过脚本,自动将项目打包编译,生成 AdHoc 版本的 ipa&lt;/li&gt;
  &lt;li&gt;脚本自动上传 ipa 到公司内网的服务器&lt;/li&gt;
  &lt;li&gt;然后邮件通知相关人员,邮件中内置 url&lt;/li&gt;
  &lt;li&gt;在 Safari 中点开url,直接安装内测版本&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;注意事项:必要3条件&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;ol&gt;
      &lt;li&gt;AdHoc 版 ipa 文件&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;ol&gt;
      &lt;li&gt;AdHoc 版 plist 文件&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;如果是使用 Xcode 打包,会自动生成上述的两个文件,当然也可以使用脚本生成.plist 文件内容如下(小结末尾)&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;ol&gt;
      &lt;li&gt;一个内测发布页面&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;目的是提供一个&lt;code class=&quot;highlighter-rouge&quot;&gt;itms-services://&lt;/code&gt;协议的链接,让用户访问这个链接即可实现在线安装.一个最简单的html页面就是下面这样:&lt;/p&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;itms-services://?action=download-manifest&amp;amp;url=https://1192.168.117.39/apps/manifest.plist&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  Download ADDemo
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;&amp;lt;!-- 或者这样 --&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;itms-services://?action=download-manifest&amp;amp;url=https://xxx.xxx.xxx/xxx.plist&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Install App&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;  
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;整个OTA的核心就是苹果的itms-services协议， safari通过解析类似于itms-services://?action=download-manifest&amp;amp;url=https://xxx.xxx.xxx/xxxx.plist 这样的一个链接来实现在线安装。url就是你的*.plist文件所在的地址，在iOS7.1以前，这个url是没有限制的，在7.1之后，苹果做了修改，要求这个url必须是可信任的https链接。其他地方的链接并没有要求。&lt;/p&gt;

&lt;p&gt;OTA就是over the air,是一种无线发布方式,它可以实现app的在线安装,不再需要数据线.&lt;/p&gt;

&lt;p&gt;而对于 https,方案有:自己公司搭建;使用三方的云盘(hppts的,将 ipa 传上去);自己配置.
更详细的内容参考:&lt;a href=&quot;http://blog.csdn.net/close_marty/article/details/38441903&quot;&gt;iOS通过OTA方式分发应用的实现&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;相关资料:
1.plist 文件的内容为:&lt;/p&gt;
&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&amp;gt;&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE plist PUBLIC &quot;-//Apple//DTD PLIST 1.0//EN&quot; &quot;http://www.apple.com/DTDs/PropertyList-1.0.dtd&quot;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;plist&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;version=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;1.0&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;dict&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;key&amp;gt;&lt;/span&gt;items&lt;span class=&quot;nt&quot;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;array&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;dict&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;key&amp;gt;&lt;/span&gt;assets&lt;span class=&quot;nt&quot;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;array&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;dict&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;nt&quot;&gt;&amp;lt;key&amp;gt;&lt;/span&gt;kind&lt;span class=&quot;nt&quot;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;nt&quot;&gt;&amp;lt;string&amp;gt;&lt;/span&gt;software-package&lt;span class=&quot;nt&quot;&gt;&amp;lt;/string&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;nt&quot;&gt;&amp;lt;key&amp;gt;&lt;/span&gt;url&lt;span class=&quot;nt&quot;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;nt&quot;&gt;&amp;lt;string&amp;gt;&lt;/span&gt;https://192.168.117.39/apps/app.ipa&lt;span class=&quot;nt&quot;&gt;&amp;lt;/string&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- 这里是服务器上的 ipa 的地址--&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;/dict&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;dict&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;nt&quot;&gt;&amp;lt;key&amp;gt;&lt;/span&gt;kind&lt;span class=&quot;nt&quot;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;nt&quot;&gt;&amp;lt;string&amp;gt;&lt;/span&gt;display-image&lt;span class=&quot;nt&quot;&gt;&amp;lt;/string&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;nt&quot;&gt;&amp;lt;key&amp;gt;&lt;/span&gt;url&lt;span class=&quot;nt&quot;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;nt&quot;&gt;&amp;lt;string&amp;gt;&lt;/span&gt;https://avatar.csdn.net/F/2/A/1_close_marty.jpg&lt;span class=&quot;nt&quot;&gt;&amp;lt;/string&amp;gt;&lt;/span&gt;
                     &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- 这是展示图片--&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;/dict&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;dict&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;nt&quot;&gt;&amp;lt;key&amp;gt;&lt;/span&gt;kind&lt;span class=&quot;nt&quot;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;nt&quot;&gt;&amp;lt;string&amp;gt;&lt;/span&gt;full-size-image&lt;span class=&quot;nt&quot;&gt;&amp;lt;/string&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;nt&quot;&gt;&amp;lt;key&amp;gt;&lt;/span&gt;url&lt;span class=&quot;nt&quot;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;nt&quot;&gt;&amp;lt;string&amp;gt;&lt;/span&gt;https://avatar.csdn.net/F/2/A/1_close_marty.jpg&lt;span class=&quot;nt&quot;&gt;&amp;lt;/string&amp;gt;&lt;/span&gt;
                     &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- 这是展示图片--&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;/dict&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;/array&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;key&amp;gt;&lt;/span&gt;metadata&lt;span class=&quot;nt&quot;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- 如果是放在服务器上,以下的 内容要写成动态的 --&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;dict&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;key&amp;gt;&lt;/span&gt;bundle-identifier&lt;span class=&quot;nt&quot;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;string&amp;gt;&lt;/span&gt;${BUNDLE_IDENTIFIER}&lt;span class=&quot;nt&quot;&gt;&amp;lt;/string&amp;gt;&lt;/span&gt;  
                &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- &amp;lt;string&amp;gt;com.3code.ADDemo&amp;lt;/string&amp;gt; --&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;key&amp;gt;&lt;/span&gt;bundle-version&lt;span class=&quot;nt&quot;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;string&amp;gt;&lt;/span&gt;${APPLICATION_VERSION}&lt;span class=&quot;nt&quot;&gt;&amp;lt;/string&amp;gt;&lt;/span&gt;  
                &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- &amp;lt;string&amp;gt;1.0&amp;lt;/string&amp;gt; --&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;key&amp;gt;&lt;/span&gt;kind&lt;span class=&quot;nt&quot;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;string&amp;gt;&lt;/span&gt;software&lt;span class=&quot;nt&quot;&gt;&amp;lt;/string&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;key&amp;gt;&lt;/span&gt;title&lt;span class=&quot;nt&quot;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;string&amp;gt;&lt;/span&gt;${DISPLAY_NAME}&lt;span class=&quot;nt&quot;&gt;&amp;lt;/string&amp;gt;&lt;/span&gt;  
                &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- &amp;lt;string&amp;gt;AD_Demo&amp;lt;/string&amp;gt; --&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;/dict&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/dict&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/array&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/dict&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/plist&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;web 页面的参考代码:&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;http-equiv=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Content-Type&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text/html; charset=iso-8859-1&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;viewport&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt; 
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Install Geoloqi&lt;span class=&quot;nt&quot;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;style &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text/css&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;body&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nl&quot;&gt;background&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;sx&quot;&gt;url(bkg.png)&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;repeat&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;#c5ccd4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;nl&quot;&gt;font-family&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Helvetica&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;sans-serif&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;nc&quot;&gt;.congrats&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nl&quot;&gt;font-size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;16pt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;nl&quot;&gt;padding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;6px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;nl&quot;&gt;text-align&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;center&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;nc&quot;&gt;.step&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nl&quot;&gt;background&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;white&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;nl&quot;&gt;border&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1px&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;#ccc&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;solid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;nl&quot;&gt;border-radius&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;14px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;nl&quot;&gt;padding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;4px&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;10px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;nl&quot;&gt;margin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;10px&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;nc&quot;&gt;.instructions&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nl&quot;&gt;font-size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;10pt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;nc&quot;&gt;.arrow&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nl&quot;&gt;font-size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;15pt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;table&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nl&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;100%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;congrats&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Congrats! You've been invited to the beta of Geoloqi.&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;step&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;table&amp;gt;&amp;lt;tr&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;td&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;instructions&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Install the&lt;span class=&quot;nt&quot;&gt;&amp;lt;br&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;Geoloqi app&lt;span class=&quot;nt&quot;&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;td&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;24&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;arrow&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;ni&quot;&gt;&amp;amp;rarr;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;td&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;57&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;imagelink&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;itms-services://?action=download-manifest&amp;amp;url=http://loqi.me/app/Geoloqi.plist&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;img&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;geoloqi-icon.png&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;57&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;57&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/tr&amp;gt;&amp;lt;/table&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;3.证书的配置,&lt;a href=&quot;http://blog.csdn.net/close_marty/article/details/38441903&quot;&gt;参见&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;OK ,以上是基本的知识储备.&lt;/p&gt;

&lt;h3 id=&quot;section-2&quot;&gt;构建内测分发平台;&lt;/h3&gt;

&lt;p&gt;整过程就是: Jenkins 构建成功后发送邮件给相关人员,邮件中附带二维码,其他人员扫描二维码访问install.html页面,点击即可自动安装最新的app.&lt;/p&gt;

&lt;h5 id=&quot;web&quot;&gt;1. 在web服务器上部署好目录结构&lt;/h5&gt;

&lt;p&gt;&lt;img src=&quot;http://img.blog.csdn.net/20140814162711381?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY2xvc2VfbWFydHk=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;其中：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;install.html 是一个非常简单的发布页面，这个页面的地址固定不变，其他人就总是通过访问 http://xxx.xxx.xxx/ota/install.html 来实现所有操作。&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;style=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text-align:center;margin-top:50px&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://xxx.xxx.xxx/ota/ca.crt&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;style=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;font-size:70px;&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Install Root Certificate&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;  
&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;style=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text-align:center;margin-top:100px&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;itms-services://?action=download-manifest&amp;amp;url=https://xxx.xxx.xxx/ota/iPhone/iPhoneOTA.plist&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;style=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;font-size:70px;&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Install iPhone App&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;  
&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;style=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text-align:center;margin-top:100px&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;itms-services://?action=download-manifest&amp;amp;url=https://xxx.xxx.xxx/ota/iPad/iPadOTA.plist&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;style=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;font-size:70px;&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Install iPad App&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;iPad和iPhone 目录中是各自对应的最新ipa文件 (通过脚本生成,然后上传过来的)&lt;/li&gt;
  &lt;li&gt;otabuddy.sh 用来根据ipa自动生成plist文件, 脚本地址如下AA1:&lt;/li&gt;
  &lt;li&gt;ca.crt是给https连接对应的服务器证书签名的根证书。 具体 &lt;a href=&quot;http://blog.csdn.net/close_marty/article/details/38441903&quot;&gt;参考这里&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/sveinungkb/ios-ota-buddy&quot;&gt;AA1:脚本&lt;/a&gt;
&lt;a href=&quot;https://github.com/Mr3C/ios-ota-buddy&quot;&gt;AA1:备份脚本&lt;/a&gt;&lt;/p&gt;

&lt;h5 id=&quot;jenkins&quot;&gt;2. 在jenkins中用简单的脚本实现这个过程&lt;/h5&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#将二维码放到对应job的根目录下,便于作为邮件附件发送。install.png就是install.html的url对应的二维码  &lt;/span&gt;
cp /Users/marty/.jenkins/workspace/install.png /Users/marty/.jenkins/workspace/xxxx/  
&lt;span class=&quot;c&quot;&gt;#删除已有的ipa和plist  &lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; /Library/WebServer/Documents/ota/iPad/  
rm -rf &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.ipa  
rm -rf &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.plist  
&lt;span class=&quot;c&quot;&gt;#把最新的ipa从jenkins工作目录复制到web服务器工作目录  &lt;/span&gt;
cp /Users/marty/.jenkins/workspace/xxxx/bin/&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.ipa /Library/WebServer/Documents/ota/iPad/  
&lt;span class=&quot;c&quot;&gt;#生成Plist文件，plist文件采用固定名称。  &lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;ipaName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;ls |grep ipa&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;  
./otabuddy.sh plist &lt;span class=&quot;nv&quot;&gt;$ipaName&lt;/span&gt; http://xxx.xxx.xxx/ota/iPad/&lt;span class=&quot;nv&quot;&gt;$ipaName&lt;/span&gt; iPadOTA.plist  
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;在构建成功的邮件中增加一个附件，附件就是二维码
&lt;img src=&quot;http://img.blog.csdn.net/20140814161647302&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;其他资料:
-&lt;a href=&quot;http://skyseraph.com/2016/07/18/Tools/Jenkins%20Gitlab%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90%E6%89%93%E5%8C%85%E5%B9%B3%E5%8F%B0%E6%90%AD%E5%BB%BA/&quot;&gt;优秀教程: Jenkins Gitlab持续集成打包平台搭建&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/skyseraph/PlistAutoCreate&quot;&gt;用于iOS应用程序的自动创建plist和html发布文件的shell脚本&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;参考&lt;a href=&quot;http://blog.csdn.net/close_marty/article/details/38441903&quot;&gt;&lt;/a&gt;&lt;/p&gt;

</description>
        <pubDate>Mon, 09 Jan 2017 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2017/01/09/AD-iOS-OTA/</link>
        <guid isPermaLink="true">http://localhost:4000/2017/01/09/AD-iOS-OTA/</guid>
        
        <category>OTA</category>
        
        
        <category>CI</category>
        
      </item>
    
      <item>
        <title>Swift 版 AwesomeMenu 的改写之旅:SDiffuseMenu</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#section&quot; id=&quot;markdown-toc-section&quot;&gt;一、使用方法：&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#section-1&quot; id=&quot;markdown-toc-section-1&quot;&gt;1、添加协议&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#section-2&quot; id=&quot;markdown-toc-section-2&quot;&gt;2、设置菜单的选项按钮数据&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#section-3&quot; id=&quot;markdown-toc-section-3&quot;&gt;3、设置菜单按钮&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#sdiffusemenu&quot; id=&quot;markdown-toc-sdiffusemenu&quot;&gt;4、添加 SDiffuseMenu&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#section-4&quot; id=&quot;markdown-toc-section-4&quot;&gt;5、动画配置&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#section-5&quot; id=&quot;markdown-toc-section-5&quot;&gt;6、动画过程监听&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#swift&quot; id=&quot;markdown-toc-swift&quot;&gt;二、Swift转写之旅&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#capropertyanimation&quot; id=&quot;markdown-toc-capropertyanimation&quot;&gt;1、CAPropertyAnimation动画&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#section-6&quot; id=&quot;markdown-toc-section-6&quot;&gt;2、动画分析&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#section-7&quot; id=&quot;markdown-toc-section-7&quot;&gt;2.1、单个选项关闭动画分析：&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#section-8&quot; id=&quot;markdown-toc-section-8&quot;&gt;2.2、整体动画的控制&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#section-9&quot; id=&quot;markdown-toc-section-9&quot;&gt;3、事件响应链&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;本动画是 Swift 版的 AwesomeMenu,如需OC版还请移步&lt;a href=&quot;https://github.com/levey/AwesomeMenu&quot;&gt;这里&lt;/a&gt;。&lt;/p&gt;

  &lt;p&gt;SDiffuseMenu 当前版本 V1.2.1,代码&lt;a href=&quot;https://github.com/mythkiven/DiffuseMenu_Swift&quot;&gt;请戳这里&lt;/a&gt;&lt;/p&gt;

  &lt;p&gt;SDiffuseMenu 嵌入 pod ‘SDiffuseMenu’, ‘~&amp;gt; 1.2.1’&lt;/p&gt;

&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;动画效果如下:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/mythkiven/DiffuseMenu_Swift/master/Source/SDiffuseMenu.gif&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;配置图如下:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/mythkiven/DiffuseMenu_Swift/master/Source/settingAngle.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;section&quot;&gt;一、使用方法：&lt;/h2&gt;

&lt;p&gt;添加协议(动画状态回调) -&amp;gt; 设置选项数组 -&amp;gt; 设置菜单按钮 -&amp;gt; 动画属性配置 -&amp;gt; .addSubview(menu)&lt;/p&gt;

&lt;h4 id=&quot;section-1&quot;&gt;1、添加协议&lt;/h4&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;ViewController&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;UIViewController&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;SDiffuseMenuDelegate&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;menu&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;SDiffuseMenu&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;section-2&quot;&gt;2、设置菜单的选项按钮数据&lt;/h4&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// 加载图片&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;guard&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;storyMenuItemImage&lt;/span&gt;            &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;  &lt;span class=&quot;kt&quot;&gt;UIImage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;named&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;menuitem-normal.png&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;         &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;fatalError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;图片加载失败&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;guard&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;storyMenuItemImagePressed&lt;/span&gt;     &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;  &lt;span class=&quot;kt&quot;&gt;UIImage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;named&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;menuitem-highlighted.png&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;fatalError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;图片加载失败&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;guard&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;starImage&lt;/span&gt;                     &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;  &lt;span class=&quot;kt&quot;&gt;UIImage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;named&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;star.png&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;                    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;fatalError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;图片加载失败&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;guard&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;starItemNormalImage&lt;/span&gt;           &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;  &lt;span class=&quot;kt&quot;&gt;UIImage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;named&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;addbutton-normal.png&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;        &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;fatalError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;图片加载失败&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;guard&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;starItemLightedImage&lt;/span&gt;          &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;  &lt;span class=&quot;kt&quot;&gt;UIImage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;named&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;addbutton-highlighted.png&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;   &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;fatalError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;图片加载失败&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;guard&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;starItemContentImage&lt;/span&gt;          &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;  &lt;span class=&quot;kt&quot;&gt;UIImage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;named&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;plus-normal.png&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;             &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;fatalError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;图片加载失败&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;guard&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;starItemContentLightedImage&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;  &lt;span class=&quot;kt&quot;&gt;UIImage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;named&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;plus-highlighted.png&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;        &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;fatalError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;图片加载失败&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;menus&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;SDiffuseMenuItem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]()&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;..&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;starMenuItem&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;  &lt;span class=&quot;kt&quot;&gt;SDiffuseMenuItem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;storyMenuItemImage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                                         &lt;span class=&quot;nv&quot;&gt;highlightedImage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;storyMenuItemImagePressed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
                                         &lt;span class=&quot;nv&quot;&gt;contentImage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;starImage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                                         &lt;span class=&quot;nv&quot;&gt;highlightedContentImage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;nil&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;menus&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;starMenuItem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;section-3&quot;&gt;3、设置菜单按钮&lt;/h4&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;startItem&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;SDiffuseMenuItem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;starItemNormalImage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                                 &lt;span class=&quot;nv&quot;&gt;highlightedImage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;starItemLightedImage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                                 &lt;span class=&quot;nv&quot;&gt;contentImage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;starItemContentImage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                                 &lt;span class=&quot;nv&quot;&gt;highlightedContentImage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;starItemContentLightedImage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;sdiffusemenu&quot;&gt;4、添加 SDiffuseMenu&lt;/h4&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;menuRect&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;CGRect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;menuView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bounds&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                           &lt;span class=&quot;nv&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;menuView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bounds&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                           &lt;span class=&quot;nv&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;menuView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bounds&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                           &lt;span class=&quot;nv&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;menuView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bounds&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;menu&lt;/span&gt;          &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;  &lt;span class=&quot;kt&quot;&gt;SDiffuseMenu&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;frame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;menuRect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                          &lt;span class=&quot;nv&quot;&gt;startItem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;startItem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                         &lt;span class=&quot;nv&quot;&gt;menusArray&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;menus&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;NSArray&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                          &lt;span class=&quot;nv&quot;&gt;grapyType&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;SDiffuseMenu&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;SDiffuseMenuGrapyType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;menu&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;center&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;menuView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;center&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;menu&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;delegate&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;menuView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addSubview&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;menu&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;section-4&quot;&gt;5、动画配置&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;如果配置弧线形动画,则动画中弧线半径变化为:0–&amp;gt; 最大 farRadius–&amp;gt; 最小 nearRadius–&amp;gt; 结束 endRadius&lt;/li&gt;
  &lt;li&gt;如果配置直线形动画,则动画中半径就是直线段的长度,变化为:0–&amp;gt; 最大 farRadius–&amp;gt; 最小 nearRadius–&amp;gt;结束 endRadius&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// 动画时长&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;menu&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;animationDuration&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;CFTimeInterval&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;animationDrationValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 最小半径&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;menu&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nearRadius&lt;/span&gt;         &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;CGFloat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nearRadiusValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;NSString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;floatValue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 结束半径&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;menu&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;endRadius&lt;/span&gt;          &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;CGFloat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;endRadiusValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;NSString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;floatValue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 最大半径&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;menu&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;farRadius&lt;/span&gt;          &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;CGFloat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;farRadiusValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;NSString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;floatValue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 单个动画间隔时间&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;menu&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;timeOffset&lt;/span&gt;         &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;CFTimeInterval&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;timeOffSetValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 整体角度&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;menu&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;menuWholeAngle&lt;/span&gt;     &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;CGFloat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;menuWholeAngleValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;NSString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;floatValue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 整体偏移角度&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;menu&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rotateAngle&lt;/span&gt;        &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;CGFloat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rotateAngleValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;NSString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;floatValue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 展开时自旋角度&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;menu&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;expandRotation&lt;/span&gt;     &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;CGFloat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;M_PI&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 结束时自旋角度&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;menu&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;closeRotation&lt;/span&gt;      &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;CGFloat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;M_PI&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 是否旋转菜单按钮&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;menu&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rotateAddButton&lt;/span&gt;    &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rotateAddButton&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;isOn&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 菜单按钮旋转角度&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;menu&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rotateAddButtonAngle&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;CGFloat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rotateAddButtonAngleValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;NSString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;floatValue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 菜单展示的形状:直线 or 弧形&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;menu&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sDiffuseMenuGrapyType&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;isLineGrapyType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;isOn&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arc&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// 为方便使用,V1.1.0版本已枚举常见方位,可直接使用,无需再次设置 rotateAngle &amp;amp;&amp;amp; menuWholeAngle&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 若对于 rotateAngle\menuWholeAngle 不熟悉,建议查看 source 目录下的配置图片&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;menu&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sDiffuseMenuDirection&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;above&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 上方180°&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//        menu.sDiffuseMenuDirection = .left // 左方180°&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//        menu.sDiffuseMenuDirection = .below // 下方180°&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//        menu.sDiffuseMenuDirection = .right // 右方180°&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//        menu.sDiffuseMenuDirection = .upperRight // 右上方90°&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//        menu.sDiffuseMenuDirection = .lowerRight // 右下方90°&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//        menu.sDiffuseMenuDirection = .upperLeft // 左上方90°&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//        menu.sDiffuseMenuDirection = .lowerLeft // 左下方90°&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;section-5&quot;&gt;6、动画过程监听&lt;/h4&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;SDiffuseMenuDidSelectMenuItem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;menu&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;SDiffuseMenu&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;didSelectIndex&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nf&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;选中按钮 at index:&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; is: &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;menu&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;menuItemAtIndex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;SDiffuseMenuDidClose&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;menu&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;SDiffuseMenu&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nf&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;菜单关闭动画结束&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;SDiffuseMenuDidOpen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;menu&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;SDiffuseMenu&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nf&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;菜单展开动画结束&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;SDiffuseMenuWillOpen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;menu&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;SDiffuseMenu&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nf&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;菜单将要展开&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;SDiffuseMenuWillClose&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;menu&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;SDiffuseMenu&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nf&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;菜单将要关闭&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;swift&quot;&gt;二、Swift转写之旅&lt;/h2&gt;

&lt;p&gt;总的来说,动画的原理还是比较简单的,主要涉及到的知识点是 CABasicAnimation、CAKeyframeAnimation 以及事件响应链相关知识,下边分两部分介绍&lt;/p&gt;

&lt;h3 id=&quot;capropertyanimation&quot;&gt;1、CAPropertyAnimation动画&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;https://developer.apple.com/library/content/documentation/Cocoa/Conceptual/Animation_Types_Timing/Art/animations_info_2x.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;在 SDiffuseMenu 中动画用 CAPropertyAnimation 的子类 CABasicAnimation 和 CAKeyframeAnimation 来实现,关于这两个子类简述如下:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;CABasicAnimation 其实可以看作是一种特殊的关键帧动画,只有头尾两个关键帧,可实现移动、旋转、缩放等基本动画;&lt;/li&gt;
  &lt;li&gt;CAKeyframeAnimation 则可以支持任意多个关键帧,关键帧有两种方式来指定,使用path或values;&lt;/li&gt;
  &lt;li&gt;
    &lt;ul&gt;
      &lt;li&gt;path 可以是 CGPathRef、CGMutablePathRef 或者贝塞尔曲线,注意的是:设置了 path 之后 values 就无效了;values 则相对灵活, 可以指定任意关键帧帧值;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;ul&gt;
      &lt;li&gt;keyTimes 可以为 values 中的关键帧设置一一对应对应的时间点,其取值范围为0到1.0,keyTimes 没有设置的时候,各个关键帧的时间是平分的;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;ul&gt;
      &lt;li&gt;..&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;更多的动画知识请戳此处 &lt;a href=&quot;https://developer.apple.com/library/content/documentation/Cocoa/Conceptual/CoreAnimation_guide/Introduction/Introduction.html#//apple_ref/doc/uid/TP40004514&quot;&gt;CoreAnimation_guide&lt;/a&gt;&lt;/p&gt;
  &lt;blockquote&gt;

    &lt;p&gt;相关的指南、示例代码可以通过点击页面右上角搜索按钮进行搜索,官方文档大多点到为止,挺适合入门学习的,更深的还需要在实践中摸索总结&lt;/p&gt;
  &lt;/blockquote&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;section-6&quot;&gt;2、动画分析&lt;/h3&gt;

&lt;p&gt;在 V1.1.0 版本中,已扩展动画的形状:新加入直线型,其原理及计算方法同弧线形,下文不做过多介绍,详情参见版本记录&lt;/p&gt;

&lt;p&gt;不论多么复杂的动画,都是由简单的动画组成的,大家先看下 SDiffuseMenu 中单选项动画：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/mythkiven/DiffuseMenu_Swift/master/Source/singleItemAnimation.gif&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;仔细分析发现可以将整个动画可以拆分为三大部分:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;菜单按钮的自旋转,通过 transform 属性即可实现;&lt;/li&gt;
  &lt;li&gt;选项按钮的整体展开动画,实际是在定时器中依次添加单个选项按钮的动画组,控制 timeInterval 来实现动画的先后执行顺序;&lt;/li&gt;
  &lt;li&gt;单个选项按钮的动画则拆分为3部分:展开动画、结束动画和点击动画,都是动画组,下边以结束动画为例,简单介绍其实现过程&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;section-7&quot;&gt;2.1、单个选项关闭动画分析：&lt;/h4&gt;

&lt;p&gt;单选项按钮关闭动画过程如下:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://ooo.0o0.ooo/2017/01/20/58817b4e6ba40.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1、自旋&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;大家仔细看会发现展开动画和结束动画的自旋转是有差异的,因为关键帧设置的不同&lt;/p&gt;

&lt;p&gt;展开动画中设置的关键帧如下,0.1对应展开角度0°,0.3对应 expandRotation 自旋角度,0.4对应0°,所以在0.3 -&amp;gt; 0.4的时间会出现较快速的自旋&lt;/p&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;rotateAnimation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;values&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;CGFloat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
                           &lt;span class=&quot;kt&quot;&gt;CGFloat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;expandRotation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
                           &lt;span class=&quot;kt&quot;&gt;CGFloat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;rotateAnimation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;keyTimes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;NSNumber&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.1&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Float&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
                           &lt;span class=&quot;kt&quot;&gt;NSNumber&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.3&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Float&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
                           &lt;span class=&quot;kt&quot;&gt;NSNumber&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.4&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Float&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;而关闭的动画中,设置为0 -&amp;gt; 0.4 慢速自旋,0.4 -&amp;gt; 0.5 快速自旋&lt;/p&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;rotateAnimation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;values&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;CGFloat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
                           &lt;span class=&quot;kt&quot;&gt;CGFloat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;closeRotation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
                           &lt;span class=&quot;kt&quot;&gt;CGFloat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;rotateAnimation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;keyTimes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;NSNumber&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.0&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Float&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
                           &lt;span class=&quot;kt&quot;&gt;NSNumber&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.4&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Float&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
                           &lt;span class=&quot;kt&quot;&gt;NSNumber&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.5&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Float&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;2、移动&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;移动的控制在于 path 是怎样设定的,代码中我写了两种方法,其中一种被注释掉&lt;/p&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;positionAnimation&lt;/span&gt;      &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;  &lt;span class=&quot;kt&quot;&gt;CAKeyframeAnimation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;keyPath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;position&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;positionAnimation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;duration&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;animationDuration&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;1)\使用贝塞尔曲线作为 path,从代码中可以明显的看出移动的路径: endPoint -&amp;gt; farPoint -&amp;gt; startPoint&lt;/p&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;path&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;UIBezierPath&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;move&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;CGPoint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;endPoint&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;endPoint&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addLine&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;CGPoint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;farPoint&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;farPoint&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addLine&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;CGPoint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;startPoint&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;startPoint&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;positionAnimation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cgPath&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;2)\使用 CGPathRef 或 GCMutablePathRef 设置路径&lt;/p&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;path&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;  &lt;span class=&quot;kt&quot;&gt;CGMutablePath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;move&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;CGPoint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;endPoint&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;endPoint&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addLine&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;CGPoint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;farPoint&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;farPoint&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addLine&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;CGPoint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;startPoint&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;startPoint&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;positionAnimation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;自旋和平移都有了,接下来要加入到动画组中：&lt;/p&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;animationgroup&lt;/span&gt;              &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;  &lt;span class=&quot;kt&quot;&gt;CAAnimationGroup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;animationgroup&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;animations&lt;/span&gt;       &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;positionAnimation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rotateAnimation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;animationgroup&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;duration&lt;/span&gt;         &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;animationDuration&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 动画结束后,layer保持最终的状态&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;animationgroup&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fillMode&lt;/span&gt;         &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;kCAFillModeForwards&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 速度控制我设置的如此,大家根据需要自行修改即可&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;animationgroup&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;timingFunction&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;CAMediaTimingFunction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;kCAMediaTimingFunctionEaseIn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 代理是为了获取到动画结束的信号&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;animationgroup&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;delegate&lt;/span&gt;         &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;最添加进 layer 即可&lt;/p&gt;
&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;layer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;animationgroup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;forKey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Close&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;其余的动画原理和上述的关闭动画其实是一样的,基于属性的动画,通过操作帧来实现我们想要的效果,小伙伴们直接看代码吧~&lt;/p&gt;

&lt;h4 id=&quot;section-8&quot;&gt;2.2、整体动画的控制&lt;/h4&gt;

&lt;p&gt;注意,整体动画的控制以上并未表述,在这个地方也需要注意下,为了让整体动画在一个合适的角度展示出来,就需要从整体上控制角度&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://ooo.0o0.ooo/2017/01/16/587c8c512c911.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;https://ooo.0o0.ooo/2017/01/16/587c8c7530072.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;https://ooo.0o0.ooo/2017/01/16/587c8c8635998.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;从上图中可以看出,整体的角度是由 menuWholeAngle 和 rotateAngle 共同控制的&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;menuWholeAngle: 控制整体动画的范围角度;&lt;/li&gt;
  &lt;li&gt;rotateAngle: 用于控制整体的偏移角度&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;为了方便理解整体角度的控制,我以结束位置为例画了CAD图,如下:
&lt;img src=&quot;https://ooo.0o0.ooo/2017/01/18/587ed1cc7e674.png&quot; alt=&quot;&quot; /&gt;
提醒:下文所述的坐标计算都是基于笛卡儿坐标系,注意与UIKit中坐标系的异同。&lt;/p&gt;

&lt;p&gt;关于上图,说明如下:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;1、图中有5个选项按钮和一个菜单按钮,整体角度是 menuWholeAngle,选项中心夹角β(见代码注释);&lt;/li&gt;
  &lt;li&gt;2、假设偏移角度 rotateAngle=0,则以红色线为坐标轴XY,下文先以此为准进行坐标计算;&lt;/li&gt;
  &lt;li&gt;3、假设整体偏移角度 rotateAngle!=0,那么以绿为坐标轴XY,其中偏移角度就是 rotateAngle&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// &lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// β = ti * menuWholeAngle / icount - CGFloat(1.0)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// β 是两个选项按钮的中心夹角&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 计算 β 正弦余弦值&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;sinValue&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;CGFloat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;sinf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Float&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ti&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;menuWholeAngle&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;icount&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;CGFloat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))))&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;cosValue&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;CGFloat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;cosf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Float&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ti&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;menuWholeAngle&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;icount&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;CGFloat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// 结束点坐标&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;x&lt;/span&gt;         &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;startPoint&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;CGFloat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;endRadius&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sinValue&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;y&lt;/span&gt;         &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;CGFloat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;startPoint&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;endRadius&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cosValue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;endPoint&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;  &lt;span class=&quot;kt&quot;&gt;CGPoint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;endPoint&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;endPoint&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// _rotateCGPointAroundCenter(endPoint, center: startPoint, angle: rotateAngle)&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// 最近点坐标,计算方法同CAD图中的结束点坐标&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;startPoint&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nearRadius&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;CGFloat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sinValue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;startPoint&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nearRadius&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;CGFloat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cosValue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;nearPoint&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;  &lt;span class=&quot;kt&quot;&gt;CGPoint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nearPoint&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nearPoint&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// _rotateCGPointAroundCenter(nearPoint, center: startPoint, angle: rotateAngle)&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// 最远点坐标,计算方法同CAD图中的结束点坐标&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;farPoint&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;  &lt;span class=&quot;kt&quot;&gt;CGPoint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;startPoint&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;farRadius&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sinValue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;startPoint&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;farRadius&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cosValue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;farPoint&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;farPoint&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//  _rotateCGPointAroundCenter(farPoint, center: startPoint, angle: rotateAngle)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;OK,上边计算了每个选项的坐标,从而确定了每个选项的 end 坐标,可以实现一个整体的动画效果。但是,请注意,上边我注释了对 ‘_rotateCGPointAroundCenter ‘的调用,使得动画的整体偏移角度为0。如果放开注释,结果会怎样？&lt;/p&gt;

&lt;p&gt;最终我们要实现的效果是可以围绕菜单选项展开任意角度的整体动画,那么只需要在以上的基础,加上坐标轴系的旋转即可。请看上图的绿色线,假设其为新的坐标系,让红色坐标系绕其旋转 rotateAngle,就相当于选项按钮整体偏移 rotateAngle,这样就可以做到任意方向的动画,如下图:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://ooo.0o0.ooo/2017/01/18/587ed9a01719d.png&quot; alt=&quot;&quot; /&gt;
偏移代码如下:&lt;/p&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;_rotateCGPointAroundCenter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;point&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;CGPoint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;center&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;CGPoint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;angle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;CGFloat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;CGPoint&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;translation&lt;/span&gt;     &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;CGAffineTransform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;translationX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;center&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;center&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;rotation&lt;/span&gt;        &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;CGAffineTransform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;rotationAngle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;angle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;transformGroup&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;translation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;inverted&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;concatenating&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rotation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;concatenating&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;translation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;point&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;applying&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;transformGroup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;那些看似复杂的动画,但如果细细分析,其实也不难哦~&lt;/p&gt;

&lt;h3 id=&quot;section-9&quot;&gt;3、事件响应链&lt;/h3&gt;

&lt;p&gt;其实这里并没有直接使用 hitTest 寻找响应 View,而是在两处使用相关的知识&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3.1、利用’point(inside point: CGPoint, with event: UIEvent?) -&amp;gt; Bool’来控制 touch 事件的分发&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;point&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;inside&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;point&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;CGPoint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;UIEvent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;?)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Bool&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// 动画中禁止 touch&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_isAnimating&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// 展开时可以 touch 任意按钮&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;expanding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; 
    &lt;span class=&quot;c1&quot;&gt;// 除上述情况外,仅菜单按钮可点击&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_startButton&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;frame&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;contains&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;point&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;3.2、增大按钮的点击区域&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;在OC中,经常遇到放大按钮点击区域或者限制 touch 区域的问题,一般可以通过设置 frame 或者利用 hitTest 处理,在 Swift 中也是一样的。在 SDiffuseMenu 中,对于点击范围的处理如下:&lt;/p&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;k&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;touchesEnded&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;touches&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Set&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;UITouch&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;UIEvent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;?)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;isHighlighted&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;location&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;touches&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;NSSet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;anyObject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;AnyObject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;in&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 点击范围&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;SDiffuseMenuItem&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;ScaleRect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bounds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;kDiffuseMenuItemDefaultTouchRange&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;contains&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;delegate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;SDiffuseMenuItemTouchesEnd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;ScaleRect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;rect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;CGRect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;CGFloat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;CGRect&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;x&lt;/span&gt;       &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;width&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;width&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;y&lt;/span&gt;       &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;height&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;height&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;width&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;width&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;height&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;height&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;
    
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;CGRect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;width&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 其中ScaleRect方法的playground版见下图&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// 增大点击范围,还可以在point方法中判断,不过就需要SDiffuseMenu.swift跟着调整了&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;下图是ScaleRect方法小测试,看着是不是很好用啊😁😁&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://ooo.0o0.ooo/2017/01/18/587f06c314ded.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

</description>
        <pubDate>Sun, 08 Jan 2017 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2017/01/08/SDiffuseMenu/</link>
        <guid isPermaLink="true">http://localhost:4000/2017/01/08/SDiffuseMenu/</guid>
        
        <category>SDiffuseMenu</category>
        
        <category>Animation</category>
        
        
        <category>Swift3.0</category>
        
      </item>
    
  </channel>
</rss>
